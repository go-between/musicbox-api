---
version: '3.4'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    restart: always
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    depends_on:
      - nginx-proxy
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam:ro
      - certs:/etc/nginx/certs
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
  db:
    image: postgres:11.5
    environment:
      POSTGRES_PASSWORD: postgrespassword
    ports: ["5432:5432"]
  app: &app-common
    build: "."
    command: bin/wait-for-it.sh db:5432 -- passenger start -p 3000 --nginx-config-template nginx.conf.erb
    environment: &app-environment
      DATABASE_URL: postgresql://postgres:postgrespassword@db
      REDIS_URL: redis://redis:6379
      SIDEKIQ_REDIS_URL: redis://redis:6379
      LOG_LEVEL: debug
      SKYLIGHT_ENABLED: "false"
      LETSENCRYPT_HOST: localhost
      VIRTUAL_HOST: localhost
      VIRTUAL_PORT: 3000
    links:
    - db
    - redis
    volumes: [".:/app"]
    ports: ["3000:3000"]
  redis:
    image: redis:5.0.3
    ports: ["6379:6379"]
  app-poll-room-queue:
    <<: *app-common
    environment:
      <<: *app-environment
      LOG_LEVEL: info
    command: bin/wait-for-it.sh db:5432 -- bin/wait-for-it.sh redis:6379 -- rake room:poll_queue
    ports: []
  app-sidekiq-workers:
    <<: *app-common
    command: bin/wait-for-it.sh db:5432 -- bin/wait-for-it.sh redis:6379 -- bundle exec sidekiq
    ports: []
    environment:
      <<: *app-environment
      DB_POOL: 1
      SIDEKIQ_CONCURRENCY: 5

volumes:
  conf:
  vhost:
  html:
  dhparam:
  certs:
  acme:

networks:
  default:
    external:
      name: nginx-proxy
