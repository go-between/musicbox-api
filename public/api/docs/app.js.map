{"version":3,"file":"app.js","sources":["../../node_modules/@glimmer/di/dist/modules/es2017/src/container.ts","../../node_modules/@glimmer/di/dist/modules/es2017/src/registry.ts","../../node_modules/@glimmer/di/dist/modules/es2017/src/owner.ts","../../node_modules/@glimmer/util/dist/modules/es2017/lib/namespaces.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/platform-utils.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/assert.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/logger.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/object-utils.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/guid.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/collections.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/list-utils.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/weakmap.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/array-utils.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/opcodes.js","../../node_modules/@glimmer/reference/dist/modules/es2017/lib/validators.js","../../node_modules/@glimmer/reference/dist/modules/es2017/lib/const.js","../../node_modules/@glimmer/reference/dist/modules/es2017/lib/iterable.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/references.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/expressions/concat.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/expressions.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/arguments.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/vm.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/dom.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/component.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/bounds.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/builder.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/component/interfaces.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/upsert.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/content.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/debugger.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/partial.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/lists.js","../../node_modules/@glimmer/wire-format/dist/modules/es2017/lib/opcodes.js","../../node_modules/@glimmer/wire-format/dist/modules/es2017/index.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/client-side.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/blocks.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiler.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/raw-block.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/builder.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/functions.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/compilable-template.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/scanner.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/environment/constants.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/sanitized-values.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/props.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compat/inner-html-fix.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compat/svg-inner-html-fix.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compat/text-node-merging-fix.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/helper.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/attribute-managers.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/environment.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/update.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/render-result.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/append.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/template.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/interfaces.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/utils.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/references/path.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/references/root.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/meta.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/references/descriptors.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/object.js","../../node_modules/@glimmer/application/dist/modules/es2017/src/application-registry.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/dynamic-scope.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/iterable.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/helpers/action.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/helpers/user-helper.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/environment.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/templates/main.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/application.ts","../../node_modules/@glimmer/resolver/node_modules/@glimmer/di/dist/modules/es2017/src/owner.ts","../../node_modules/@glimmer/resolver/node_modules/@glimmer/di/dist/modules/es2017/src/specifier.ts","../../node_modules/@glimmer/resolver/dist/modules/es2017/src/utils/debug.ts","../../node_modules/@glimmer/resolver/dist/modules/es2017/src/resolver.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/tracked.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/component.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/references.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/component-manager.ts","src/ui/components/endpoint-route/component.ts","src/ui/components/endpoint-route/template.ts","src/ui/components/eq/helper.ts","src/ui/components/if/helper.ts","src/ui/components/index-route/component.ts","src/ui/components/index-route/template.ts","../../node_modules/route-recognizer/dist/route-recognizer.es.js","src/utils/router.ts","config/environment.js","src/ui/components/jsonapi-swagger-ui/component.ts","src/ui/components/jsonapi-swagger-ui/template.ts","src/ui/components/nav-header/template.ts","src/ui/components/props/helper.ts","src/ui/components/type-check/template.ts","config/module-map.js","config/resolver-configuration.js","src/main.ts","src/index.ts"],"sourcesContent":["import { Factory, FactoryDefinition } from './factory';\nimport { RegistryReader, Injection } from './registry';\nimport { Resolver } from './resolver';\nimport { Dict } from './dict';\n\nexport default class Container {\n  private _registry: RegistryReader;\n  private _resolver: Resolver;\n  private _lookups: Dict<any>;\n  private _factoryDefinitionLookups: Dict<FactoryDefinition<any>>;\n\n  constructor(registry: RegistryReader, resolver: Resolver = null) {\n    this._registry = registry;\n    this._resolver = resolver;\n    this._lookups = {};\n    this._factoryDefinitionLookups = {};\n  }\n\n  factoryFor(specifier: string): Factory<any> {\n    let factoryDefinition: FactoryDefinition<any> = this._factoryDefinitionLookups[specifier];\n\n    if (!factoryDefinition) {\n      if (this._resolver) {\n        factoryDefinition = this._resolver.retrieve(specifier);\n      }\n\n      if (!factoryDefinition) {\n        factoryDefinition = this._registry.registration(specifier);\n      }\n\n      if (factoryDefinition) {\n        this._factoryDefinitionLookups[specifier] = factoryDefinition;\n      }\n    }\n\n    if (!factoryDefinition) {\n      return;\n    }\n\n    return this.buildFactory(specifier, factoryDefinition);\n  }\n\n  lookup(specifier: string): any {\n    let singleton = (this._registry.registeredOption(specifier, 'singleton') !== false);\n\n    if (singleton && this._lookups[specifier]) {\n      return this._lookups[specifier];\n    }\n\n    let factory = this.factoryFor(specifier);\n    if (!factory) { return; }\n\n    if (this._registry.registeredOption(specifier, 'instantiate') === false) {\n      return factory.class;\n    }\n\n    let object = factory.create();\n\n    if (singleton && object) {\n      this._lookups[specifier] = object;\n    }\n\n    return object;\n  }\n\n  defaultInjections(specifier: string): Object {\n    return {};\n  }\n\n  private buildInjections(specifier: string): Object {\n    let hash = this.defaultInjections(specifier);\n    let injections: Injection[] = this._registry.registeredInjections(specifier);\n    let injection: Injection;\n\n    for (let i = 0; i < injections.length; i++) {\n      injection = injections[i];\n      hash[injection.property] = this.lookup(injection.source);\n    }\n\n    return hash;\n  }\n\n  private buildFactory(specifier: string, factoryDefinition: FactoryDefinition<any>): Factory<any> {\n    let injections = this.buildInjections(specifier);\n\n    return {\n      class: factoryDefinition,\n      create(options) {\n        let mergedOptions = Object.assign({}, injections, options);\n\n        return factoryDefinition.create(mergedOptions);\n      }\n    }\n  }\n}\n","import { Dict } from './dict';\nimport { Factory, FactoryDefinition } from './factory';\n\nexport interface RegistrationOptions {\n  singleton?: boolean;\n  instantiate?: boolean;\n}\n\nexport interface Injection {\n  property: string,\n  source: string\n}\n\nexport interface RegistryWriter {\n  register(specifier: string, factory: any, options?: RegistrationOptions): void;\n  unregister(specifier: string): void;\n  registerOption(specifier: string, option: string, value: any): void;\n  unregisterOption(specifier: string, option: string): void;\n  registerInjection(specifier: string, property: string, source: string): void;\n}\n\nexport interface RegistryReader {\n  registration(specifier: string): any;\n  registeredOption(specifier: string, option: string): any;\n  registeredOptions(specifier: string): any;\n  registeredInjections(specifier: string): Injection[];\n}\n\nexport interface RegistryOptions {\n  fallback?: RegistryReader;\n}\n\nexport interface RegistryAccessor extends RegistryReader, RegistryWriter {}\n\nexport default class Registry implements RegistryAccessor {\n  private _registrations: Dict<FactoryDefinition<any>>;\n  private _registeredOptions: Dict<any>;\n  private _registeredInjections: Dict<Injection[]>;\n  private _fallback: RegistryReader;\n\n  constructor(options?: RegistryOptions) {\n    this._registrations = {};\n    this._registeredOptions = {};\n    this._registeredInjections = {};\n    if (options && options.fallback) {\n      this._fallback = options.fallback;\n    }\n  }\n\n  register(specifier: string, factoryDefinition: FactoryDefinition<any>, options?: RegistrationOptions): void {\n    this._registrations[specifier] = factoryDefinition;\n    if (options) {\n      this._registeredOptions[specifier] = options;\n    }\n  }\n\n  registration(specifier: string): FactoryDefinition<any> {\n    let registration = this._registrations[specifier];\n    if (registration === undefined && this._fallback) {\n      registration = this._fallback.registration(specifier);\n    }\n    return registration;\n  }\n\n  unregister(specifier: string): void {\n    delete this._registrations[specifier];\n    delete this._registeredOptions[specifier];\n    delete this._registeredInjections[specifier];\n  }\n\n  registerOption(specifier: string, option: string, value: any): void {\n    let options = this._registeredOptions[specifier];\n\n    if (!options) {\n      options = {};\n      this._registeredOptions[specifier] = options;\n    }\n\n    options[option] = value;\n  }\n\n  registeredOption(specifier: string, option: string): any {\n    let result: Boolean;\n    let options = this.registeredOptions(specifier);\n\n    if (options) {\n      result = options[option];\n    }\n\n    if (result === undefined && this._fallback !== undefined) {\n      result = this._fallback.registeredOption(specifier, option);\n    }\n\n    return result;\n  }\n\n  registeredOptions(specifier: string): any {\n    let options = this._registeredOptions[specifier];\n    if (options === undefined) {\n      let [type] = specifier.split(':');\n      options = this._registeredOptions[type];\n    }\n    return options;\n  }\n\n  unregisterOption(specifier: string, option: string): void {\n    let options = this._registeredOptions[specifier];\n\n    if (options) {\n      delete options[option];\n    }\n  }\n\n  registerInjection(specifier: string, property: string, source: string): void {\n    let injections = this._registeredInjections[specifier];\n    if (injections === undefined) {\n      this._registeredInjections[specifier] = injections = [];\n    }\n    injections.push({\n      property,\n      source\n    });\n  }\n\n  registeredInjections(specifier: string): Injection[] {\n    let [type] = specifier.split(':');\n    let injections: Injection[] = this._fallback ? this._fallback.registeredInjections(specifier) : [];\n    Array.prototype.push.apply(injections, this._registeredInjections[type]);\n    Array.prototype.push.apply(injections, this._registeredInjections[specifier]);\n    return injections;\n  }\n}\n","import { RegistrationOptions } from './registry';\nimport { Factory } from './factory';\n\n// TODO - use symbol\nexport const OWNER = '__owner__';\n\nexport function getOwner(object: Object): Owner {\n  return object[OWNER];\n}\n\nexport function setOwner(object: Object, owner: Owner): void {\n  object[OWNER] = owner;\n}\n\nexport interface Owner {\n  identify(specifier: string, referrer?: string): string;\n\n  factoryFor(specifier: string, referrer?: string): Factory<any>;\n  \n  lookup(specifier: string, referrer?: string): any;\n}\n","// There is a small whitelist of namespaced attributes specially\n// enumerated in\n// https://www.w3.org/TR/html/syntax.html#attributes-0\n//\n// > When a foreign element has one of the namespaced attributes given by\n// > the local name and namespace of the first and second cells of a row\n// > from the following table, it must be written using the name given by\n// > the third cell from the same row.\n//\n// In all other cases, colons are interpreted as a regular character\n// with no special meaning:\n//\n// > No other namespaced attribute can be expressed in the HTML syntax.\nconst XLINK = 'http://www.w3.org/1999/xlink';\nconst XML = 'http://www.w3.org/XML/1998/namespace';\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\nconst WHITELIST = {\n    'xlink:actuate': XLINK,\n    'xlink:arcrole': XLINK,\n    'xlink:href': XLINK,\n    'xlink:role': XLINK,\n    'xlink:show': XLINK,\n    'xlink:title': XLINK,\n    'xlink:type': XLINK,\n    'xml:base': XML,\n    'xml:lang': XML,\n    'xml:space': XML,\n    'xmlns': XMLNS,\n    'xmlns:xlink': XMLNS\n};\nexport function getAttrNamespace(attrName) {\n    return WHITELIST[attrName] || null;\n}","export function unwrap(val) {\n    if (val === null || val === undefined) throw new Error(`Expected value to be present`);\n    return val;\n}\nexport function expect(val, message) {\n    if (val === null || val === undefined) throw new Error(message);\n    return val;\n}\nexport function unreachable() {\n    return new Error('unreachable');\n}\nexport function typePos(lastOperand) {\n    return lastOperand - 4;\n}","// import Logger from './logger';\n// let alreadyWarned = false;\nexport function debugAssert(test, msg) {\n    // if (!alreadyWarned) {\n    //   alreadyWarned = true;\n    //   Logger.warn(\"Don't leave debug assertions on in public builds\");\n    // }\n    if (!test) {\n        throw new Error(msg || \"assertion failure\");\n    }\n}\nexport function prodAssert() {}\nexport default debugAssert;","export var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Warn\"] = 2] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n})(LogLevel || (LogLevel = {}));\nclass NullConsole {\n    log(_message) {}\n    warn(_message) {}\n    error(_message) {}\n    trace() {}\n}\nlet ALWAYS;\nexport class Logger {\n    constructor({ console, level }) {\n        this.f = ALWAYS;\n        this.force = ALWAYS;\n        this.console = console;\n        this.level = level;\n    }\n    skipped(level) {\n        return level < this.level;\n    }\n    trace(message, { stackTrace = false } = {}) {\n        if (this.skipped(LogLevel.Trace)) return;\n        this.console.log(message);\n        if (stackTrace) this.console.trace();\n    }\n    debug(message, { stackTrace = false } = {}) {\n        if (this.skipped(LogLevel.Debug)) return;\n        this.console.log(message);\n        if (stackTrace) this.console.trace();\n    }\n    warn(message, { stackTrace = false } = {}) {\n        if (this.skipped(LogLevel.Warn)) return;\n        this.console.warn(message);\n        if (stackTrace) this.console.trace();\n    }\n    error(message) {\n        if (this.skipped(LogLevel.Error)) return;\n        this.console.error(message);\n    }\n}\nlet _console = typeof console === 'undefined' ? new NullConsole() : console;\nALWAYS = new Logger({ console: _console, level: LogLevel.Trace });\nconst LOG_LEVEL = LogLevel.Debug;\nexport default new Logger({ console: _console, level: LOG_LEVEL });","const { keys: objKeys } = Object;\nexport function assign(obj) {\n    for (let i = 1; i < arguments.length; i++) {\n        let assignment = arguments[i];\n        if (assignment === null || typeof assignment !== 'object') continue;\n        let keys = objKeys(assignment);\n        for (let j = 0; j < keys.length; j++) {\n            let key = keys[j];\n            obj[key] = assignment[key];\n        }\n    }\n    return obj;\n}\nexport function fillNulls(count) {\n    let arr = new Array(count);\n    for (let i = 0; i < count; i++) {\n        arr[i] = null;\n    }\n    return arr;\n}","let GUID = 0;\nexport function initializeGuid(object) {\n    return object._guid = ++GUID;\n}\nexport function ensureGuid(object) {\n    return object._guid || initializeGuid(object);\n}","import { ensureGuid } from './guid';\nlet proto = Object.create(null, {\n    // without this, we will always still end up with (new\n    // EmptyObject()).constructor === Object\n    constructor: {\n        value: undefined,\n        enumerable: false,\n        writable: true\n    }\n});\nfunction EmptyObject() {}\nEmptyObject.prototype = proto;\nexport function dict() {\n    // let d = Object.create(null);\n    // d.x = 1;\n    // delete d.x;\n    // return d;\n    return new EmptyObject();\n}\nexport class DictSet {\n    constructor() {\n        this.dict = dict();\n    }\n    add(obj) {\n        if (typeof obj === 'string') this.dict[obj] = obj;else this.dict[ensureGuid(obj)] = obj;\n        return this;\n    }\n    delete(obj) {\n        if (typeof obj === 'string') delete this.dict[obj];else if (obj._guid) delete this.dict[obj._guid];\n    }\n    forEach(callback) {\n        let { dict } = this;\n        let dictKeys = Object.keys(dict);\n        for (let i = 0; dictKeys.length; i++) {\n            callback(dict[dictKeys[i]]);\n        }\n    }\n    toArray() {\n        return Object.keys(this.dict);\n    }\n}\nexport class Stack {\n    constructor() {\n        this.stack = [];\n        this.current = null;\n    }\n    toArray() {\n        return this.stack;\n    }\n    push(item) {\n        this.current = item;\n        this.stack.push(item);\n    }\n    pop() {\n        let item = this.stack.pop();\n        let len = this.stack.length;\n        this.current = len === 0 ? null : this.stack[len - 1];\n        return item === undefined ? null : item;\n    }\n    isEmpty() {\n        return this.stack.length === 0;\n    }\n}","export class ListNode {\n    constructor(value) {\n        this.next = null;\n        this.prev = null;\n        this.value = value;\n    }\n}\nexport class LinkedList {\n    constructor() {\n        this.clear();\n    }\n    static fromSlice(slice) {\n        let list = new LinkedList();\n        slice.forEachNode(n => list.append(n.clone()));\n        return list;\n    }\n    head() {\n        return this._head;\n    }\n    tail() {\n        return this._tail;\n    }\n    clear() {\n        this._head = this._tail = null;\n    }\n    isEmpty() {\n        return this._head === null;\n    }\n    toArray() {\n        let out = [];\n        this.forEachNode(n => out.push(n));\n        return out;\n    }\n    splice(start, end, reference) {\n        let before;\n        if (reference === null) {\n            before = this._tail;\n            this._tail = end;\n        } else {\n            before = reference.prev;\n            end.next = reference;\n            reference.prev = end;\n        }\n        if (before) {\n            before.next = start;\n            start.prev = before;\n        }\n    }\n    nextNode(node) {\n        return node.next;\n    }\n    prevNode(node) {\n        return node.prev;\n    }\n    forEachNode(callback) {\n        let node = this._head;\n        while (node !== null) {\n            callback(node);\n            node = node.next;\n        }\n    }\n    contains(needle) {\n        let node = this._head;\n        while (node !== null) {\n            if (node === needle) return true;\n            node = node.next;\n        }\n        return false;\n    }\n    insertBefore(node, reference = null) {\n        if (reference === null) return this.append(node);\n        if (reference.prev) reference.prev.next = node;else this._head = node;\n        node.prev = reference.prev;\n        node.next = reference;\n        reference.prev = node;\n        return node;\n    }\n    append(node) {\n        let tail = this._tail;\n        if (tail) {\n            tail.next = node;\n            node.prev = tail;\n            node.next = null;\n        } else {\n            this._head = node;\n        }\n        return this._tail = node;\n    }\n    pop() {\n        if (this._tail) return this.remove(this._tail);\n        return null;\n    }\n    prepend(node) {\n        if (this._head) return this.insertBefore(node, this._head);\n        return this._head = this._tail = node;\n    }\n    remove(node) {\n        if (node.prev) node.prev.next = node.next;else this._head = node.next;\n        if (node.next) node.next.prev = node.prev;else this._tail = node.prev;\n        return node;\n    }\n}\nexport class ListSlice {\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    static toList(slice) {\n        let list = new LinkedList();\n        slice.forEachNode(n => list.append(n.clone()));\n        return list;\n    }\n    forEachNode(callback) {\n        let node = this._head;\n        while (node !== null) {\n            callback(node);\n            node = this.nextNode(node);\n        }\n    }\n    contains(needle) {\n        let node = this._head;\n        while (node !== null) {\n            if (node === needle) return true;\n            node = node.next;\n        }\n        return false;\n    }\n    head() {\n        return this._head;\n    }\n    tail() {\n        return this._tail;\n    }\n    toArray() {\n        let out = [];\n        this.forEachNode(n => out.push(n));\n        return out;\n    }\n    nextNode(node) {\n        if (node === this._tail) return null;\n        return node.next;\n    }\n    prevNode(node) {\n        if (node === this._head) return null;\n        return node.prev;\n    }\n    isEmpty() {\n        return false;\n    }\n}\nexport const EMPTY_SLICE = new ListSlice(null, null);","export const HAS_NATIVE_WEAKMAP = function () {\n    // detect if `WeakMap` is even present\n    let hasWeakMap = typeof WeakMap === 'function';\n    if (!hasWeakMap) {\n        return false;\n    }\n    let instance = new WeakMap();\n    // use `Object`'s `.toString` directly to prevent us from detecting\n    // polyfills as native weakmaps\n    return Object.prototype.toString.call(instance) === '[object WeakMap]';\n}();","import { HAS_NATIVE_WEAKMAP } from './weakmap';\nconst HAS_TYPED_ARRAYS = typeof Uint32Array !== 'undefined';\nlet A;\nif (HAS_TYPED_ARRAYS) {\n    A = Uint32Array;\n} else {\n    A = Array;\n}\nexport default A;\nexport const EMPTY_ARRAY = HAS_NATIVE_WEAKMAP ? Object.freeze([]) : [];","import { initializeGuid, fillNulls, unreachable, typePos } from '@glimmer/util';\n\n/**\n * Registers\n *\n * For the most part, these follows MIPS naming conventions, however the\n * register numbers are different.\n */\nexport var Register;\n(function (Register) {\n    // $0 or $pc (program counter): pointer into `program` for the next insturction; -1 means exit\n    Register[Register[\"pc\"] = 0] = \"pc\";\n    // $1 or $ra (return address): pointer into `program` for the return\n    Register[Register[\"ra\"] = 1] = \"ra\";\n    // $2 or $fp (frame pointer): pointer into the `evalStack` for the base of the stack\n    Register[Register[\"fp\"] = 2] = \"fp\";\n    // $3 or $sp (stack pointer): pointer into the `evalStack` for the top of the stack\n    Register[Register[\"sp\"] = 3] = \"sp\";\n    // $4-$5 or $s0-$s1 (saved): callee saved general-purpose registers\n    Register[Register[\"s0\"] = 4] = \"s0\";\n    Register[Register[\"s1\"] = 5] = \"s1\";\n    // $6-$7 or $t0-$t1 (temporaries): caller saved general-purpose registers\n    Register[Register[\"t0\"] = 6] = \"t0\";\n    Register[Register[\"t1\"] = 7] = \"t1\";\n})(Register || (Register = {}));\nexport function debugSlice(env, start, end) {\n    if (!false && false) {\n        /* tslint:disable:no-console */\n        let { program } = env;\n        let { constants } = program;\n        // console is not available in IE9\n        if (typeof console === 'undefined') {\n            return;\n        }\n        // IE10 does not have `console.group`\n        if (typeof console.group !== 'function') {\n            return;\n        }\n        console.group(`%c${start}:${end}`, 'color: #999');\n        for (let i = start; i < end; i = i + 4) {\n            let { type, op1, op2, op3 } = program.opcode(i);\n            let [name, params] = debug(constants, type, op1, op2, op3);\n            console.log(`${i}. ${logOpcode(name, params)}`);\n        }\n        console.groupEnd();\n        /* tslint:enable:no-console */\n    }\n}\nfunction logOpcode(type, params) {\n    if (!false && false) {\n        let out = type;\n        if (params) {\n            let args = Object.keys(params).map(p => ` ${p}=${json(params[p])}`).join('');\n            out += args;\n        }\n        return `(${out})`;\n    }\n}\nfunction json(param) {\n    if (typeof param === 'function') {\n        return '<function>';\n    }\n    let string;\n    try {\n        string = JSON.stringify(param);\n    } catch (e) {\n        return '<cannot generate JSON>';\n    }\n    if (string === undefined) {\n        return 'undefined';\n    }\n    let debug = JSON.parse(string);\n    if (typeof debug === 'object' && debug !== null && debug.GlimmerDebug !== undefined) {\n        return debug.GlimmerDebug;\n    }\n    return string;\n}\nfunction debug(c, op, op1, op2, op3) {\n    if (!false && false) {\n        switch (op) {\n            case 0 /* Bug */:\n                throw unreachable();\n            case 1 /* Helper */:\n                return ['Helper', { helper: c.getFunction(op1) }];\n            case 2 /* Function */:\n                return ['Function', { function: c.getFunction(op1) }];\n            case 4 /* SetVariable */:\n                return ['SetVariable', { symbol: op1 }];\n            case 5 /* GetVariable */:\n                return ['GetVariable', { symbol: op1 }];\n            case 6 /* GetProperty */:\n                return ['GetProperty', { key: c.getString(op1) }];\n            case 7 /* PushBlock */:\n                return ['PushBlock', { block: c.getBlock(op1) }];\n            case 8 /* GetBlock */:\n                return ['GetBlock', { symbol: op1 }];\n            case 9 /* HasBlock */:\n                return ['HasBlock', { block: op1 }];\n            case 10 /* HasBlockParams */:\n                return ['HasBlockParams', { block: op1 }];\n            case 11 /* Concat */:\n                return ['Concat', { size: op1 }];\n            case 12 /* Immediate */:\n                return ['Immediate', { value: op1 }];\n            case 13 /* Constant */:\n                return ['Constant', { value: c.getOther(op1) }];\n            case 14 /* PrimitiveReference */:\n                return ['PrimitiveReference', { primitive: op1 }];\n            case 15 /* Dup */:\n                return ['Dup', { register: Register[op1], offset: op2 }];\n            case 16 /* Pop */:\n                return ['Pop', { count: op1 }];\n            case 17 /* Load */:\n                return ['Load', { register: Register[op1] }];\n            case 18 /* Fetch */:\n                return ['Fetch', { register: Register[op1] }];\n            /// PRELUDE & EXIT\n            case 19 /* RootScope */:\n                return ['RootScope', { symbols: op1, bindCallerScope: !!op2 }];\n            case 20 /* ChildScope */:\n                return ['ChildScope', {}];\n            case 21 /* PopScope */:\n                return ['PopScope', {}];\n            case 22 /* Return */:\n                return ['Return', {}];\n            case 23 /* ReturnTo */:\n                return ['ReturnTo', { offset: op1 }];\n            /// HTML\n            case 24 /* Text */:\n                return ['Text', { text: c.getString(op1) }];\n            case 25 /* Comment */:\n                return ['Comment', { comment: c.getString(op1) }];\n            case 26 /* DynamicContent */:\n                return ['DynamicContent', { value: c.getOther(op1) }];\n            case 27 /* OpenElement */:\n                return ['OpenElement', { tag: c.getString(op1) }];\n            case 28 /* OpenElementWithOperations */:\n                return ['OpenElementWithOperations', { tag: c.getString(op1) }];\n            case 29 /* OpenDynamicElement */:\n                return ['OpenDynamicElement', {}];\n            case 30 /* StaticAttr */:\n                return ['StaticAttr', { name: c.getString(op1), value: c.getString(op2), namespace: op3 ? c.getString(op3) : null }];\n            case 31 /* DynamicAttr */:\n                return ['DynamicAttr', { name: c.getString(op1), trusting: !!op2 }];\n            case 32 /* DynamicAttrNS */:\n                return ['DynamicAttrNS', { name: c.getString(op1), ns: c.getString(op2), trusting: !!op2 }];\n            case 33 /* FlushElement */:\n                return ['FlushElement', {}];\n            case 34 /* CloseElement */:\n                return ['CloseElement', {}];\n            /// MODIFIER\n            case 35 /* Modifier */:\n                return ['Modifier', {}];\n            /// WORMHOLE\n            case 36 /* PushRemoteElement */:\n                return ['PushRemoteElement', {}];\n            case 37 /* PopRemoteElement */:\n                return ['PopRemoteElement', {}];\n            /// DYNAMIC SCOPE\n            case 38 /* BindDynamicScope */:\n                return ['BindDynamicScope', {}];\n            case 39 /* PushDynamicScope */:\n                return ['PushDynamicScope', {}];\n            case 40 /* PopDynamicScope */:\n                return ['PopDynamicScope', {}];\n            /// VM\n            case 41 /* CompileDynamicBlock */:\n                return ['CompileDynamicBlock', {}];\n            case 42 /* InvokeStatic */:\n                return ['InvokeStatic', { block: c.getBlock(op1) }];\n            case 43 /* InvokeDynamic */:\n                return ['InvokeDynamic', { invoker: c.getOther(op1) }];\n            case 44 /* Jump */:\n                return ['Jump', { to: op1 }];\n            case 45 /* JumpIf */:\n                return ['JumpIf', { to: op1 }];\n            case 46 /* JumpUnless */:\n                return ['JumpUnless', { to: op1 }];\n            case 47 /* PushFrame */:\n                return ['PushFrame', {}];\n            case 48 /* PopFrame */:\n                return ['PopFrame', {}];\n            case 49 /* Enter */:\n                return ['Enter', { args: op1 }];\n            case 50 /* Exit */:\n                return ['Exit', {}];\n            case 51 /* Test */:\n                return ['ToBoolean', {}];\n            /// LISTS\n            case 52 /* EnterList */:\n                return ['EnterList', { start: op1 }];\n            case 53 /* ExitList */:\n                return ['ExitList', {}];\n            case 54 /* PutIterator */:\n                return ['PutIterator', {}];\n            case 55 /* Iterate */:\n                return ['Iterate', { end: op1 }];\n            /// COMPONENTS\n            case 56 /* PushComponentManager */:\n                return ['PushComponentManager', { definition: c.getOther(op1) }];\n            case 57 /* PushDynamicComponentManager */:\n                return ['PushDynamicComponentManager', {}];\n            case 58 /* PushArgs */:\n                return ['PushArgs', { synthetic: !!op2 }];\n            case 59 /* PrepareArgs */:\n                return ['PrepareArgs', { state: Register[op1] }];\n            case 60 /* CreateComponent */:\n                return ['CreateComponent', { flags: op1, state: Register[op2] }];\n            case 61 /* RegisterComponentDestructor */:\n                return ['RegisterComponentDestructor', {}];\n            case 62 /* PushComponentOperations */:\n                return ['PushComponentOperations', {}];\n            case 63 /* GetComponentSelf */:\n                return ['GetComponentSelf', { state: Register[op1] }];\n            case 64 /* GetComponentLayout */:\n                return ['GetComponentLayout', { state: Register[op1] }];\n            case 65 /* BeginComponentTransaction */:\n                return ['BeginComponentTransaction', {}];\n            case 66 /* CommitComponentTransaction */:\n                return ['CommitComponentTransaction', {}];\n            case 67 /* DidCreateElement */:\n                return ['DidCreateElement', { state: Register[op1] }];\n            case 68 /* DidRenderLayout */:\n                return ['DidRenderLayout', {}];\n            /// PARTIALS\n            case 69 /* GetPartialTemplate */:\n                return ['CompilePartial', {}];\n            case 70 /* ResolveMaybeLocal */:\n                return ['ResolveMaybeLocal', { name: c.getString(op1) }];\n            /// DEBUGGER\n            case 71 /* Debugger */:\n                return ['Debugger', { symbols: c.getOther(op1), evalInfo: c.getArray(op2) }];\n            /// STATEMENTS\n            case 72 /* Size */:\n                throw unreachable();\n        }\n        throw unreachable();\n    }\n    return ['', {}];\n}\nexport class AppendOpcodes {\n    constructor() {\n        this.evaluateOpcode = fillNulls(72 /* Size */).slice();\n    }\n    add(name, evaluate) {\n        this.evaluateOpcode[name] = evaluate;\n    }\n    evaluate(vm, opcode, type) {\n        let func = this.evaluateOpcode[type];\n        if (!false && false) {\n            /* tslint:disable */\n            let [name, params] = debug(vm.constants, opcode.type, opcode.op1, opcode.op2, opcode.op3);\n            console.log(`${typePos(vm['pc'])}. ${logOpcode(name, params)}`);\n            // console.log(...debug(vm.constants, type, opcode.op1, opcode.op2, opcode.op3));\n            /* tslint:enable */\n        }\n        func(vm, opcode);\n        if (!false && false) {\n            /* tslint:disable */\n            console.log('%c -> pc: %d, ra: %d, fp: %d, sp: %d, s0: %O, s1: %O, t0: %O, t1: %O', 'color: orange', vm['pc'], vm['ra'], vm['fp'], vm['sp'], vm['s0'], vm['s1'], vm['t0'], vm['t1']);\n            console.log('%c -> eval stack', 'color: red', vm.stack.toArray());\n            console.log('%c -> scope', 'color: green', vm.scope()['slots'].map(s => s && s['value'] ? s['value']() : s));\n            console.log('%c -> elements', 'color: blue', vm.elements()['elementStack'].toArray());\n            /* tslint:enable */\n        }\n    }\n}\nexport const APPEND_OPCODES = new AppendOpcodes();\nexport class AbstractOpcode {\n    constructor() {\n        initializeGuid(this);\n    }\n    toJSON() {\n        return { guid: this._guid, type: this.type };\n    }\n}\nexport class UpdatingOpcode extends AbstractOpcode {\n    constructor() {\n        super(...arguments);\n        this.next = null;\n        this.prev = null;\n    }\n}\nexport function inspect(opcodes) {\n    let buffer = [];\n    opcodes.forEach((opcode, i) => {\n        _inspect(opcode.toJSON(), buffer, 0, i);\n    });\n    return buffer.join('');\n}\nfunction _inspect(opcode, buffer, level, index) {\n    let indentation = [];\n    for (let i = 0; i < level; i++) {\n        indentation.push('  ');\n    }\n    buffer.push(...indentation);\n    buffer.push(`${index}. ${opcode.type}`);\n    if (opcode.args || opcode.details) {\n        buffer.push('(');\n        if (opcode.args) {\n            buffer.push(opcode.args.join(', '));\n        }\n        if (opcode.details) {\n            let keys = Object.keys(opcode.details);\n            if (keys.length) {\n                if (opcode.args && opcode.args.length) {\n                    buffer.push(', ');\n                }\n                buffer.push(keys.map(key => `${key}=${opcode.details && opcode.details[key]}`).join(', '));\n            }\n        }\n        buffer.push(')');\n    }\n    buffer.push('\\n');\n    if (opcode.children && opcode.children.length) {\n        for (let i = 0; i < opcode.children.length; i++) {\n            _inspect(opcode.children[i], buffer, level + 1, i);\n        }\n    }\n}","export const CONSTANT = 0;\nexport const INITIAL = 1;\nexport const VOLATILE = NaN;\nexport class RevisionTag {\n    validate(snapshot) {\n        return this.value() === snapshot;\n    }\n}\nRevisionTag.id = 0;\nconst VALUE = [];\nconst VALIDATE = [];\nexport class TagWrapper {\n    constructor(type, inner) {\n        this.type = type;\n        this.inner = inner;\n    }\n    value() {\n        let func = VALUE[this.type];\n        return func(this.inner);\n    }\n    validate(snapshot) {\n        let func = VALIDATE[this.type];\n        return func(this.inner, snapshot);\n    }\n}\nfunction register(Type) {\n    let type = VALUE.length;\n    VALUE.push(tag => tag.value());\n    VALIDATE.push((tag, snapshot) => tag.validate(snapshot));\n    Type.id = type;\n}\n///\n// CONSTANT: 0\nVALUE.push(() => CONSTANT);\nVALIDATE.push((_tag, snapshot) => snapshot === CONSTANT);\nexport const CONSTANT_TAG = new TagWrapper(0, null);\n// VOLATILE: 1\nVALUE.push(() => VOLATILE);\nVALIDATE.push((_tag, snapshot) => snapshot === VOLATILE);\nexport const VOLATILE_TAG = new TagWrapper(1, null);\n// CURRENT: 2\nVALUE.push(() => $REVISION);\nVALIDATE.push((_tag, snapshot) => snapshot === $REVISION);\nexport const CURRENT_TAG = new TagWrapper(2, null);\n///\nlet $REVISION = INITIAL;\nexport class DirtyableTag extends RevisionTag {\n    static create(revision = $REVISION) {\n        return new TagWrapper(this.id, new DirtyableTag(revision));\n    }\n    constructor(revision = $REVISION) {\n        super();\n        this.revision = revision;\n    }\n    value() {\n        return this.revision;\n    }\n    dirty() {\n        this.revision = ++$REVISION;\n    }\n}\nregister(DirtyableTag);\nexport function combineTagged(tagged) {\n    let optimized = [];\n    for (let i = 0, l = tagged.length; i < l; i++) {\n        let tag = tagged[i].tag;\n        if (tag === VOLATILE_TAG) return VOLATILE_TAG;\n        if (tag === CONSTANT_TAG) continue;\n        optimized.push(tag);\n    }\n    return _combine(optimized);\n}\nexport function combineSlice(slice) {\n    let optimized = [];\n    let node = slice.head();\n    while (node !== null) {\n        let tag = node.tag;\n        if (tag === VOLATILE_TAG) return VOLATILE_TAG;\n        if (tag !== CONSTANT_TAG) optimized.push(tag);\n        node = slice.nextNode(node);\n    }\n    return _combine(optimized);\n}\nexport function combine(tags) {\n    let optimized = [];\n    for (let i = 0, l = tags.length; i < l; i++) {\n        let tag = tags[i];\n        if (tag === VOLATILE_TAG) return VOLATILE_TAG;\n        if (tag === CONSTANT_TAG) continue;\n        optimized.push(tag);\n    }\n    return _combine(optimized);\n}\nfunction _combine(tags) {\n    switch (tags.length) {\n        case 0:\n            return CONSTANT_TAG;\n        case 1:\n            return tags[0];\n        case 2:\n            return TagsPair.create(tags[0], tags[1]);\n        default:\n            return TagsCombinator.create(tags);\n    }\n    ;\n}\nexport class CachedTag extends RevisionTag {\n    constructor() {\n        super(...arguments);\n        this.lastChecked = null;\n        this.lastValue = null;\n    }\n    value() {\n        let { lastChecked, lastValue } = this;\n        if (lastChecked !== $REVISION) {\n            this.lastChecked = $REVISION;\n            this.lastValue = lastValue = this.compute();\n        }\n        return this.lastValue;\n    }\n    invalidate() {\n        this.lastChecked = null;\n    }\n}\nclass TagsPair extends CachedTag {\n    static create(first, second) {\n        return new TagWrapper(this.id, new TagsPair(first, second));\n    }\n    constructor(first, second) {\n        super();\n        this.first = first;\n        this.second = second;\n    }\n    compute() {\n        return Math.max(this.first.value(), this.second.value());\n    }\n}\nregister(TagsPair);\nclass TagsCombinator extends CachedTag {\n    static create(tags) {\n        return new TagWrapper(this.id, new TagsCombinator(tags));\n    }\n    constructor(tags) {\n        super();\n        this.tags = tags;\n    }\n    compute() {\n        let { tags } = this;\n        let max = -1;\n        for (let i = 0; i < tags.length; i++) {\n            let value = tags[i].value();\n            max = Math.max(value, max);\n        }\n        return max;\n    }\n}\nregister(TagsCombinator);\nexport class UpdatableTag extends CachedTag {\n    static create(tag) {\n        return new TagWrapper(this.id, new UpdatableTag(tag));\n    }\n    constructor(tag) {\n        super();\n        this.tag = tag;\n        this.lastUpdated = INITIAL;\n    }\n    compute() {\n        return Math.max(this.lastUpdated, this.tag.value());\n    }\n    update(tag) {\n        if (tag !== this.tag) {\n            this.tag = tag;\n            this.lastUpdated = $REVISION;\n            this.invalidate();\n        }\n    }\n}\nregister(UpdatableTag);\nexport class CachedReference {\n    constructor() {\n        this.lastRevision = null;\n        this.lastValue = null;\n    }\n    value() {\n        let { tag, lastRevision, lastValue } = this;\n        if (!lastRevision || !tag.validate(lastRevision)) {\n            lastValue = this.lastValue = this.compute();\n            this.lastRevision = tag.value();\n        }\n        return lastValue;\n    }\n    invalidate() {\n        this.lastRevision = null;\n    }\n}\nclass MapperReference extends CachedReference {\n    constructor(reference, mapper) {\n        super();\n        this.tag = reference.tag;\n        this.reference = reference;\n        this.mapper = mapper;\n    }\n    compute() {\n        let { reference, mapper } = this;\n        return mapper(reference.value());\n    }\n}\nexport function map(reference, mapper) {\n    return new MapperReference(reference, mapper);\n}\n//////////\nexport class ReferenceCache {\n    constructor(reference) {\n        this.lastValue = null;\n        this.lastRevision = null;\n        this.initialized = false;\n        this.tag = reference.tag;\n        this.reference = reference;\n    }\n    peek() {\n        if (!this.initialized) {\n            return this.initialize();\n        }\n        return this.lastValue;\n    }\n    revalidate() {\n        if (!this.initialized) {\n            return this.initialize();\n        }\n        let { reference, lastRevision } = this;\n        let tag = reference.tag;\n        if (tag.validate(lastRevision)) return NOT_MODIFIED;\n        this.lastRevision = tag.value();\n        let { lastValue } = this;\n        let value = reference.value();\n        if (value === lastValue) return NOT_MODIFIED;\n        this.lastValue = value;\n        return value;\n    }\n    initialize() {\n        let { reference } = this;\n        let value = this.lastValue = reference.value();\n        this.lastRevision = reference.tag.value();\n        this.initialized = true;\n        return value;\n    }\n}\nconst NOT_MODIFIED = \"adb3b78e-3d22-4e4b-877a-6317c2c5c145\";\nexport function isModified(value) {\n    return value !== NOT_MODIFIED;\n}","import { CONSTANT_TAG } from './validators';\nexport class ConstReference {\n    constructor(inner) {\n        this.inner = inner;\n        this.tag = CONSTANT_TAG;\n    }\n    value() {\n        return this.inner;\n    }\n}\nexport function isConst(reference) {\n    return reference.tag === CONSTANT_TAG;\n}","import { LinkedList, ListNode, dict, expect } from '@glimmer/util';\nexport class ListItem extends ListNode {\n    constructor(iterable, result) {\n        super(iterable.valueReferenceFor(result));\n        this.retained = false;\n        this.seen = false;\n        this.key = result.key;\n        this.iterable = iterable;\n        this.memo = iterable.memoReferenceFor(result);\n    }\n    update(item) {\n        this.retained = true;\n        this.iterable.updateValueReference(this.value, item);\n        this.iterable.updateMemoReference(this.memo, item);\n    }\n    shouldRemove() {\n        return !this.retained;\n    }\n    reset() {\n        this.retained = false;\n        this.seen = false;\n    }\n}\nexport class IterationArtifacts {\n    constructor(iterable) {\n        this.map = dict();\n        this.list = new LinkedList();\n        this.tag = iterable.tag;\n        this.iterable = iterable;\n    }\n    isEmpty() {\n        let iterator = this.iterator = this.iterable.iterate();\n        return iterator.isEmpty();\n    }\n    iterate() {\n        let iterator = this.iterator || this.iterable.iterate();\n        this.iterator = null;\n        return iterator;\n    }\n    has(key) {\n        return !!this.map[key];\n    }\n    get(key) {\n        return this.map[key];\n    }\n    wasSeen(key) {\n        let node = this.map[key];\n        return node && node.seen;\n    }\n    append(item) {\n        let { map, list, iterable } = this;\n        let node = map[item.key] = new ListItem(iterable, item);\n        list.append(node);\n        return node;\n    }\n    insertBefore(item, reference) {\n        let { map, list, iterable } = this;\n        let node = map[item.key] = new ListItem(iterable, item);\n        node.retained = true;\n        list.insertBefore(node, reference);\n        return node;\n    }\n    move(item, reference) {\n        let { list } = this;\n        item.retained = true;\n        list.remove(item);\n        list.insertBefore(item, reference);\n    }\n    remove(item) {\n        let { list } = this;\n        list.remove(item);\n        delete this.map[item.key];\n    }\n    nextNode(item) {\n        return this.list.nextNode(item);\n    }\n    head() {\n        return this.list.head();\n    }\n}\nexport class ReferenceIterator {\n    // if anyone needs to construct this object with something other than\n    // an iterable, let @wycats know.\n    constructor(iterable) {\n        this.iterator = null;\n        let artifacts = new IterationArtifacts(iterable);\n        this.artifacts = artifacts;\n    }\n    next() {\n        let { artifacts } = this;\n        let iterator = this.iterator = this.iterator || artifacts.iterate();\n        let item = iterator.next();\n        if (!item) return null;\n        return artifacts.append(item);\n    }\n}\nvar Phase;\n(function (Phase) {\n    Phase[Phase[\"Append\"] = 0] = \"Append\";\n    Phase[Phase[\"Prune\"] = 1] = \"Prune\";\n    Phase[Phase[\"Done\"] = 2] = \"Done\";\n})(Phase || (Phase = {}));\nexport class IteratorSynchronizer {\n    constructor({ target, artifacts }) {\n        this.target = target;\n        this.artifacts = artifacts;\n        this.iterator = artifacts.iterate();\n        this.current = artifacts.head();\n    }\n    sync() {\n        let phase = Phase.Append;\n        while (true) {\n            switch (phase) {\n                case Phase.Append:\n                    phase = this.nextAppend();\n                    break;\n                case Phase.Prune:\n                    phase = this.nextPrune();\n                    break;\n                case Phase.Done:\n                    this.nextDone();\n                    return;\n            }\n        }\n    }\n    advanceToKey(key) {\n        let { current, artifacts } = this;\n        let seek = current;\n        while (seek && seek.key !== key) {\n            seek.seen = true;\n            seek = artifacts.nextNode(seek);\n        }\n        this.current = seek && artifacts.nextNode(seek);\n    }\n    nextAppend() {\n        let { iterator, current, artifacts } = this;\n        let item = iterator.next();\n        if (item === null) {\n            return this.startPrune();\n        }\n        let { key } = item;\n        if (current && current.key === key) {\n            this.nextRetain(item);\n        } else if (artifacts.has(key)) {\n            this.nextMove(item);\n        } else {\n            this.nextInsert(item);\n        }\n        return Phase.Append;\n    }\n    nextRetain(item) {\n        let { artifacts, current } = this;\n        current = expect(current, 'BUG: current is empty');\n        current.update(item);\n        this.current = artifacts.nextNode(current);\n        this.target.retain(item.key, current.value, current.memo);\n    }\n    nextMove(item) {\n        let { current, artifacts, target } = this;\n        let { key } = item;\n        let found = artifacts.get(item.key);\n        found.update(item);\n        if (artifacts.wasSeen(item.key)) {\n            artifacts.move(found, current);\n            target.move(found.key, found.value, found.memo, current ? current.key : null);\n        } else {\n            this.advanceToKey(key);\n        }\n    }\n    nextInsert(item) {\n        let { artifacts, target, current } = this;\n        let node = artifacts.insertBefore(item, current);\n        target.insert(node.key, node.value, node.memo, current ? current.key : null);\n    }\n    startPrune() {\n        this.current = this.artifacts.head();\n        return Phase.Prune;\n    }\n    nextPrune() {\n        let { artifacts, target, current } = this;\n        if (current === null) {\n            return Phase.Done;\n        }\n        let node = current;\n        this.current = artifacts.nextNode(node);\n        if (node.shouldRemove()) {\n            artifacts.remove(node);\n            target.delete(node.key);\n        } else {\n            node.reset();\n        }\n        return Phase.Prune;\n    }\n    nextDone() {\n        this.target.done();\n    }\n}","import { ConstReference } from '@glimmer/reference';\nexport class PrimitiveReference extends ConstReference {\n    constructor(value) {\n        super(value);\n    }\n    static create(value) {\n        if (value === undefined) {\n            return UNDEFINED_REFERENCE;\n        } else if (value === null) {\n            return NULL_REFERENCE;\n        } else if (value === true) {\n            return TRUE_REFERENCE;\n        } else if (value === false) {\n            return FALSE_REFERENCE;\n        } else if (typeof value === 'number') {\n            return new ValueReference(value);\n        } else {\n            return new StringReference(value);\n        }\n    }\n    get(_key) {\n        return UNDEFINED_REFERENCE;\n    }\n}\nclass StringReference extends PrimitiveReference {\n    constructor() {\n        super(...arguments);\n        this.lengthReference = null;\n    }\n    get(key) {\n        if (key === 'length') {\n            let { lengthReference } = this;\n            if (lengthReference === null) {\n                lengthReference = this.lengthReference = new ValueReference(this.inner.length);\n            }\n            return lengthReference;\n        } else {\n            return super.get(key);\n        }\n    }\n}\nclass ValueReference extends PrimitiveReference {\n    constructor(value) {\n        super(value);\n    }\n}\nexport const UNDEFINED_REFERENCE = new ValueReference(undefined);\nexport const NULL_REFERENCE = new ValueReference(null);\nexport const TRUE_REFERENCE = new ValueReference(true);\nexport const FALSE_REFERENCE = new ValueReference(false);\nexport class ConditionalReference {\n    constructor(inner) {\n        this.inner = inner;\n        this.tag = inner.tag;\n    }\n    value() {\n        return this.toBool(this.inner.value());\n    }\n    toBool(value) {\n        return !!value;\n    }\n}","import { CachedReference, combineTagged } from '@glimmer/reference';\nexport class ConcatReference extends CachedReference {\n    constructor(parts) {\n        super();\n        this.parts = parts;\n        this.tag = combineTagged(parts);\n    }\n    compute() {\n        let parts = new Array();\n        for (let i = 0; i < this.parts.length; i++) {\n            let value = this.parts[i].value();\n            if (value !== null && value !== undefined) {\n                parts[i] = castToString(value);\n            }\n        }\n        if (parts.length > 0) {\n            return parts.join('');\n        }\n        return null;\n    }\n}\nfunction castToString(value) {\n    if (typeof value.toString !== 'function') {\n        return '';\n    }\n    return String(value);\n}","import { APPEND_OPCODES } from '../../opcodes';\nimport { FALSE_REFERENCE, TRUE_REFERENCE } from '../../references';\nimport { ConcatReference } from '../expressions/concat';\nAPPEND_OPCODES.add(1 /* Helper */, (vm, { op1: _helper }) => {\n    let stack = vm.stack;\n    let helper = vm.constants.getFunction(_helper);\n    let args = stack.pop();\n    let value = helper(vm, args);\n    args.clear();\n    vm.stack.push(value);\n});\nAPPEND_OPCODES.add(2 /* Function */, (vm, { op1: _function }) => {\n    let func = vm.constants.getFunction(_function);\n    vm.stack.push(func(vm));\n});\nAPPEND_OPCODES.add(5 /* GetVariable */, (vm, { op1: symbol }) => {\n    let expr = vm.referenceForSymbol(symbol);\n    vm.stack.push(expr);\n});\nAPPEND_OPCODES.add(4 /* SetVariable */, (vm, { op1: symbol }) => {\n    let expr = vm.stack.pop();\n    vm.scope().bindSymbol(symbol, expr);\n});\nAPPEND_OPCODES.add(70 /* ResolveMaybeLocal */, (vm, { op1: _name }) => {\n    let name = vm.constants.getString(_name);\n    let locals = vm.scope().getPartialMap();\n    let ref = locals[name];\n    if (ref === undefined) {\n        ref = vm.getSelf().get(name);\n    }\n    vm.stack.push(ref);\n});\nAPPEND_OPCODES.add(19 /* RootScope */, (vm, { op1: symbols, op2: bindCallerScope }) => {\n    vm.pushRootScope(symbols, !!bindCallerScope);\n});\nAPPEND_OPCODES.add(6 /* GetProperty */, (vm, { op1: _key }) => {\n    let key = vm.constants.getString(_key);\n    let expr = vm.stack.pop();\n    vm.stack.push(expr.get(key));\n});\nAPPEND_OPCODES.add(7 /* PushBlock */, (vm, { op1: _block }) => {\n    let block = _block ? vm.constants.getBlock(_block) : null;\n    vm.stack.push(block);\n});\nAPPEND_OPCODES.add(8 /* GetBlock */, (vm, { op1: _block }) => {\n    vm.stack.push(vm.scope().getBlock(_block));\n});\nAPPEND_OPCODES.add(9 /* HasBlock */, (vm, { op1: _block }) => {\n    let hasBlock = !!vm.scope().getBlock(_block);\n    vm.stack.push(hasBlock ? TRUE_REFERENCE : FALSE_REFERENCE);\n});\nAPPEND_OPCODES.add(10 /* HasBlockParams */, (vm, { op1: _block }) => {\n    let block = vm.scope().getBlock(_block);\n    let hasBlockParams = block && block.symbolTable.parameters.length;\n    vm.stack.push(hasBlockParams ? TRUE_REFERENCE : FALSE_REFERENCE);\n});\nAPPEND_OPCODES.add(11 /* Concat */, (vm, { op1: count }) => {\n    let out = [];\n    for (let i = count; i > 0; i--) {\n        out.push(vm.stack.pop());\n    }\n    vm.stack.push(new ConcatReference(out.reverse()));\n});","import { dict, EMPTY_ARRAY } from '@glimmer/util';\nimport { combineTagged } from '@glimmer/reference';\nimport { PrimitiveReference, UNDEFINED_REFERENCE } from '../references';\nexport class Arguments {\n    constructor() {\n        this.stack = null;\n        this.positional = new PositionalArguments();\n        this.named = new NamedArguments();\n    }\n    empty() {\n        this.setup(null, true);\n        return this;\n    }\n    setup(stack, synthetic) {\n        this.stack = stack;\n        let names = stack.fromTop(0);\n        let namedCount = names.length;\n        let positionalCount = stack.fromTop(namedCount + 1);\n        let start = positionalCount + namedCount + 2;\n        let positional = this.positional;\n        positional.setup(stack, start, positionalCount);\n        let named = this.named;\n        named.setup(stack, namedCount, names, synthetic);\n    }\n    get tag() {\n        return combineTagged([this.positional, this.named]);\n    }\n    get length() {\n        return this.positional.length + this.named.length;\n    }\n    at(pos) {\n        return this.positional.at(pos);\n    }\n    get(name) {\n        return this.named.get(name);\n    }\n    capture() {\n        return {\n            tag: this.tag,\n            length: this.length,\n            positional: this.positional.capture(),\n            named: this.named.capture()\n        };\n    }\n    clear() {\n        let { stack, length } = this;\n        stack.pop(length + 2);\n    }\n}\nclass PositionalArguments {\n    constructor() {\n        this.length = 0;\n        this.stack = null;\n        this.start = 0;\n        this._tag = null;\n        this._references = null;\n    }\n    setup(stack, start, length) {\n        this.stack = stack;\n        this.start = start;\n        this.length = length;\n        this._tag = null;\n        this._references = null;\n    }\n    get tag() {\n        let tag = this._tag;\n        if (!tag) {\n            tag = this._tag = combineTagged(this.references);\n        }\n        return tag;\n    }\n    at(position) {\n        let { start, length } = this;\n        if (position < 0 || position >= length) {\n            return UNDEFINED_REFERENCE;\n        }\n        // stack: pos1, pos2, pos3, named1, named2\n        // start: 4 (top - 4)\n        //\n        // at(0) === pos1 === top - start\n        // at(1) === pos2 === top - (start - 1)\n        // at(2) === pos3 === top - (start - 2)\n        let fromTop = start - position - 1;\n        return this.stack.fromTop(fromTop);\n    }\n    capture() {\n        return new CapturedPositionalArguments(this.tag, this.references);\n    }\n    get references() {\n        let references = this._references;\n        if (!references) {\n            let { length } = this;\n            references = this._references = new Array(length);\n            for (let i = 0; i < length; i++) {\n                references[i] = this.at(i);\n            }\n        }\n        return references;\n    }\n}\nclass CapturedPositionalArguments {\n    constructor(tag, references, length = references.length) {\n        this.tag = tag;\n        this.references = references;\n        this.length = length;\n    }\n    at(position) {\n        return this.references[position];\n    }\n    value() {\n        return this.references.map(this.valueOf);\n    }\n    get(name) {\n        let { references, length } = this;\n        if (name === 'length') {\n            return PrimitiveReference.create(length);\n        } else {\n            let idx = parseInt(name, 10);\n            if (idx < 0 || idx >= length) {\n                return UNDEFINED_REFERENCE;\n            } else {\n                return references[idx];\n            }\n        }\n    }\n    valueOf(reference) {\n        return reference.value();\n    }\n}\nclass NamedArguments {\n    constructor() {\n        this.length = 0;\n        this._tag = null;\n        this._references = null;\n        this._names = null;\n        this._realNames = EMPTY_ARRAY;\n    }\n    setup(stack, length, names, synthetic) {\n        this.stack = stack;\n        this.length = length;\n        this._tag = null;\n        this._references = null;\n        if (synthetic) {\n            this._names = names;\n            this._realNames = EMPTY_ARRAY;\n        } else {\n            this._names = null;\n            this._realNames = names;\n        }\n    }\n    get tag() {\n        return combineTagged(this.references);\n    }\n    get names() {\n        let names = this._names;\n        if (!names) {\n            names = this._names = this._realNames.map(this.sliceName);\n        }\n        return names;\n    }\n    has(name) {\n        return this.names.indexOf(name) !== -1;\n    }\n    get(name) {\n        let { names, length } = this;\n        let idx = names.indexOf(name);\n        if (idx === -1) {\n            return UNDEFINED_REFERENCE;\n        }\n        // stack: pos1, pos2, pos3, named1, named2\n        // start: 4 (top - 4)\n        // namedDict: { named1: 1, named2: 0 };\n        //\n        // get('named1') === named1 === top - (start - 1)\n        // get('named2') === named2 === top - start\n        let fromTop = length - idx;\n        return this.stack.fromTop(fromTop);\n    }\n    capture() {\n        return new CapturedNamedArguments(this.tag, this.names, this.references);\n    }\n    get references() {\n        let references = this._references;\n        if (!references) {\n            let { names, length } = this;\n            references = this._references = [];\n            for (let i = 0; i < length; i++) {\n                references[i] = this.get(names[i]);\n            }\n        }\n        return references;\n    }\n    sliceName(name) {\n        return name.slice(1);\n    }\n}\nclass CapturedNamedArguments {\n    constructor(tag, names, references) {\n        this.tag = tag;\n        this.names = names;\n        this.references = references;\n        this.length = names.length;\n        this._map = null;\n    }\n    get map() {\n        let map = this._map;\n        if (!map) {\n            let { names, references } = this;\n            map = this._map = dict();\n            for (let i = 0; i < names.length; i++) {\n                let name = names[i];\n                map[name] = references[i];\n            }\n        }\n        return map;\n    }\n    has(name) {\n        return this.names.indexOf(name) !== -1;\n    }\n    get(name) {\n        let { names, references } = this;\n        let idx = names.indexOf(name);\n        if (idx === -1) {\n            return UNDEFINED_REFERENCE;\n        } else {\n            return references[idx];\n        }\n    }\n    value() {\n        let { names, references } = this;\n        let out = dict();\n        for (let i = 0; i < names.length; i++) {\n            let name = names[i];\n            out[name] = references[i].value();\n        }\n        return out;\n    }\n}\nexport default new Arguments();","import { ConstReference } from '@glimmer/reference';\nimport { CONSTANT_TAG, isConst, isModified, ReferenceCache } from '@glimmer/reference';\nimport { initializeGuid } from '@glimmer/util';\nimport { APPEND_OPCODES, UpdatingOpcode } from '../../opcodes';\nimport { FALSE_REFERENCE, NULL_REFERENCE, PrimitiveReference, TRUE_REFERENCE, UNDEFINED_REFERENCE } from '../../references';\nAPPEND_OPCODES.add(20 /* ChildScope */, vm => vm.pushChildScope());\nAPPEND_OPCODES.add(21 /* PopScope */, vm => vm.popScope());\nAPPEND_OPCODES.add(39 /* PushDynamicScope */, vm => vm.pushDynamicScope());\nAPPEND_OPCODES.add(40 /* PopDynamicScope */, vm => vm.popDynamicScope());\nAPPEND_OPCODES.add(12 /* Immediate */, (vm, { op1: number }) => {\n    vm.stack.push(number);\n});\nAPPEND_OPCODES.add(13 /* Constant */, (vm, { op1: other }) => {\n    vm.stack.push(vm.constants.getOther(other));\n});\nAPPEND_OPCODES.add(14 /* PrimitiveReference */, (vm, { op1: primitive }) => {\n    let stack = vm.stack;\n    let flag = (primitive & 3 << 30) >>> 30;\n    let value = primitive & ~(3 << 30);\n    switch (flag) {\n        case 0:\n            stack.push(PrimitiveReference.create(value));\n            break;\n        case 1:\n            stack.push(PrimitiveReference.create(vm.constants.getString(value)));\n            break;\n        case 2:\n            switch (value) {\n                case 0:\n                    stack.push(FALSE_REFERENCE);\n                    break;\n                case 1:\n                    stack.push(TRUE_REFERENCE);\n                    break;\n                case 2:\n                    stack.push(NULL_REFERENCE);\n                    break;\n                case 3:\n                    stack.push(UNDEFINED_REFERENCE);\n                    break;\n            }\n            break;\n    }\n});\nAPPEND_OPCODES.add(15 /* Dup */, (vm, { op1: register, op2: offset }) => {\n    let position = vm.fetchValue(register) - offset;\n    vm.stack.dup(position);\n});\nAPPEND_OPCODES.add(16 /* Pop */, (vm, { op1: count }) => vm.stack.pop(count));\nAPPEND_OPCODES.add(17 /* Load */, (vm, { op1: register }) => vm.load(register));\nAPPEND_OPCODES.add(18 /* Fetch */, (vm, { op1: register }) => vm.fetch(register));\nAPPEND_OPCODES.add(38 /* BindDynamicScope */, (vm, { op1: _names }) => {\n    let names = vm.constants.getArray(_names);\n    vm.bindDynamicScope(names);\n});\nAPPEND_OPCODES.add(47 /* PushFrame */, vm => vm.pushFrame());\nAPPEND_OPCODES.add(48 /* PopFrame */, vm => vm.popFrame());\nAPPEND_OPCODES.add(49 /* Enter */, (vm, { op1: args }) => vm.enter(args));\nAPPEND_OPCODES.add(50 /* Exit */, vm => vm.exit());\nAPPEND_OPCODES.add(41 /* CompileDynamicBlock */, vm => {\n    let stack = vm.stack;\n    let block = stack.pop();\n    stack.push(block ? block.compileDynamic(vm.env) : null);\n});\nAPPEND_OPCODES.add(42 /* InvokeStatic */, (vm, { op1: _block }) => {\n    let block = vm.constants.getBlock(_block);\n    let compiled = block.compileStatic(vm.env);\n    vm.call(compiled.handle);\n});\nAPPEND_OPCODES.add(43 /* InvokeDynamic */, (vm, { op1: _invoker }) => {\n    let invoker = vm.constants.getOther(_invoker);\n    let block = vm.stack.pop();\n    invoker.invoke(vm, block);\n});\nAPPEND_OPCODES.add(44 /* Jump */, (vm, { op1: target }) => vm.goto(target));\nAPPEND_OPCODES.add(45 /* JumpIf */, (vm, { op1: target }) => {\n    let reference = vm.stack.pop();\n    if (isConst(reference)) {\n        if (reference.value()) {\n            vm.goto(target);\n        }\n    } else {\n        let cache = new ReferenceCache(reference);\n        if (cache.peek()) {\n            vm.goto(target);\n        }\n        vm.updateWith(new Assert(cache));\n    }\n});\nAPPEND_OPCODES.add(46 /* JumpUnless */, (vm, { op1: target }) => {\n    let reference = vm.stack.pop();\n    if (isConst(reference)) {\n        if (!reference.value()) {\n            vm.goto(target);\n        }\n    } else {\n        let cache = new ReferenceCache(reference);\n        if (!cache.peek()) {\n            vm.goto(target);\n        }\n        vm.updateWith(new Assert(cache));\n    }\n});\nAPPEND_OPCODES.add(22 /* Return */, vm => vm.return());\nAPPEND_OPCODES.add(23 /* ReturnTo */, (vm, { op1: relative }) => {\n    vm.returnTo(relative);\n});\nexport const ConstTest = function (ref, _env) {\n    return new ConstReference(!!ref.value());\n};\nexport const SimpleTest = function (ref, _env) {\n    return ref;\n};\nexport const EnvironmentTest = function (ref, env) {\n    return env.toConditionalReference(ref);\n};\nAPPEND_OPCODES.add(51 /* Test */, (vm, { op1: _func }) => {\n    let stack = vm.stack;\n    let operand = stack.pop();\n    let func = vm.constants.getFunction(_func);\n    stack.push(func(operand, vm.env));\n});\nexport class Assert extends UpdatingOpcode {\n    constructor(cache) {\n        super();\n        this.type = 'assert';\n        this.tag = cache.tag;\n        this.cache = cache;\n    }\n    evaluate(vm) {\n        let { cache } = this;\n        if (isModified(cache.revalidate())) {\n            vm.throw();\n        }\n    }\n    toJSON() {\n        let { type, _guid, cache } = this;\n        let expected;\n        try {\n            expected = JSON.stringify(cache.peek());\n        } catch (e) {\n            expected = String(cache.peek());\n        }\n        return {\n            args: [],\n            details: { expected },\n            guid: _guid,\n            type\n        };\n    }\n}\nexport class JumpIfNotModifiedOpcode extends UpdatingOpcode {\n    constructor(tag, target) {\n        super();\n        this.target = target;\n        this.type = 'jump-if-not-modified';\n        this.tag = tag;\n        this.lastRevision = tag.value();\n    }\n    evaluate(vm) {\n        let { tag, target, lastRevision } = this;\n        if (!vm.alwaysRevalidate && tag.validate(lastRevision)) {\n            vm.goto(target);\n        }\n    }\n    didModify() {\n        this.lastRevision = this.tag.value();\n    }\n    toJSON() {\n        return {\n            args: [JSON.stringify(this.target.inspect())],\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}\nexport class DidModifyOpcode extends UpdatingOpcode {\n    constructor(target) {\n        super();\n        this.target = target;\n        this.type = 'did-modify';\n        this.tag = CONSTANT_TAG;\n    }\n    evaluate() {\n        this.target.didModify();\n    }\n}\nexport class LabelOpcode {\n    constructor(label) {\n        this.tag = CONSTANT_TAG;\n        this.type = 'label';\n        this.label = null;\n        this.prev = null;\n        this.next = null;\n        initializeGuid(this);\n        this.label = label;\n    }\n    evaluate() {}\n    inspect() {\n        return `${this.label} [${this._guid}]`;\n    }\n    toJSON() {\n        return {\n            args: [JSON.stringify(this.inspect())],\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}","import { CachedReference, combineTagged, isConst as isConstReference, isModified, ReferenceCache } from '@glimmer/reference';\nimport { expect, unwrap } from '@glimmer/util';\nimport { APPEND_OPCODES, UpdatingOpcode } from '../../opcodes';\nimport { NULL_REFERENCE, PrimitiveReference } from '../../references';\nimport { Assert } from './vm';\nAPPEND_OPCODES.add(24 /* Text */, (vm, { op1: text }) => {\n    vm.elements().appendText(vm.constants.getString(text));\n});\nAPPEND_OPCODES.add(25 /* Comment */, (vm, { op1: text }) => {\n    vm.elements().appendComment(vm.constants.getString(text));\n});\nAPPEND_OPCODES.add(27 /* OpenElement */, (vm, { op1: tag }) => {\n    vm.elements().openElement(vm.constants.getString(tag));\n});\nAPPEND_OPCODES.add(28 /* OpenElementWithOperations */, (vm, { op1: tag }) => {\n    let tagName = vm.constants.getString(tag);\n    let operations = vm.stack.pop();\n    vm.elements().openElement(tagName, operations);\n});\nAPPEND_OPCODES.add(29 /* OpenDynamicElement */, vm => {\n    let operations = vm.stack.pop();\n    let tagName = vm.stack.pop().value();\n    vm.elements().openElement(tagName, operations);\n});\nAPPEND_OPCODES.add(36 /* PushRemoteElement */, vm => {\n    let elementRef = vm.stack.pop();\n    let nextSiblingRef = vm.stack.pop();\n    let element;\n    let nextSibling;\n    if (isConstReference(elementRef)) {\n        element = elementRef.value();\n    } else {\n        let cache = new ReferenceCache(elementRef);\n        element = cache.peek();\n        vm.updateWith(new Assert(cache));\n    }\n    if (isConstReference(nextSiblingRef)) {\n        nextSibling = nextSiblingRef.value();\n    } else {\n        let cache = new ReferenceCache(nextSiblingRef);\n        nextSibling = cache.peek();\n        vm.updateWith(new Assert(cache));\n    }\n    vm.elements().pushRemoteElement(element, nextSibling);\n});\nAPPEND_OPCODES.add(37 /* PopRemoteElement */, vm => vm.elements().popRemoteElement());\nclass ClassList {\n    constructor() {\n        this.list = null;\n        this.isConst = true;\n    }\n    append(reference) {\n        let { list, isConst } = this;\n        if (list === null) list = this.list = [];\n        list.push(reference);\n        this.isConst = isConst && isConstReference(reference);\n    }\n    toReference() {\n        let { list, isConst } = this;\n        if (!list) return NULL_REFERENCE;\n        if (isConst) return PrimitiveReference.create(toClassName(list));\n        return new ClassListReference(list);\n    }\n}\nclass ClassListReference extends CachedReference {\n    constructor(list) {\n        super();\n        this.list = [];\n        this.tag = combineTagged(list);\n        this.list = list;\n    }\n    compute() {\n        return toClassName(this.list);\n    }\n}\nfunction toClassName(list) {\n    let ret = [];\n    for (let i = 0; i < list.length; i++) {\n        let value = list[i].value();\n        if (value !== false && value !== null && value !== undefined) ret.push(value);\n    }\n    return ret.length === 0 ? null : ret.join(' ');\n}\nexport class SimpleElementOperations {\n    constructor(env) {\n        this.env = env;\n        this.opcodes = null;\n        this.classList = null;\n    }\n    addStaticAttribute(element, name, value) {\n        if (name === 'class') {\n            this.addClass(PrimitiveReference.create(value));\n        } else {\n            this.env.getAppendOperations().setAttribute(element, name, value);\n        }\n    }\n    addStaticAttributeNS(element, namespace, name, value) {\n        this.env.getAppendOperations().setAttribute(element, name, value, namespace);\n    }\n    addDynamicAttribute(element, name, reference, isTrusting) {\n        if (name === 'class') {\n            this.addClass(reference);\n        } else {\n            let attributeManager = this.env.attributeFor(element, name, isTrusting);\n            let attribute = new DynamicAttribute(element, attributeManager, name, reference);\n            this.addAttribute(attribute);\n        }\n    }\n    addDynamicAttributeNS(element, namespace, name, reference, isTrusting) {\n        let attributeManager = this.env.attributeFor(element, name, isTrusting, namespace);\n        let nsAttribute = new DynamicAttribute(element, attributeManager, name, reference, namespace);\n        this.addAttribute(nsAttribute);\n    }\n    flush(element, vm) {\n        let { env } = vm;\n        let { opcodes, classList } = this;\n        for (let i = 0; opcodes && i < opcodes.length; i++) {\n            vm.updateWith(opcodes[i]);\n        }\n        if (classList) {\n            let attributeManager = env.attributeFor(element, 'class', false);\n            let attribute = new DynamicAttribute(element, attributeManager, 'class', classList.toReference());\n            let opcode = attribute.flush(env);\n            if (opcode) {\n                vm.updateWith(opcode);\n            }\n        }\n        this.opcodes = null;\n        this.classList = null;\n    }\n    addClass(reference) {\n        let { classList } = this;\n        if (!classList) {\n            classList = this.classList = new ClassList();\n        }\n        classList.append(reference);\n    }\n    addAttribute(attribute) {\n        let opcode = attribute.flush(this.env);\n        if (opcode) {\n            let { opcodes } = this;\n            if (!opcodes) {\n                opcodes = this.opcodes = [];\n            }\n            opcodes.push(opcode);\n        }\n    }\n}\nexport class ComponentElementOperations {\n    constructor(env) {\n        this.env = env;\n        this.attributeNames = null;\n        this.attributes = null;\n        this.classList = null;\n    }\n    addStaticAttribute(element, name, value) {\n        if (name === 'class') {\n            this.addClass(PrimitiveReference.create(value));\n        } else if (this.shouldAddAttribute(name)) {\n            this.addAttribute(name, new StaticAttribute(element, name, value));\n        }\n    }\n    addStaticAttributeNS(element, namespace, name, value) {\n        if (this.shouldAddAttribute(name)) {\n            this.addAttribute(name, new StaticAttribute(element, name, value, namespace));\n        }\n    }\n    addDynamicAttribute(element, name, reference, isTrusting) {\n        if (name === 'class') {\n            this.addClass(reference);\n        } else if (this.shouldAddAttribute(name)) {\n            let attributeManager = this.env.attributeFor(element, name, isTrusting);\n            let attribute = new DynamicAttribute(element, attributeManager, name, reference);\n            this.addAttribute(name, attribute);\n        }\n    }\n    addDynamicAttributeNS(element, namespace, name, reference, isTrusting) {\n        if (this.shouldAddAttribute(name)) {\n            let attributeManager = this.env.attributeFor(element, name, isTrusting, namespace);\n            let nsAttribute = new DynamicAttribute(element, attributeManager, name, reference, namespace);\n            this.addAttribute(name, nsAttribute);\n        }\n    }\n    flush(element, vm) {\n        let { env } = this;\n        let { attributes, classList } = this;\n        for (let i = 0; attributes && i < attributes.length; i++) {\n            let opcode = attributes[i].flush(env);\n            if (opcode) {\n                vm.updateWith(opcode);\n            }\n        }\n        if (classList) {\n            let attributeManager = env.attributeFor(element, 'class', false);\n            let attribute = new DynamicAttribute(element, attributeManager, 'class', classList.toReference());\n            let opcode = attribute.flush(env);\n            if (opcode) {\n                vm.updateWith(opcode);\n            }\n        }\n    }\n    shouldAddAttribute(name) {\n        return !this.attributeNames || this.attributeNames.indexOf(name) === -1;\n    }\n    addClass(reference) {\n        let { classList } = this;\n        if (!classList) {\n            classList = this.classList = new ClassList();\n        }\n        classList.append(reference);\n    }\n    addAttribute(name, attribute) {\n        let { attributeNames, attributes } = this;\n        if (!attributeNames) {\n            attributeNames = this.attributeNames = [];\n            attributes = this.attributes = [];\n        }\n        attributeNames.push(name);\n        unwrap(attributes).push(attribute);\n    }\n}\nAPPEND_OPCODES.add(33 /* FlushElement */, vm => {\n    let stack = vm.elements();\n    let action = 'FlushElementOpcode#evaluate';\n    stack.expectOperations(action).flush(stack.expectConstructing(action), vm);\n    stack.flushElement();\n});\nAPPEND_OPCODES.add(34 /* CloseElement */, vm => vm.elements().closeElement());\nAPPEND_OPCODES.add(30 /* StaticAttr */, (vm, { op1: _name, op2: _value, op3: _namespace }) => {\n    let name = vm.constants.getString(_name);\n    let value = vm.constants.getString(_value);\n    if (_namespace) {\n        let namespace = vm.constants.getString(_namespace);\n        vm.elements().setStaticAttributeNS(namespace, name, value);\n    } else {\n        vm.elements().setStaticAttribute(name, value);\n    }\n});\nAPPEND_OPCODES.add(35 /* Modifier */, (vm, { op1: _manager }) => {\n    let manager = vm.constants.getOther(_manager);\n    let stack = vm.stack;\n    let args = stack.pop();\n    let tag = args.tag;\n    let { constructing: element, updateOperations } = vm.elements();\n    let dynamicScope = vm.dynamicScope();\n    let modifier = manager.create(element, args, dynamicScope, updateOperations);\n    args.clear();\n    vm.env.scheduleInstallModifier(modifier, manager);\n    let destructor = manager.getDestructor(modifier);\n    if (destructor) {\n        vm.newDestroyable(destructor);\n    }\n    vm.updateWith(new UpdateModifierOpcode(tag, manager, modifier));\n});\nexport class UpdateModifierOpcode extends UpdatingOpcode {\n    constructor(tag, manager, modifier) {\n        super();\n        this.tag = tag;\n        this.manager = manager;\n        this.modifier = modifier;\n        this.type = 'update-modifier';\n        this.lastUpdated = tag.value();\n    }\n    evaluate(vm) {\n        let { manager, modifier, tag, lastUpdated } = this;\n        if (!tag.validate(lastUpdated)) {\n            vm.env.scheduleUpdateModifier(modifier, manager);\n            this.lastUpdated = tag.value();\n        }\n    }\n    toJSON() {\n        return {\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}\nexport class StaticAttribute {\n    constructor(element, name, value, namespace) {\n        this.element = element;\n        this.name = name;\n        this.value = value;\n        this.namespace = namespace;\n    }\n    flush(env) {\n        env.getAppendOperations().setAttribute(this.element, this.name, this.value, this.namespace);\n        return null;\n    }\n}\nexport class DynamicAttribute {\n    constructor(element, attributeManager, name, reference, namespace) {\n        this.element = element;\n        this.attributeManager = attributeManager;\n        this.name = name;\n        this.reference = reference;\n        this.namespace = namespace;\n        this.cache = null;\n        this.tag = reference.tag;\n    }\n    patch(env) {\n        let { element, cache } = this;\n        let value = expect(cache, 'must patch after flush').revalidate();\n        if (isModified(value)) {\n            this.attributeManager.updateAttribute(env, element, value, this.namespace);\n        }\n    }\n    flush(env) {\n        let { reference, element } = this;\n        if (isConstReference(reference)) {\n            let value = reference.value();\n            this.attributeManager.setAttribute(env, element, value, this.namespace);\n            return null;\n        } else {\n            let cache = this.cache = new ReferenceCache(reference);\n            let value = cache.peek();\n            this.attributeManager.setAttribute(env, element, value, this.namespace);\n            return new PatchElementOpcode(this);\n        }\n    }\n    toJSON() {\n        let { element, namespace, name, cache } = this;\n        let formattedElement = formatElement(element);\n        let lastValue = expect(cache, 'must serialize after flush').peek();\n        if (namespace) {\n            return {\n                element: formattedElement,\n                lastValue,\n                name,\n                namespace,\n                type: 'attribute'\n            };\n        }\n        return {\n            element: formattedElement,\n            lastValue,\n            name,\n            namespace: namespace === undefined ? null : namespace,\n            type: 'attribute'\n        };\n    }\n}\nfunction formatElement(element) {\n    return JSON.stringify(`<${element.tagName.toLowerCase()} />`);\n}\nAPPEND_OPCODES.add(32 /* DynamicAttrNS */, (vm, { op1: _name, op2: _namespace, op3: trusting }) => {\n    let name = vm.constants.getString(_name);\n    let namespace = vm.constants.getString(_namespace);\n    let reference = vm.stack.pop();\n    vm.elements().setDynamicAttributeNS(namespace, name, reference, !!trusting);\n});\nAPPEND_OPCODES.add(31 /* DynamicAttr */, (vm, { op1: _name, op2: trusting }) => {\n    let name = vm.constants.getString(_name);\n    let reference = vm.stack.pop();\n    vm.elements().setDynamicAttribute(name, reference, !!trusting);\n});\nexport class PatchElementOpcode extends UpdatingOpcode {\n    constructor(operation) {\n        super();\n        this.type = 'patch-element';\n        this.tag = operation.tag;\n        this.operation = operation;\n    }\n    evaluate(vm) {\n        this.operation.patch(vm.env);\n    }\n    toJSON() {\n        let { _guid, type, operation } = this;\n        return {\n            details: operation.toJSON(),\n            guid: _guid,\n            type\n        };\n    }\n}","import { combine, CONSTANT_TAG, isConst, ReferenceCache } from '@glimmer/reference';\nimport { APPEND_OPCODES, UpdatingOpcode } from '../../opcodes';\nimport ARGS from '../../vm/arguments';\nimport { ComponentElementOperations } from './dom';\nimport { Assert } from './vm';\nAPPEND_OPCODES.add(56 /* PushComponentManager */, (vm, { op1: _definition }) => {\n    let definition = vm.constants.getOther(_definition);\n    let stack = vm.stack;\n    stack.push({ definition, manager: definition.manager, component: null });\n});\nAPPEND_OPCODES.add(57 /* PushDynamicComponentManager */, vm => {\n    let stack = vm.stack;\n    let reference = stack.pop();\n    let cache = isConst(reference) ? undefined : new ReferenceCache(reference);\n    let definition = cache ? cache.peek() : reference.value();\n    stack.push({ definition, manager: definition.manager, component: null });\n    if (cache) {\n        vm.updateWith(new Assert(cache));\n    }\n});\nAPPEND_OPCODES.add(58 /* PushArgs */, (vm, { op1: synthetic }) => {\n    let stack = vm.stack;\n    ARGS.setup(stack, !!synthetic);\n    stack.push(ARGS);\n});\nAPPEND_OPCODES.add(59 /* PrepareArgs */, (vm, { op1: _state }) => {\n    let stack = vm.stack;\n    let { definition, manager } = vm.fetchValue(_state);\n    let args = stack.pop();\n    let preparedArgs = manager.prepareArgs(definition, args);\n    if (preparedArgs) {\n        args.clear();\n        let { positional, named } = preparedArgs;\n        let positionalCount = positional.length;\n        for (let i = 0; i < positionalCount; i++) {\n            stack.push(positional[i]);\n        }\n        stack.push(positionalCount);\n        let names = Object.keys(named);\n        let namedCount = names.length;\n        let atNames = [];\n        for (let i = 0; i < namedCount; i++) {\n            let value = named[names[i]];\n            let atName = `@${names[i]}`;\n            stack.push(value);\n            atNames.push(atName);\n        }\n        stack.push(atNames);\n        args.setup(stack, false);\n    }\n    stack.push(args);\n});\nAPPEND_OPCODES.add(60 /* CreateComponent */, (vm, { op1: flags, op2: _state }) => {\n    let definition;\n    let manager;\n    let args = vm.stack.pop();\n    let dynamicScope = vm.dynamicScope();\n    let state = ({ definition, manager } = vm.fetchValue(_state));\n    let hasDefaultBlock = flags & 1;\n    let component = manager.create(vm.env, definition, args, dynamicScope, vm.getSelf(), !!hasDefaultBlock);\n    state.component = component;\n    vm.updateWith(new UpdateComponentOpcode(args.tag, definition.name, component, manager, dynamicScope));\n});\nAPPEND_OPCODES.add(61 /* RegisterComponentDestructor */, (vm, { op1: _state }) => {\n    let { manager, component } = vm.fetchValue(_state);\n    let destructor = manager.getDestructor(component);\n    if (destructor) vm.newDestroyable(destructor);\n});\nAPPEND_OPCODES.add(65 /* BeginComponentTransaction */, vm => {\n    vm.beginCacheGroup();\n    vm.elements().pushSimpleBlock();\n});\nAPPEND_OPCODES.add(62 /* PushComponentOperations */, vm => {\n    vm.stack.push(new ComponentElementOperations(vm.env));\n});\nAPPEND_OPCODES.add(67 /* DidCreateElement */, (vm, { op1: _state }) => {\n    let { manager, component } = vm.fetchValue(_state);\n    let action = 'DidCreateElementOpcode#evaluate';\n    manager.didCreateElement(component, vm.elements().expectConstructing(action), vm.elements().expectOperations(action));\n});\nAPPEND_OPCODES.add(63 /* GetComponentSelf */, (vm, { op1: _state }) => {\n    let state = vm.fetchValue(_state);\n    vm.stack.push(state.manager.getSelf(state.component));\n});\nAPPEND_OPCODES.add(64 /* GetComponentLayout */, (vm, { op1: _state }) => {\n    let { manager, definition, component } = vm.fetchValue(_state);\n    vm.stack.push(manager.layoutFor(definition, component, vm.env));\n});\nAPPEND_OPCODES.add(68 /* DidRenderLayout */, (vm, { op1: _state }) => {\n    let { manager, component } = vm.fetchValue(_state);\n    let bounds = vm.elements().popBlock();\n    manager.didRenderLayout(component, bounds);\n    vm.env.didCreate(component, manager);\n    vm.updateWith(new DidUpdateLayoutOpcode(manager, component, bounds));\n});\nAPPEND_OPCODES.add(66 /* CommitComponentTransaction */, vm => vm.commitCacheGroup());\nexport class UpdateComponentOpcode extends UpdatingOpcode {\n    constructor(tag, name, component, manager, dynamicScope) {\n        super();\n        this.name = name;\n        this.component = component;\n        this.manager = manager;\n        this.dynamicScope = dynamicScope;\n        this.type = 'update-component';\n        let componentTag = manager.getTag(component);\n        if (componentTag) {\n            this.tag = combine([tag, componentTag]);\n        } else {\n            this.tag = tag;\n        }\n    }\n    evaluate(_vm) {\n        let { component, manager, dynamicScope } = this;\n        manager.update(component, dynamicScope);\n    }\n    toJSON() {\n        return {\n            args: [JSON.stringify(this.name)],\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}\nexport class DidUpdateLayoutOpcode extends UpdatingOpcode {\n    constructor(manager, component, bounds) {\n        super();\n        this.manager = manager;\n        this.component = component;\n        this.bounds = bounds;\n        this.type = 'did-update-layout';\n        this.tag = CONSTANT_TAG;\n    }\n    evaluate(vm) {\n        let { manager, component, bounds } = this;\n        manager.didUpdateLayout(component, bounds);\n        vm.env.didUpdate(component, manager);\n    }\n}","export class Cursor {\n    constructor(element, nextSibling) {\n        this.element = element;\n        this.nextSibling = nextSibling;\n    }\n}\nexport class RealDOMBounds {\n    constructor(bounds) {\n        this.bounds = bounds;\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n}\nexport class ConcreteBounds {\n    constructor(parentNode, first, last) {\n        this.parentNode = parentNode;\n        this.first = first;\n        this.last = last;\n    }\n    parentElement() {\n        return this.parentNode;\n    }\n    firstNode() {\n        return this.first;\n    }\n    lastNode() {\n        return this.last;\n    }\n}\nexport class SingleNodeBounds {\n    constructor(parentNode, node) {\n        this.parentNode = parentNode;\n        this.node = node;\n    }\n    parentElement() {\n        return this.parentNode;\n    }\n    firstNode() {\n        return this.node;\n    }\n    lastNode() {\n        return this.node;\n    }\n}\nexport function bounds(parent, first, last) {\n    return new ConcreteBounds(parent, first, last);\n}\nexport function single(parent, node) {\n    return new SingleNodeBounds(parent, node);\n}\nexport function move(bounds, reference) {\n    let parent = bounds.parentElement();\n    let first = bounds.firstNode();\n    let last = bounds.lastNode();\n    let node = first;\n    while (node) {\n        let next = node.nextSibling;\n        parent.insertBefore(node, reference);\n        if (node === last) return next;\n        node = next;\n    }\n    return null;\n}\nexport function clear(bounds) {\n    let parent = bounds.parentElement();\n    let first = bounds.firstNode();\n    let last = bounds.lastNode();\n    let node = first;\n    while (node) {\n        let next = node.nextSibling;\n        parent.removeChild(node);\n        if (node === last) return next;\n        node = next;\n    }\n    return null;\n}","import { clear } from './bounds';\nimport { Stack, assert, expect } from '@glimmer/util';\nimport { SimpleElementOperations } from './compiled/opcodes/dom';\nclass First {\n    constructor(node) {\n        this.node = node;\n    }\n    firstNode() {\n        return this.node;\n    }\n}\nclass Last {\n    constructor(node) {\n        this.node = node;\n    }\n    lastNode() {\n        return this.node;\n    }\n}\nexport class Fragment {\n    constructor(bounds) {\n        this.bounds = bounds;\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n    update(bounds) {\n        this.bounds = bounds;\n    }\n}\nexport class ElementStack {\n    constructor(env, parentNode, nextSibling) {\n        this.constructing = null;\n        this.operations = null;\n        this.elementStack = new Stack();\n        this.nextSiblingStack = new Stack();\n        this.blockStack = new Stack();\n        this.env = env;\n        this.dom = env.getAppendOperations();\n        this.updateOperations = env.getDOM();\n        this.element = parentNode;\n        this.nextSibling = nextSibling;\n        this.defaultOperations = new SimpleElementOperations(env);\n        this.pushSimpleBlock();\n        this.elementStack.push(this.element);\n        this.nextSiblingStack.push(this.nextSibling);\n    }\n    static forInitialRender(env, parentNode, nextSibling) {\n        return new ElementStack(env, parentNode, nextSibling);\n    }\n    static resume(env, tracker, nextSibling) {\n        let parentNode = tracker.parentElement();\n        let stack = new ElementStack(env, parentNode, nextSibling);\n        stack.pushBlockTracker(tracker);\n        return stack;\n    }\n    expectConstructing(method) {\n        return expect(this.constructing, `${method} should only be called while constructing an element`);\n    }\n    expectOperations(method) {\n        return expect(this.operations, `${method} should only be called while constructing an element`);\n    }\n    block() {\n        return expect(this.blockStack.current, \"Expected a current block tracker\");\n    }\n    popElement() {\n        let { elementStack, nextSiblingStack } = this;\n        let topElement = elementStack.pop();\n        nextSiblingStack.pop();\n        // LOGGER.debug(`-> element stack ${this.elementStack.toArray().map(e => e.tagName).join(', ')}`);\n        this.element = expect(elementStack.current, \"can't pop past the last element\");\n        this.nextSibling = nextSiblingStack.current;\n        return topElement;\n    }\n    pushSimpleBlock() {\n        let tracker = new SimpleBlockTracker(this.element);\n        this.pushBlockTracker(tracker);\n        return tracker;\n    }\n    pushUpdatableBlock() {\n        let tracker = new UpdatableBlockTracker(this.element);\n        this.pushBlockTracker(tracker);\n        return tracker;\n    }\n    pushBlockTracker(tracker, isRemote = false) {\n        let current = this.blockStack.current;\n        if (current !== null) {\n            current.newDestroyable(tracker);\n            if (!isRemote) {\n                current.newBounds(tracker);\n            }\n        }\n        this.blockStack.push(tracker);\n        return tracker;\n    }\n    pushBlockList(list) {\n        let tracker = new BlockListTracker(this.element, list);\n        let current = this.blockStack.current;\n        if (current !== null) {\n            current.newDestroyable(tracker);\n            current.newBounds(tracker);\n        }\n        this.blockStack.push(tracker);\n        return tracker;\n    }\n    popBlock() {\n        this.block().finalize(this);\n        return expect(this.blockStack.pop(), \"Expected popBlock to return a block\");\n    }\n    openElement(tag, _operations) {\n        // workaround argument.length transpile of arg initializer\n        let operations = _operations === undefined ? this.defaultOperations : _operations;\n        let element = this.dom.createElement(tag, this.element);\n        this.constructing = element;\n        this.operations = operations;\n        return element;\n    }\n    flushElement() {\n        let parent = this.element;\n        let element = expect(this.constructing, `flushElement should only be called when constructing an element`);\n        this.dom.insertBefore(parent, element, this.nextSibling);\n        this.constructing = null;\n        this.operations = null;\n        this.pushElement(element, null);\n        this.block().openElement(element);\n    }\n    pushRemoteElement(element, nextSibling = null) {\n        this.pushElement(element, nextSibling);\n        let tracker = new RemoteBlockTracker(element);\n        this.pushBlockTracker(tracker, true);\n    }\n    popRemoteElement() {\n        this.popBlock();\n        this.popElement();\n    }\n    pushElement(element, nextSibling) {\n        this.element = element;\n        this.elementStack.push(element);\n        // LOGGER.debug(`-> element stack ${this.elementStack.toArray().map(e => e.tagName).join(', ')}`);\n        this.nextSibling = nextSibling;\n        this.nextSiblingStack.push(nextSibling);\n    }\n    newDestroyable(d) {\n        this.block().newDestroyable(d);\n    }\n    newBounds(bounds) {\n        this.block().newBounds(bounds);\n    }\n    appendText(string) {\n        let { dom } = this;\n        let text = dom.createTextNode(string);\n        dom.insertBefore(this.element, text, this.nextSibling);\n        this.block().newNode(text);\n        return text;\n    }\n    appendComment(string) {\n        let { dom } = this;\n        let comment = dom.createComment(string);\n        dom.insertBefore(this.element, comment, this.nextSibling);\n        this.block().newNode(comment);\n        return comment;\n    }\n    setStaticAttribute(name, value) {\n        this.expectOperations('setStaticAttribute').addStaticAttribute(this.expectConstructing('setStaticAttribute'), name, value);\n    }\n    setStaticAttributeNS(namespace, name, value) {\n        this.expectOperations('setStaticAttributeNS').addStaticAttributeNS(this.expectConstructing('setStaticAttributeNS'), namespace, name, value);\n    }\n    setDynamicAttribute(name, reference, isTrusting) {\n        this.expectOperations('setDynamicAttribute').addDynamicAttribute(this.expectConstructing('setDynamicAttribute'), name, reference, isTrusting);\n    }\n    setDynamicAttributeNS(namespace, name, reference, isTrusting) {\n        this.expectOperations('setDynamicAttributeNS').addDynamicAttributeNS(this.expectConstructing('setDynamicAttributeNS'), namespace, name, reference, isTrusting);\n    }\n    closeElement() {\n        this.block().closeElement();\n        this.popElement();\n    }\n}\nexport class SimpleBlockTracker {\n    constructor(parent) {\n        this.parent = parent;\n        this.first = null;\n        this.last = null;\n        this.destroyables = null;\n        this.nesting = 0;\n    }\n    destroy() {\n        let { destroyables } = this;\n        if (destroyables && destroyables.length) {\n            for (let i = 0; i < destroyables.length; i++) {\n                destroyables[i].destroy();\n            }\n        }\n    }\n    parentElement() {\n        return this.parent;\n    }\n    firstNode() {\n        return this.first && this.first.firstNode();\n    }\n    lastNode() {\n        return this.last && this.last.lastNode();\n    }\n    openElement(element) {\n        this.newNode(element);\n        this.nesting++;\n    }\n    closeElement() {\n        this.nesting--;\n    }\n    newNode(node) {\n        if (this.nesting !== 0) return;\n        if (!this.first) {\n            this.first = new First(node);\n        }\n        this.last = new Last(node);\n    }\n    newBounds(bounds) {\n        if (this.nesting !== 0) return;\n        if (!this.first) {\n            this.first = bounds;\n        }\n        this.last = bounds;\n    }\n    newDestroyable(d) {\n        this.destroyables = this.destroyables || [];\n        this.destroyables.push(d);\n    }\n    finalize(stack) {\n        if (!this.first) {\n            stack.appendComment('');\n        }\n    }\n}\nclass RemoteBlockTracker extends SimpleBlockTracker {\n    destroy() {\n        super.destroy();\n        clear(this);\n    }\n}\nexport class UpdatableBlockTracker extends SimpleBlockTracker {\n    reset(env) {\n        let { destroyables } = this;\n        if (destroyables && destroyables.length) {\n            for (let i = 0; i < destroyables.length; i++) {\n                env.didDestroy(destroyables[i]);\n            }\n        }\n        let nextSibling = clear(this);\n        this.first = null;\n        this.last = null;\n        this.destroyables = null;\n        this.nesting = 0;\n        return nextSibling;\n    }\n}\nclass BlockListTracker {\n    constructor(parent, boundList) {\n        this.parent = parent;\n        this.boundList = boundList;\n        this.parent = parent;\n        this.boundList = boundList;\n    }\n    destroy() {\n        this.boundList.forEachNode(node => node.destroy());\n    }\n    parentElement() {\n        return this.parent;\n    }\n    firstNode() {\n        let head = this.boundList.head();\n        return head && head.firstNode();\n    }\n    lastNode() {\n        let tail = this.boundList.tail();\n        return tail && tail.lastNode();\n    }\n    openElement(_element) {\n        assert(false, 'Cannot openElement directly inside a block list');\n    }\n    closeElement() {\n        assert(false, 'Cannot closeElement directly inside a block list');\n    }\n    newNode(_node) {\n        assert(false, 'Cannot create a new node directly inside a block list');\n    }\n    newBounds(_bounds) {}\n    newDestroyable(_d) {}\n    finalize(_stack) {}\n}","const COMPONENT_DEFINITION_BRAND = 'COMPONENT DEFINITION [id=e59c754e-61eb-4392-8c4a-2c0ac72bfcd4]';\nexport function isComponentDefinition(obj) {\n    return typeof obj === 'object' && obj !== null && obj[COMPONENT_DEFINITION_BRAND];\n}\nexport class ComponentDefinition {\n    constructor(name, manager, ComponentClass) {\n        this[COMPONENT_DEFINITION_BRAND] = true;\n        this.name = name;\n        this.manager = manager;\n        this.ComponentClass = ComponentClass;\n    }\n}","import { unreachable } from '@glimmer/util';\nimport { clear, single, SingleNodeBounds } from './bounds';\nexport function isSafeString(value) {\n    return typeof value === 'object' && value !== null && typeof value.toHTML === 'function';\n}\nexport function isNode(value) {\n    return typeof value === 'object' && value !== null && typeof value.nodeType === 'number';\n}\nexport function isString(value) {\n    return typeof value === 'string';\n}\nclass Upsert {\n    constructor(bounds) {\n        this.bounds = bounds;\n    }\n}\nexport default Upsert;\nexport function cautiousInsert(dom, cursor, value) {\n    if (isString(value)) {\n        return TextUpsert.insert(dom, cursor, value);\n    }\n    if (isSafeString(value)) {\n        return SafeStringUpsert.insert(dom, cursor, value);\n    }\n    if (isNode(value)) {\n        return NodeUpsert.insert(dom, cursor, value);\n    }\n    throw unreachable();\n}\nexport function trustingInsert(dom, cursor, value) {\n    if (isString(value)) {\n        return HTMLUpsert.insert(dom, cursor, value);\n    }\n    if (isNode(value)) {\n        return NodeUpsert.insert(dom, cursor, value);\n    }\n    throw unreachable();\n}\nclass TextUpsert extends Upsert {\n    static insert(dom, cursor, value) {\n        let textNode = dom.createTextNode(value);\n        dom.insertBefore(cursor.element, textNode, cursor.nextSibling);\n        let bounds = new SingleNodeBounds(cursor.element, textNode);\n        return new TextUpsert(bounds, textNode);\n    }\n    constructor(bounds, textNode) {\n        super(bounds);\n        this.textNode = textNode;\n    }\n    update(_dom, value) {\n        if (isString(value)) {\n            let { textNode } = this;\n            textNode.nodeValue = value;\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\nclass HTMLUpsert extends Upsert {\n    static insert(dom, cursor, value) {\n        let bounds = dom.insertHTMLBefore(cursor.element, cursor.nextSibling, value);\n        return new HTMLUpsert(bounds);\n    }\n    update(dom, value) {\n        if (isString(value)) {\n            let { bounds } = this;\n            let parentElement = bounds.parentElement();\n            let nextSibling = clear(bounds);\n            this.bounds = dom.insertHTMLBefore(parentElement, nextSibling, value);\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\nclass SafeStringUpsert extends Upsert {\n    constructor(bounds, lastStringValue) {\n        super(bounds);\n        this.lastStringValue = lastStringValue;\n    }\n    static insert(dom, cursor, value) {\n        let stringValue = value.toHTML();\n        let bounds = dom.insertHTMLBefore(cursor.element, cursor.nextSibling, stringValue);\n        return new SafeStringUpsert(bounds, stringValue);\n    }\n    update(dom, value) {\n        if (isSafeString(value)) {\n            let stringValue = value.toHTML();\n            if (stringValue !== this.lastStringValue) {\n                let { bounds } = this;\n                let parentElement = bounds.parentElement();\n                let nextSibling = clear(bounds);\n                this.bounds = dom.insertHTMLBefore(parentElement, nextSibling, stringValue);\n                this.lastStringValue = stringValue;\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\nclass NodeUpsert extends Upsert {\n    static insert(dom, cursor, node) {\n        dom.insertBefore(cursor.element, node, cursor.nextSibling);\n        return new NodeUpsert(single(cursor.element, node));\n    }\n    update(dom, value) {\n        if (isNode(value)) {\n            let { bounds } = this;\n            let parentElement = bounds.parentElement();\n            let nextSibling = clear(bounds);\n            this.bounds = dom.insertNodeBefore(parentElement, value, nextSibling);\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","import { isConst, isModified, map, ReferenceCache } from '@glimmer/reference';\nimport { clear, Cursor } from '../../bounds';\nimport { Fragment } from '../../builder';\nimport { isComponentDefinition } from '../../component/interfaces';\nimport { APPEND_OPCODES, UpdatingOpcode } from '../../opcodes';\nimport { ConditionalReference } from '../../references';\nimport { cautiousInsert, isNode, isSafeString, isString, trustingInsert } from '../../upsert';\nAPPEND_OPCODES.add(26 /* DynamicContent */, (vm, { op1: append }) => {\n    let opcode = vm.constants.getOther(append);\n    opcode.evaluate(vm);\n});\nfunction isEmpty(value) {\n    return value === null || value === undefined || typeof value.toString !== 'function';\n}\nexport function normalizeTextValue(value) {\n    if (isEmpty(value)) {\n        return '';\n    }\n    return String(value);\n}\nfunction normalizeTrustedValue(value) {\n    if (isEmpty(value)) {\n        return '';\n    }\n    if (isString(value)) {\n        return value;\n    }\n    if (isSafeString(value)) {\n        return value.toHTML();\n    }\n    if (isNode(value)) {\n        return value;\n    }\n    return String(value);\n}\nfunction normalizeValue(value) {\n    if (isEmpty(value)) {\n        return '';\n    }\n    if (isString(value)) {\n        return value;\n    }\n    if (isSafeString(value) || isNode(value)) {\n        return value;\n    }\n    return String(value);\n}\nexport class AppendDynamicOpcode {\n    evaluate(vm) {\n        let reference = vm.stack.pop();\n        let normalized = this.normalize(reference);\n        let value;\n        let cache;\n        if (isConst(reference)) {\n            value = normalized.value();\n        } else {\n            cache = new ReferenceCache(normalized);\n            value = cache.peek();\n        }\n        let stack = vm.elements();\n        let upsert = this.insert(vm.env.getAppendOperations(), stack, value);\n        let bounds = new Fragment(upsert.bounds);\n        stack.newBounds(bounds);\n        if (cache /* i.e. !isConst(reference) */) {\n                vm.updateWith(this.updateWith(vm, reference, cache, bounds, upsert));\n            }\n    }\n}\nexport class IsComponentDefinitionReference extends ConditionalReference {\n    static create(inner) {\n        return new IsComponentDefinitionReference(inner);\n    }\n    toBool(value) {\n        return isComponentDefinition(value);\n    }\n}\nclass UpdateOpcode extends UpdatingOpcode {\n    constructor(cache, bounds, upsert) {\n        super();\n        this.cache = cache;\n        this.bounds = bounds;\n        this.upsert = upsert;\n        this.tag = cache.tag;\n    }\n    evaluate(vm) {\n        let value = this.cache.revalidate();\n        if (isModified(value)) {\n            let { bounds, upsert } = this;\n            let { dom } = vm;\n            if (!this.upsert.update(dom, value)) {\n                let cursor = new Cursor(bounds.parentElement(), clear(bounds));\n                upsert = this.upsert = this.insert(vm.env.getAppendOperations(), cursor, value);\n            }\n            bounds.update(upsert.bounds);\n        }\n    }\n    toJSON() {\n        let { _guid: guid, type, cache } = this;\n        return {\n            details: { lastValue: JSON.stringify(cache.peek()) },\n            guid,\n            type\n        };\n    }\n}\nexport class OptimizedCautiousAppendOpcode extends AppendDynamicOpcode {\n    constructor() {\n        super(...arguments);\n        this.type = 'optimized-cautious-append';\n    }\n    normalize(reference) {\n        return map(reference, normalizeValue);\n    }\n    insert(dom, cursor, value) {\n        return cautiousInsert(dom, cursor, value);\n    }\n    updateWith(_vm, _reference, cache, bounds, upsert) {\n        return new OptimizedCautiousUpdateOpcode(cache, bounds, upsert);\n    }\n}\nclass OptimizedCautiousUpdateOpcode extends UpdateOpcode {\n    constructor() {\n        super(...arguments);\n        this.type = 'optimized-cautious-update';\n    }\n    insert(dom, cursor, value) {\n        return cautiousInsert(dom, cursor, value);\n    }\n}\nexport class OptimizedTrustingAppendOpcode extends AppendDynamicOpcode {\n    constructor() {\n        super(...arguments);\n        this.type = 'optimized-trusting-append';\n    }\n    normalize(reference) {\n        return map(reference, normalizeTrustedValue);\n    }\n    insert(dom, cursor, value) {\n        return trustingInsert(dom, cursor, value);\n    }\n    updateWith(_vm, _reference, cache, bounds, upsert) {\n        return new OptimizedTrustingUpdateOpcode(cache, bounds, upsert);\n    }\n}\nclass OptimizedTrustingUpdateOpcode extends UpdateOpcode {\n    constructor() {\n        super(...arguments);\n        this.type = 'optimized-trusting-update';\n    }\n    insert(dom, cursor, value) {\n        return trustingInsert(dom, cursor, value);\n    }\n}","import { dict } from '@glimmer/util';\nimport { APPEND_OPCODES } from '../../opcodes';\n/* tslint:disable */\nfunction debugCallback(context, get) {\n    console.info('Use `context`, and `get(<path>)` to debug this template.');\n    // for example...\n    context === get('this');\n    debugger;\n}\n/* tslint:enable */\nlet callback = debugCallback;\n// For testing purposes\nexport function setDebuggerCallback(cb) {\n    callback = cb;\n}\nexport function resetDebuggerCallback() {\n    callback = debugCallback;\n}\nclass ScopeInspector {\n    constructor(scope, symbols, evalInfo) {\n        this.scope = scope;\n        this.locals = dict();\n        for (let i = 0; i < evalInfo.length; i++) {\n            let slot = evalInfo[i];\n            let name = symbols[slot - 1];\n            let ref = scope.getSymbol(slot);\n            this.locals[name] = ref;\n        }\n    }\n    get(path) {\n        let { scope, locals } = this;\n        let parts = path.split('.');\n        let [head, ...tail] = path.split('.');\n        let evalScope = scope.getEvalScope();\n        let ref;\n        if (head === 'this') {\n            ref = scope.getSelf();\n        } else if (locals[head]) {\n            ref = locals[head];\n        } else if (head.indexOf('@') === 0 && evalScope[head]) {\n            ref = evalScope[head];\n        } else {\n            ref = this.scope.getSelf();\n            tail = parts;\n        }\n        return tail.reduce((r, part) => r.get(part), ref);\n    }\n}\nAPPEND_OPCODES.add(71 /* Debugger */, (vm, { op1: _symbols, op2: _evalInfo }) => {\n    let symbols = vm.constants.getOther(_symbols);\n    let evalInfo = vm.constants.getArray(_evalInfo);\n    let inspector = new ScopeInspector(vm.scope(), symbols, evalInfo);\n    callback(vm.getSelf().value(), path => inspector.get(path).value());\n});","import { APPEND_OPCODES } from '../../opcodes';\nAPPEND_OPCODES.add(69 /* GetPartialTemplate */, vm => {\n    let stack = vm.stack;\n    let definition = stack.pop();\n    stack.push(definition.value().template.asPartial());\n});","import { ReferenceIterator } from '@glimmer/reference';\nimport { APPEND_OPCODES } from '../../opcodes';\nclass IterablePresenceReference {\n    constructor(artifacts) {\n        this.tag = artifacts.tag;\n        this.artifacts = artifacts;\n    }\n    value() {\n        return !this.artifacts.isEmpty();\n    }\n}\nAPPEND_OPCODES.add(54 /* PutIterator */, vm => {\n    let stack = vm.stack;\n    let listRef = stack.pop();\n    let key = stack.pop();\n    let iterable = vm.env.iterableFor(listRef, key.value());\n    let iterator = new ReferenceIterator(iterable);\n    stack.push(iterator);\n    stack.push(new IterablePresenceReference(iterator.artifacts));\n});\nAPPEND_OPCODES.add(52 /* EnterList */, (vm, { op1: relativeStart }) => {\n    vm.enterList(relativeStart);\n});\nAPPEND_OPCODES.add(53 /* ExitList */, vm => vm.exitList());\nAPPEND_OPCODES.add(55 /* Iterate */, (vm, { op1: breaks }) => {\n    let stack = vm.stack;\n    let item = stack.peek().next();\n    if (item) {\n        let tryOpcode = vm.iterate(item.memo, item.value);\n        vm.enterItem(item.key, tryOpcode);\n    } else {\n        vm.goto(breaks);\n    }\n});","export var Opcodes;\n(function (Opcodes) {\n    // Statements\n    Opcodes[Opcodes[\"Text\"] = 0] = \"Text\";\n    Opcodes[Opcodes[\"Append\"] = 1] = \"Append\";\n    Opcodes[Opcodes[\"Comment\"] = 2] = \"Comment\";\n    Opcodes[Opcodes[\"Modifier\"] = 3] = \"Modifier\";\n    Opcodes[Opcodes[\"Block\"] = 4] = \"Block\";\n    Opcodes[Opcodes[\"Component\"] = 5] = \"Component\";\n    Opcodes[Opcodes[\"OpenElement\"] = 6] = \"OpenElement\";\n    Opcodes[Opcodes[\"FlushElement\"] = 7] = \"FlushElement\";\n    Opcodes[Opcodes[\"CloseElement\"] = 8] = \"CloseElement\";\n    Opcodes[Opcodes[\"StaticAttr\"] = 9] = \"StaticAttr\";\n    Opcodes[Opcodes[\"DynamicAttr\"] = 10] = \"DynamicAttr\";\n    Opcodes[Opcodes[\"Yield\"] = 11] = \"Yield\";\n    Opcodes[Opcodes[\"Partial\"] = 12] = \"Partial\";\n    Opcodes[Opcodes[\"DynamicArg\"] = 13] = \"DynamicArg\";\n    Opcodes[Opcodes[\"StaticArg\"] = 14] = \"StaticArg\";\n    Opcodes[Opcodes[\"TrustingAttr\"] = 15] = \"TrustingAttr\";\n    Opcodes[Opcodes[\"Debugger\"] = 16] = \"Debugger\";\n    Opcodes[Opcodes[\"ClientSideStatement\"] = 17] = \"ClientSideStatement\";\n    // Expressions\n    Opcodes[Opcodes[\"Unknown\"] = 18] = \"Unknown\";\n    Opcodes[Opcodes[\"Get\"] = 19] = \"Get\";\n    Opcodes[Opcodes[\"MaybeLocal\"] = 20] = \"MaybeLocal\";\n    Opcodes[Opcodes[\"FixThisBeforeWeMerge\"] = 21] = \"FixThisBeforeWeMerge\";\n    Opcodes[Opcodes[\"HasBlock\"] = 22] = \"HasBlock\";\n    Opcodes[Opcodes[\"HasBlockParams\"] = 23] = \"HasBlockParams\";\n    Opcodes[Opcodes[\"Undefined\"] = 24] = \"Undefined\";\n    Opcodes[Opcodes[\"Helper\"] = 25] = \"Helper\";\n    Opcodes[Opcodes[\"Concat\"] = 26] = \"Concat\";\n    Opcodes[Opcodes[\"ClientSideExpression\"] = 27] = \"ClientSideExpression\";\n})(Opcodes || (Opcodes = {}));","import { Opcodes } from './lib/opcodes';\nexport { Opcodes as Ops } from './lib/opcodes';\nexport function is(variant) {\n    return function (value) {\n        return Array.isArray(value) && value[0] === variant;\n    };\n}\nexport var Expressions;\n(function (Expressions) {\n    Expressions.isUnknown = is(Opcodes.Unknown);\n    Expressions.isGet = is(Opcodes.Get);\n    Expressions.isConcat = is(Opcodes.Concat);\n    Expressions.isHelper = is(Opcodes.Helper);\n    Expressions.isHasBlock = is(Opcodes.HasBlock);\n    Expressions.isHasBlockParams = is(Opcodes.HasBlockParams);\n    Expressions.isUndefined = is(Opcodes.Undefined);\n    Expressions.isClientSide = is(Opcodes.ClientSideExpression);\n    Expressions.isMaybeLocal = is(Opcodes.MaybeLocal);\n    function isPrimitiveValue(value) {\n        if (value === null) {\n            return true;\n        }\n        return typeof value !== 'object';\n    }\n    Expressions.isPrimitiveValue = isPrimitiveValue;\n})(Expressions || (Expressions = {}));\nexport var Statements;\n(function (Statements) {\n    Statements.isText = is(Opcodes.Text);\n    Statements.isAppend = is(Opcodes.Append);\n    Statements.isComment = is(Opcodes.Comment);\n    Statements.isModifier = is(Opcodes.Modifier);\n    Statements.isBlock = is(Opcodes.Block);\n    Statements.isComponent = is(Opcodes.Component);\n    Statements.isOpenElement = is(Opcodes.OpenElement);\n    Statements.isFlushElement = is(Opcodes.FlushElement);\n    Statements.isCloseElement = is(Opcodes.CloseElement);\n    Statements.isStaticAttr = is(Opcodes.StaticAttr);\n    Statements.isDynamicAttr = is(Opcodes.DynamicAttr);\n    Statements.isYield = is(Opcodes.Yield);\n    Statements.isPartial = is(Opcodes.Partial);\n    Statements.isDynamicArg = is(Opcodes.DynamicArg);\n    Statements.isStaticArg = is(Opcodes.StaticArg);\n    Statements.isTrustingAttr = is(Opcodes.TrustingAttr);\n    Statements.isDebugger = is(Opcodes.Debugger);\n    Statements.isClientSide = is(Opcodes.ClientSideStatement);\n    function isAttribute(val) {\n        return val[0] === Opcodes.StaticAttr || val[0] === Opcodes.DynamicAttr || val[0] === Opcodes.TrustingAttr;\n    }\n    Statements.isAttribute = isAttribute;\n    function isArgument(val) {\n        return val[0] === Opcodes.StaticArg || val[0] === Opcodes.DynamicArg;\n    }\n    Statements.isArgument = isArgument;\n    function isParameter(val) {\n        return isAttribute(val) || isArgument(val);\n    }\n    Statements.isParameter = isParameter;\n    function getParameterName(s) {\n        return s[1];\n    }\n    Statements.getParameterName = getParameterName;\n})(Statements || (Statements = {}));","export var Ops;\n(function (Ops) {\n    Ops[Ops[\"OpenComponentElement\"] = 0] = \"OpenComponentElement\";\n    Ops[Ops[\"DidCreateElement\"] = 1] = \"DidCreateElement\";\n    Ops[Ops[\"DidRenderLayout\"] = 2] = \"DidRenderLayout\";\n    Ops[Ops[\"FunctionExpression\"] = 3] = \"FunctionExpression\";\n})(Ops || (Ops = {}));","export class CompiledStaticTemplate {\n    constructor(handle) {\n        this.handle = handle;\n    }\n}\nexport class CompiledDynamicTemplate {\n    constructor(handle, symbolTable) {\n        this.handle = handle;\n        this.symbolTable = symbolTable;\n    }\n}","import { CompiledDynamicTemplate } from './compiled/blocks';\nimport { Ops } from '@glimmer/wire-format';\nimport { Register, debugSlice } from './opcodes';\nimport { ATTRS_BLOCK, compileStatement } from './syntax/functions';\nimport * as ClientSide from './syntax/client-side';\nimport { expr } from './syntax/functions';\nimport OpcodeBuilderDSL from './compiled/opcodes/builder';\n\nexport function compileLayout(compilable, env) {\n    let builder = new ComponentLayoutBuilder(env);\n    compilable.compile(builder);\n    return builder.compile();\n}\nclass ComponentLayoutBuilder {\n    constructor(env) {\n        this.env = env;\n    }\n    wrapLayout(layout) {\n        this.inner = new WrappedBuilder(this.env, layout);\n    }\n    fromLayout(componentName, layout) {\n        this.inner = new UnwrappedBuilder(this.env, componentName, layout);\n    }\n    compile() {\n        return this.inner.compile();\n    }\n    get tag() {\n        return this.inner.tag;\n    }\n    get attrs() {\n        return this.inner.attrs;\n    }\n}\nclass WrappedBuilder {\n    constructor(env, layout) {\n        this.env = env;\n        this.layout = layout;\n        this.tag = new ComponentTagBuilder();\n        this.attrs = new ComponentAttrsBuilder();\n    }\n    compile() {\n        //========DYNAMIC\n        //        PutValue(TagExpr)\n        //        Test\n        //        JumpUnless(BODY)\n        //        OpenDynamicPrimitiveElement\n        //        DidCreateElement\n        //        ...attr statements...\n        //        FlushElement\n        // BODY:  Noop\n        //        ...body statements...\n        //        PutValue(TagExpr)\n        //        Test\n        //        JumpUnless(END)\n        //        CloseElement\n        // END:   Noop\n        //        DidRenderLayout\n        //        Exit\n        //\n        //========STATIC\n        //        OpenPrimitiveElementOpcode\n        //        DidCreateElement\n        //        ...attr statements...\n        //        FlushElement\n        //        ...body statements...\n        //        CloseElement\n        //        DidRenderLayout\n        //        Exit\n        let { env, layout } = this;\n        let meta = { templateMeta: layout.meta, symbols: layout.symbols, asPartial: false };\n        let dynamicTag = this.tag.getDynamic();\n        let staticTag = this.tag.getStatic();\n        let b = builder(env, meta);\n        b.startLabels();\n        if (dynamicTag) {\n            b.fetch(Register.s1);\n            expr(dynamicTag, b);\n            b.dup();\n            b.load(Register.s1);\n            b.test('simple');\n            b.jumpUnless('BODY');\n            b.fetch(Register.s1);\n            b.pushComponentOperations();\n            b.openDynamicElement();\n        } else if (staticTag) {\n            b.pushComponentOperations();\n            b.openElementWithOperations(staticTag);\n        }\n        if (dynamicTag || staticTag) {\n            b.didCreateElement(Register.s0);\n            let attrs = this.attrs.buffer;\n            for (let i = 0; i < attrs.length; i++) {\n                compileStatement(attrs[i], b);\n            }\n            b.flushElement();\n        }\n        b.label('BODY');\n        b.invokeStatic(layout.asBlock());\n        if (dynamicTag) {\n            b.fetch(Register.s1);\n            b.test('simple');\n            b.jumpUnless('END');\n            b.closeElement();\n        } else if (staticTag) {\n            b.closeElement();\n        }\n        b.label('END');\n        b.didRenderLayout(Register.s0);\n        if (dynamicTag) {\n            b.load(Register.s1);\n        }\n        b.stopLabels();\n        let start = b.start;\n        let end = b.finalize();\n        if (false) {\n            debugSlice(env, env.program.heap.getaddr(start), env.program.heap.getaddr(end));\n        }\n        return new CompiledDynamicTemplate(start, {\n            meta,\n            hasEval: layout.hasEval,\n            symbols: layout.symbols.concat([ATTRS_BLOCK])\n        });\n    }\n}\nclass UnwrappedBuilder {\n    constructor(env, componentName, layout) {\n        this.env = env;\n        this.componentName = componentName;\n        this.layout = layout;\n        this.attrs = new ComponentAttrsBuilder();\n    }\n    get tag() {\n        throw new Error('BUG: Cannot call `tag` on an UnwrappedBuilder');\n    }\n    compile() {\n        let { env, layout } = this;\n        return layout.asLayout(this.componentName, this.attrs.buffer).compileDynamic(env);\n    }\n}\nclass ComponentTagBuilder {\n    constructor() {\n        this.isDynamic = null;\n        this.isStatic = null;\n        this.staticTagName = null;\n        this.dynamicTagName = null;\n    }\n    getDynamic() {\n        if (this.isDynamic) {\n            return this.dynamicTagName;\n        }\n    }\n    getStatic() {\n        if (this.isStatic) {\n            return this.staticTagName;\n        }\n    }\n    static(tagName) {\n        this.isStatic = true;\n        this.staticTagName = tagName;\n    }\n    dynamic(tagName) {\n        this.isDynamic = true;\n        this.dynamicTagName = [Ops.ClientSideExpression, ClientSide.Ops.FunctionExpression, tagName];\n    }\n}\nclass ComponentAttrsBuilder {\n    constructor() {\n        this.buffer = [];\n    }\n    static(name, value) {\n        this.buffer.push([Ops.StaticAttr, name, value, null]);\n    }\n    dynamic(name, value) {\n        this.buffer.push([Ops.DynamicAttr, name, [Ops.ClientSideExpression, ClientSide.Ops.FunctionExpression, value], null]);\n    }\n}\nexport class ComponentBuilder {\n    constructor(builder) {\n        this.builder = builder;\n        this.env = builder.env;\n    }\n    static(definition, args) {\n        let [params, hash, _default, inverse] = args;\n        let { builder } = this;\n        builder.pushComponentManager(definition);\n        builder.invokeComponent(null, params, hash, _default, inverse);\n    }\n    dynamic(definitionArgs, getDefinition, args) {\n        let [params, hash, block, inverse] = args;\n        let { builder } = this;\n        if (!definitionArgs || definitionArgs.length === 0) {\n            throw new Error(\"Dynamic syntax without an argument\");\n        }\n        let meta = this.builder.meta.templateMeta;\n        function helper(vm, a) {\n            return getDefinition(vm, a, meta);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        builder.compileArgs(definitionArgs[0], definitionArgs[1], true);\n        builder.helper(helper);\n        builder.dup();\n        builder.test('simple');\n        builder.enter(2);\n        builder.jumpUnless('ELSE');\n        builder.pushDynamicComponentManager();\n        builder.invokeComponent(null, params, hash, block, inverse);\n        builder.label('ELSE');\n        builder.exit();\n        builder.return();\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    }\n}\nexport function builder(env, meta) {\n    return new OpcodeBuilderDSL(env, meta);\n}","import CompilableTemplate from './compilable-template';\nexport default class RawInlineBlock {\n    constructor(meta, statements, parameters) {\n        this.meta = meta;\n        this.statements = statements;\n        this.parameters = parameters;\n    }\n    scan() {\n        return new CompilableTemplate(this.statements, { parameters: this.parameters, meta: this.meta });\n    }\n}","import { dict, EMPTY_ARRAY, expect, fillNulls, Stack, typePos } from '@glimmer/util';\nimport { ComponentBuilder } from '../../compiler';\nimport { Register } from '../../opcodes';\nimport { expr, InvokeDynamicLayout } from '../../syntax/functions';\nimport RawInlineBlock from '../../syntax/raw-block';\nimport { IsComponentDefinitionReference } from '../opcodes/content';\nimport * as content from './content';\nimport * as vm from './vm';\nclass Labels {\n    constructor() {\n        this.labels = dict();\n        this.targets = [];\n    }\n    label(name, index) {\n        this.labels[name] = index;\n    }\n    target(at, Target, target) {\n        this.targets.push({ at, Target, target });\n    }\n    patch(program) {\n        let { targets, labels } = this;\n        for (let i = 0; i < targets.length; i++) {\n            let { at, target } = targets[i];\n            let goto = labels[target] - at;\n            program.heap.setbyaddr(at + 1, goto);\n        }\n    }\n}\nexport class BasicOpcodeBuilder {\n    constructor(env, meta, program) {\n        this.env = env;\n        this.meta = meta;\n        this.program = program;\n        this.labelsStack = new Stack();\n        this.constants = program.constants;\n        this.heap = program.heap;\n        this.start = this.heap.malloc();\n    }\n    get pos() {\n        return typePos(this.heap.size());\n    }\n    get nextPos() {\n        return this.heap.size();\n    }\n    upvars(count) {\n        return fillNulls(count);\n    }\n    reserve(name) {\n        this.push(name, 0, 0, 0);\n    }\n    push(name, op1 = 0, op2 = 0, op3 = 0) {\n        this.heap.push(name);\n        this.heap.push(op1);\n        this.heap.push(op2);\n        this.heap.push(op3);\n    }\n    finalize() {\n        this.push(22 /* Return */);\n        this.heap.finishMalloc(this.start);\n        return this.start;\n    }\n    // args\n    pushArgs(synthetic) {\n        this.push(58 /* PushArgs */, synthetic === true ? 1 : 0);\n    }\n    // helpers\n    get labels() {\n        return expect(this.labelsStack.current, 'bug: not in a label stack');\n    }\n    startLabels() {\n        this.labelsStack.push(new Labels());\n    }\n    stopLabels() {\n        let label = expect(this.labelsStack.pop(), 'unbalanced push and pop labels');\n        label.patch(this.program);\n    }\n    // components\n    pushComponentManager(definition) {\n        this.push(56 /* PushComponentManager */, this.other(definition));\n    }\n    pushDynamicComponentManager() {\n        this.push(57 /* PushDynamicComponentManager */);\n    }\n    prepareArgs(state) {\n        this.push(59 /* PrepareArgs */, state);\n    }\n    createComponent(state, hasDefault, hasInverse) {\n        let flag = (hasDefault === true ? 1 : 0) | (hasInverse === true ? 1 : 0) << 1;\n        this.push(60 /* CreateComponent */, flag, state);\n    }\n    registerComponentDestructor(state) {\n        this.push(61 /* RegisterComponentDestructor */, state);\n    }\n    beginComponentTransaction() {\n        this.push(65 /* BeginComponentTransaction */);\n    }\n    commitComponentTransaction() {\n        this.push(66 /* CommitComponentTransaction */);\n    }\n    pushComponentOperations() {\n        this.push(62 /* PushComponentOperations */);\n    }\n    getComponentSelf(state) {\n        this.push(63 /* GetComponentSelf */, state);\n    }\n    getComponentLayout(state) {\n        this.push(64 /* GetComponentLayout */, state);\n    }\n    didCreateElement(state) {\n        this.push(67 /* DidCreateElement */, state);\n    }\n    didRenderLayout(state) {\n        this.push(68 /* DidRenderLayout */, state);\n    }\n    // partial\n    getPartialTemplate() {\n        this.push(69 /* GetPartialTemplate */);\n    }\n    resolveMaybeLocal(name) {\n        this.push(70 /* ResolveMaybeLocal */, this.string(name));\n    }\n    // debugger\n    debugger(symbols, evalInfo) {\n        this.push(71 /* Debugger */, this.constants.other(symbols), this.constants.array(evalInfo));\n    }\n    // content\n    dynamicContent(Opcode) {\n        this.push(26 /* DynamicContent */, this.other(Opcode));\n    }\n    cautiousAppend() {\n        this.dynamicContent(new content.OptimizedCautiousAppendOpcode());\n    }\n    trustingAppend() {\n        this.dynamicContent(new content.OptimizedTrustingAppendOpcode());\n    }\n    // dom\n    text(text) {\n        this.push(24 /* Text */, this.constants.string(text));\n    }\n    openPrimitiveElement(tag) {\n        this.push(27 /* OpenElement */, this.constants.string(tag));\n    }\n    openElementWithOperations(tag) {\n        this.push(28 /* OpenElementWithOperations */, this.constants.string(tag));\n    }\n    openDynamicElement() {\n        this.push(29 /* OpenDynamicElement */);\n    }\n    flushElement() {\n        this.push(33 /* FlushElement */);\n    }\n    closeElement() {\n        this.push(34 /* CloseElement */);\n    }\n    staticAttr(_name, _namespace, _value) {\n        let name = this.constants.string(_name);\n        let namespace = _namespace ? this.constants.string(_namespace) : 0;\n        let value = this.constants.string(_value);\n        this.push(30 /* StaticAttr */, name, value, namespace);\n    }\n    dynamicAttrNS(_name, _namespace, trusting) {\n        let name = this.constants.string(_name);\n        let namespace = this.constants.string(_namespace);\n        this.push(32 /* DynamicAttrNS */, name, namespace, trusting === true ? 1 : 0);\n    }\n    dynamicAttr(_name, trusting) {\n        let name = this.constants.string(_name);\n        this.push(31 /* DynamicAttr */, name, trusting === true ? 1 : 0);\n    }\n    comment(_comment) {\n        let comment = this.constants.string(_comment);\n        this.push(25 /* Comment */, comment);\n    }\n    modifier(_definition) {\n        this.push(35 /* Modifier */, this.other(_definition));\n    }\n    // lists\n    putIterator() {\n        this.push(54 /* PutIterator */);\n    }\n    enterList(start) {\n        this.reserve(52 /* EnterList */);\n        this.labels.target(this.pos, 52 /* EnterList */, start);\n    }\n    exitList() {\n        this.push(53 /* ExitList */);\n    }\n    iterate(breaks) {\n        this.reserve(55 /* Iterate */);\n        this.labels.target(this.pos, 55 /* Iterate */, breaks);\n    }\n    // expressions\n    setVariable(symbol) {\n        this.push(4 /* SetVariable */, symbol);\n    }\n    getVariable(symbol) {\n        this.push(5 /* GetVariable */, symbol);\n    }\n    getProperty(key) {\n        this.push(6 /* GetProperty */, this.string(key));\n    }\n    getBlock(symbol) {\n        this.push(8 /* GetBlock */, symbol);\n    }\n    hasBlock(symbol) {\n        this.push(9 /* HasBlock */, symbol);\n    }\n    hasBlockParams(symbol) {\n        this.push(10 /* HasBlockParams */, symbol);\n    }\n    concat(size) {\n        this.push(11 /* Concat */, size);\n    }\n    function(f) {\n        this.push(2 /* Function */, this.func(f));\n    }\n    load(register) {\n        this.push(17 /* Load */, register);\n    }\n    fetch(register) {\n        this.push(18 /* Fetch */, register);\n    }\n    dup(register = Register.sp, offset = 0) {\n        return this.push(15 /* Dup */, register, offset);\n    }\n    pop(count = 1) {\n        return this.push(16 /* Pop */, count);\n    }\n    // vm\n    pushRemoteElement() {\n        this.push(36 /* PushRemoteElement */);\n    }\n    popRemoteElement() {\n        this.push(37 /* PopRemoteElement */);\n    }\n    label(name) {\n        this.labels.label(name, this.nextPos);\n    }\n    pushRootScope(symbols, bindCallerScope) {\n        this.push(19 /* RootScope */, symbols, bindCallerScope ? 1 : 0);\n    }\n    pushChildScope() {\n        this.push(20 /* ChildScope */);\n    }\n    popScope() {\n        this.push(21 /* PopScope */);\n    }\n    returnTo(label) {\n        this.reserve(23 /* ReturnTo */);\n        this.labels.target(this.pos, 23 /* ReturnTo */, label);\n    }\n    pushDynamicScope() {\n        this.push(39 /* PushDynamicScope */);\n    }\n    popDynamicScope() {\n        this.push(40 /* PopDynamicScope */);\n    }\n    pushImmediate(value) {\n        this.push(13 /* Constant */, this.other(value));\n    }\n    primitive(_primitive) {\n        let flag = 0;\n        let primitive;\n        switch (typeof _primitive) {\n            case 'number':\n                primitive = _primitive;\n                break;\n            case 'string':\n                primitive = this.string(_primitive);\n                flag = 1;\n                break;\n            case 'boolean':\n                primitive = _primitive | 0;\n                flag = 2;\n                break;\n            case 'object':\n                // assume null\n                primitive = 2;\n                flag = 2;\n                break;\n            case 'undefined':\n                primitive = 3;\n                flag = 2;\n                break;\n            default:\n                throw new Error('Invalid primitive passed to pushPrimitive');\n        }\n        this.push(14 /* PrimitiveReference */, flag << 30 | primitive);\n    }\n    helper(func) {\n        this.push(1 /* Helper */, this.func(func));\n    }\n    pushBlock(block) {\n        this.push(7 /* PushBlock */, this.block(block));\n    }\n    bindDynamicScope(_names) {\n        this.push(38 /* BindDynamicScope */, this.names(_names));\n    }\n    enter(args) {\n        this.push(49 /* Enter */, args);\n    }\n    exit() {\n        this.push(50 /* Exit */);\n    }\n    return() {\n        this.push(22 /* Return */);\n    }\n    pushFrame() {\n        this.push(47 /* PushFrame */);\n    }\n    popFrame() {\n        this.push(48 /* PopFrame */);\n    }\n    compileDynamicBlock() {\n        this.push(41 /* CompileDynamicBlock */);\n    }\n    invokeDynamic(invoker) {\n        this.push(43 /* InvokeDynamic */, this.other(invoker));\n    }\n    invokeStatic(block, callerCount = 0) {\n        let { parameters } = block.symbolTable;\n        let calleeCount = parameters.length;\n        let count = Math.min(callerCount, calleeCount);\n        this.pushFrame();\n        if (count) {\n            this.pushChildScope();\n            for (let i = 0; i < count; i++) {\n                this.dup(Register.fp, callerCount - i);\n                this.setVariable(parameters[i]);\n            }\n        }\n        let _block = this.constants.block(block);\n        this.push(42 /* InvokeStatic */, _block);\n        if (count) {\n            this.popScope();\n        }\n        this.popFrame();\n    }\n    test(testFunc) {\n        let _func;\n        if (testFunc === 'const') {\n            _func = vm.ConstTest;\n        } else if (testFunc === 'simple') {\n            _func = vm.SimpleTest;\n        } else if (testFunc === 'environment') {\n            _func = vm.EnvironmentTest;\n        } else if (typeof testFunc === 'function') {\n            _func = testFunc;\n        } else {\n            throw new Error('unreachable');\n        }\n        let func = this.constants.function(_func);\n        this.push(51 /* Test */, func);\n    }\n    jump(target) {\n        this.reserve(44 /* Jump */);\n        this.labels.target(this.pos, 44 /* Jump */, target);\n    }\n    jumpIf(target) {\n        this.reserve(45 /* JumpIf */);\n        this.labels.target(this.pos, 45 /* JumpIf */, target);\n    }\n    jumpUnless(target) {\n        this.reserve(46 /* JumpUnless */);\n        this.labels.target(this.pos, 46 /* JumpUnless */, target);\n    }\n    string(_string) {\n        return this.constants.string(_string);\n    }\n    names(_names) {\n        let names = [];\n        for (let i = 0; i < _names.length; i++) {\n            let n = _names[i];\n            names[i] = this.constants.string(n);\n        }\n        return this.constants.array(names);\n    }\n    symbols(symbols) {\n        return this.constants.array(symbols);\n    }\n    other(value) {\n        return this.constants.other(value);\n    }\n    block(block) {\n        return block ? this.constants.block(block) : 0;\n    }\n    func(func) {\n        return this.constants.function(func);\n    }\n}\nfunction isCompilableExpression(expr) {\n    return typeof expr === 'object' && expr !== null && typeof expr.compile === 'function';\n}\nexport default class OpcodeBuilder extends BasicOpcodeBuilder {\n    constructor(env, meta, program = env.program) {\n        super(env, meta, program);\n        this.component = new ComponentBuilder(this);\n    }\n    compileArgs(params, hash, synthetic) {\n        let positional = 0;\n        if (params) {\n            for (let i = 0; i < params.length; i++) {\n                expr(params[i], this);\n            }\n            positional = params.length;\n        }\n        this.pushImmediate(positional);\n        let names = EMPTY_ARRAY;\n        if (hash) {\n            names = hash[0];\n            let val = hash[1];\n            for (let i = 0; i < val.length; i++) {\n                expr(val[i], this);\n            }\n        }\n        this.pushImmediate(names);\n        this.pushArgs(synthetic);\n    }\n    compile(expr) {\n        if (isCompilableExpression(expr)) {\n            return expr.compile(this);\n        } else {\n            return expr;\n        }\n    }\n    guardedAppend(expression, trusting) {\n        this.startLabels();\n        this.pushFrame();\n        this.returnTo('END');\n        expr(expression, this);\n        this.dup();\n        this.test(reference => {\n            return IsComponentDefinitionReference.create(reference);\n        });\n        this.enter(2);\n        this.jumpUnless('ELSE');\n        this.pushDynamicComponentManager();\n        this.invokeComponent(null, null, null, null, null);\n        this.exit();\n        this.return();\n        this.label('ELSE');\n        if (trusting) {\n            this.trustingAppend();\n        } else {\n            this.cautiousAppend();\n        }\n        this.exit();\n        this.return();\n        this.label('END');\n        this.popFrame();\n        this.stopLabels();\n    }\n    invokeComponent(attrs, params, hash, block, inverse = null) {\n        this.fetch(Register.s0);\n        this.dup(Register.sp, 1);\n        this.load(Register.s0);\n        this.pushBlock(block);\n        this.pushBlock(inverse);\n        this.compileArgs(params, hash, false);\n        this.prepareArgs(Register.s0);\n        this.beginComponentTransaction();\n        this.pushDynamicScope();\n        this.createComponent(Register.s0, block !== null, inverse !== null);\n        this.registerComponentDestructor(Register.s0);\n        this.getComponentSelf(Register.s0);\n        this.getComponentLayout(Register.s0);\n        this.invokeDynamic(new InvokeDynamicLayout(attrs && attrs.scan()));\n        this.popFrame();\n        this.popScope();\n        this.popDynamicScope();\n        this.commitComponentTransaction();\n        this.load(Register.s0);\n    }\n    template(block) {\n        if (!block) return null;\n        return new RawInlineBlock(this.meta, block.statements, block.parameters);\n    }\n}","import { map } from '@glimmer/reference';\nimport { assert, dict, EMPTY_ARRAY, unwrap } from '@glimmer/util';\nimport * as WireFormat from '@glimmer/wire-format';\nimport OpcodeBuilder from '../compiled/opcodes/builder';\nimport { Register } from '../opcodes';\nimport * as ClientSide from '../syntax/client-side';\nimport RawInlineBlock from './raw-block';\nvar Ops = WireFormat.Ops;\nexport const ATTRS_BLOCK = '&attrs';\nclass Compilers {\n    constructor(offset = 0) {\n        this.offset = offset;\n        this.names = dict();\n        this.funcs = [];\n    }\n    add(name, func) {\n        this.funcs.push(func);\n        this.names[name] = this.funcs.length - 1;\n    }\n    compile(sexp, builder) {\n        let name = sexp[this.offset];\n        let index = this.names[name];\n        let func = this.funcs[index];\n        assert(!!func, `expected an implementation for ${this.offset === 0 ? Ops[sexp[0]] : ClientSide.Ops[sexp[1]]}`);\n        func(sexp, builder);\n    }\n}\nconst STATEMENTS = new Compilers();\nconst CLIENT_SIDE = new Compilers(1);\nSTATEMENTS.add(Ops.Text, (sexp, builder) => {\n    builder.text(sexp[1]);\n});\nSTATEMENTS.add(Ops.Comment, (sexp, builder) => {\n    builder.comment(sexp[1]);\n});\nSTATEMENTS.add(Ops.CloseElement, (_sexp, builder) => {\n    builder.closeElement();\n});\nSTATEMENTS.add(Ops.FlushElement, (_sexp, builder) => {\n    builder.flushElement();\n});\nSTATEMENTS.add(Ops.Modifier, (sexp, builder) => {\n    let { env, meta } = builder;\n    let [, name, params, hash] = sexp;\n    if (env.hasModifier(name, meta.templateMeta)) {\n        builder.compileArgs(params, hash, true);\n        builder.modifier(env.lookupModifier(name, meta.templateMeta));\n    } else {\n        throw new Error(`Compile Error ${name} is not a modifier: Helpers may not be used in the element form.`);\n    }\n});\nSTATEMENTS.add(Ops.StaticAttr, (sexp, builder) => {\n    let [, name, value, namespace] = sexp;\n    builder.staticAttr(name, namespace, value);\n});\nSTATEMENTS.add(Ops.DynamicAttr, (sexp, builder) => {\n    dynamicAttr(sexp, false, builder);\n});\nSTATEMENTS.add(Ops.TrustingAttr, (sexp, builder) => {\n    dynamicAttr(sexp, true, builder);\n});\nfunction dynamicAttr(sexp, trusting, builder) {\n    let [, name, value, namespace] = sexp;\n    expr(value, builder);\n    if (namespace) {\n        builder.dynamicAttrNS(name, namespace, trusting);\n    } else {\n        builder.dynamicAttr(name, trusting);\n    }\n}\nSTATEMENTS.add(Ops.OpenElement, (sexp, builder) => {\n    builder.openPrimitiveElement(sexp[1]);\n});\nCLIENT_SIDE.add(ClientSide.Ops.OpenComponentElement, (sexp, builder) => {\n    builder.pushComponentOperations();\n    builder.openElementWithOperations(sexp[2]);\n});\nCLIENT_SIDE.add(ClientSide.Ops.DidCreateElement, (_sexp, builder) => {\n    builder.didCreateElement(Register.s0);\n});\nCLIENT_SIDE.add(ClientSide.Ops.DidRenderLayout, (_sexp, builder) => {\n    builder.didRenderLayout(Register.s0);\n});\nSTATEMENTS.add(Ops.Append, (sexp, builder) => {\n    let [, value, trusting] = sexp;\n    let { inlines } = builder.env.macros();\n    let returned = inlines.compile(sexp, builder) || value;\n    if (returned === true) return;\n    let isGet = E.isGet(value);\n    let isMaybeLocal = E.isMaybeLocal(value);\n    if (trusting) {\n        builder.guardedAppend(value, true);\n    } else {\n        if (isGet || isMaybeLocal) {\n            builder.guardedAppend(value, false);\n        } else {\n            expr(value, builder);\n            builder.cautiousAppend();\n        }\n    }\n});\nSTATEMENTS.add(Ops.Block, (sexp, builder) => {\n    let [, name, params, hash, _template, _inverse] = sexp;\n    let template = builder.template(_template);\n    let inverse = builder.template(_inverse);\n    let templateBlock = template && template.scan();\n    let inverseBlock = inverse && inverse.scan();\n    let { blocks } = builder.env.macros();\n    blocks.compile(name, params, hash, templateBlock, inverseBlock, builder);\n});\nexport class InvokeDynamicLayout {\n    constructor(attrs) {\n        this.attrs = attrs;\n    }\n    invoke(vm, layout) {\n        let { symbols, hasEval } = layout.symbolTable;\n        let stack = vm.stack;\n        let scope = vm.pushRootScope(symbols.length + 1, true);\n        scope.bindSelf(stack.pop());\n        scope.bindBlock(symbols.indexOf(ATTRS_BLOCK) + 1, this.attrs);\n        let lookup = null;\n        let $eval = -1;\n        if (hasEval) {\n            $eval = symbols.indexOf('$eval') + 1;\n            lookup = dict();\n        }\n        let callerNames = stack.pop();\n        for (let i = callerNames.length - 1; i >= 0; i--) {\n            let symbol = symbols.indexOf(callerNames[i]);\n            let value = stack.pop();\n            if (symbol !== -1) scope.bindSymbol(symbol + 1, value);\n            if (hasEval) lookup[callerNames[i]] = value;\n        }\n        let numPositionalArgs = stack.pop();\n        assert(typeof numPositionalArgs === 'number', '[BUG] Incorrect value of positional argument count found during invoke-dynamic-layout.');\n        // Currently we don't support accessing positional args in templates, so just throw them away\n        stack.pop(numPositionalArgs);\n        let inverseSymbol = symbols.indexOf('&inverse');\n        let inverse = stack.pop();\n        if (inverseSymbol !== -1) {\n            scope.bindBlock(inverseSymbol + 1, inverse);\n        }\n        if (lookup) lookup['&inverse'] = inverse;\n        let defaultSymbol = symbols.indexOf('&default');\n        let defaultBlock = stack.pop();\n        if (defaultSymbol !== -1) {\n            scope.bindBlock(defaultSymbol + 1, defaultBlock);\n        }\n        if (lookup) lookup['&default'] = defaultBlock;\n        if (lookup) scope.bindEvalScope(lookup);\n        vm.pushFrame();\n        vm.call(layout.handle);\n    }\n    toJSON() {\n        return { GlimmerDebug: '<invoke-dynamic-layout>' };\n    }\n}\nSTATEMENTS.add(Ops.Component, (sexp, builder) => {\n    let [, tag, attrs, args, block] = sexp;\n    if (builder.env.hasComponentDefinition(tag, builder.meta.templateMeta)) {\n        let child = builder.template(block);\n        let attrsBlock = new RawInlineBlock(builder.meta, attrs, EMPTY_ARRAY);\n        let definition = builder.env.getComponentDefinition(tag, builder.meta.templateMeta);\n        builder.pushComponentManager(definition);\n        builder.invokeComponent(attrsBlock, null, args, child && child.scan());\n    } else if (block && block.parameters.length) {\n        throw new Error(`Compile Error: Cannot find component ${tag}`);\n    } else {\n        builder.openPrimitiveElement(tag);\n        for (let i = 0; i < attrs.length; i++) {\n            STATEMENTS.compile(attrs[i], builder);\n        }\n        builder.flushElement();\n        if (block) {\n            let stmts = block.statements;\n            for (let i = 0; i < stmts.length; i++) {\n                STATEMENTS.compile(stmts[i], builder);\n            }\n        }\n        builder.closeElement();\n    }\n});\nexport class PartialInvoker {\n    constructor(outerSymbols, evalInfo) {\n        this.outerSymbols = outerSymbols;\n        this.evalInfo = evalInfo;\n    }\n    invoke(vm, _partial) {\n        let partial = unwrap(_partial);\n        let partialSymbols = partial.symbolTable.symbols;\n        let outerScope = vm.scope();\n        let partialScope = vm.pushRootScope(partialSymbols.length, false);\n        partialScope.bindCallerScope(outerScope.getCallerScope());\n        partialScope.bindEvalScope(outerScope.getEvalScope());\n        partialScope.bindSelf(outerScope.getSelf());\n        let { evalInfo, outerSymbols } = this;\n        let locals = dict();\n        for (let i = 0; i < evalInfo.length; i++) {\n            let slot = evalInfo[i];\n            let name = outerSymbols[slot - 1];\n            let ref = outerScope.getSymbol(slot);\n            locals[name] = ref;\n        }\n        let evalScope = outerScope.getEvalScope();\n        for (let i = 0; i < partialSymbols.length; i++) {\n            let name = partialSymbols[i];\n            let symbol = i + 1;\n            let value = evalScope[name];\n            if (value !== undefined) partialScope.bind(symbol, value);\n        }\n        partialScope.bindPartialMap(locals);\n        vm.pushFrame();\n        vm.call(partial.handle);\n    }\n}\nSTATEMENTS.add(Ops.Partial, (sexp, builder) => {\n    let [, name, evalInfo] = sexp;\n    let { templateMeta, symbols } = builder.meta;\n    function helper(vm, args) {\n        let { env } = vm;\n        let nameRef = args.positional.at(0);\n        return map(nameRef, n => {\n            if (typeof n === 'string' && n) {\n                if (!env.hasPartial(n, templateMeta)) {\n                    throw new Error(`Could not find a partial named \"${n}\"`);\n                }\n                return env.lookupPartial(n, templateMeta);\n            } else if (n) {\n                throw new Error(`Could not find a partial named \"${String(n)}\"`);\n            } else {\n                return null;\n            }\n        });\n    }\n    builder.startLabels();\n    builder.pushFrame();\n    builder.returnTo('END');\n    expr(name, builder);\n    builder.pushImmediate(1);\n    builder.pushImmediate(EMPTY_ARRAY);\n    builder.pushArgs(true);\n    builder.helper(helper);\n    builder.dup();\n    builder.test('simple');\n    builder.enter(2);\n    builder.jumpUnless('ELSE');\n    builder.getPartialTemplate();\n    builder.compileDynamicBlock();\n    builder.invokeDynamic(new PartialInvoker(symbols, evalInfo));\n    builder.popScope();\n    builder.popFrame();\n    builder.label('ELSE');\n    builder.exit();\n    builder.return();\n    builder.label('END');\n    builder.popFrame();\n    builder.stopLabels();\n});\nclass InvokeDynamicYield {\n    constructor(callerCount) {\n        this.callerCount = callerCount;\n    }\n    invoke(vm, block) {\n        let { callerCount } = this;\n        let stack = vm.stack;\n        if (!block) {\n            // To balance the pop{Frame,Scope}\n            vm.pushFrame();\n            vm.pushCallerScope();\n            return;\n        }\n        let table = block.symbolTable;\n        let locals = table.parameters; // always present in inline blocks\n        let calleeCount = locals ? locals.length : 0;\n        let count = Math.min(callerCount, calleeCount);\n        vm.pushFrame();\n        vm.pushCallerScope(calleeCount > 0);\n        let scope = vm.scope();\n        for (let i = 0; i < count; i++) {\n            scope.bindSymbol(locals[i], stack.fromBase(callerCount - i));\n        }\n        vm.call(block.handle);\n    }\n    toJSON() {\n        return { GlimmerDebug: `<invoke-dynamic-yield caller-count=${this.callerCount}>` };\n    }\n}\nSTATEMENTS.add(Ops.Yield, (sexp, builder) => {\n    let [, to, params] = sexp;\n    let count = compileList(params, builder);\n    builder.getBlock(to);\n    builder.compileDynamicBlock();\n    builder.invokeDynamic(new InvokeDynamicYield(count));\n    builder.popScope();\n    builder.popFrame();\n    if (count) {\n        builder.pop(count);\n    }\n});\nSTATEMENTS.add(Ops.Debugger, (sexp, builder) => {\n    let [, evalInfo] = sexp;\n    builder.debugger(builder.meta.symbols, evalInfo);\n});\nSTATEMENTS.add(Ops.ClientSideStatement, (sexp, builder) => {\n    CLIENT_SIDE.compile(sexp, builder);\n});\nconst EXPRESSIONS = new Compilers();\nconst CLIENT_SIDE_EXPRS = new Compilers(1);\nvar E = WireFormat.Expressions;\nexport function expr(expression, builder) {\n    if (Array.isArray(expression)) {\n        EXPRESSIONS.compile(expression, builder);\n    } else {\n        builder.primitive(expression);\n    }\n}\nEXPRESSIONS.add(Ops.Unknown, (sexp, builder) => {\n    let name = sexp[1];\n    if (builder.env.hasHelper(name, builder.meta.templateMeta)) {\n        EXPRESSIONS.compile([Ops.Helper, name, EMPTY_ARRAY, null], builder);\n    } else if (builder.meta.asPartial) {\n        builder.resolveMaybeLocal(name);\n    } else {\n        builder.getVariable(0);\n        builder.getProperty(name);\n    }\n});\nEXPRESSIONS.add(Ops.Concat, (sexp, builder) => {\n    let parts = sexp[1];\n    for (let i = 0; i < parts.length; i++) {\n        expr(parts[i], builder);\n    }\n    builder.concat(parts.length);\n});\nCLIENT_SIDE_EXPRS.add(ClientSide.Ops.FunctionExpression, (sexp, builder) => {\n    builder.function(sexp[2]);\n});\nEXPRESSIONS.add(Ops.Helper, (sexp, builder) => {\n    let { env, meta } = builder;\n    let [, name, params, hash] = sexp;\n    if (env.hasHelper(name, meta.templateMeta)) {\n        builder.compileArgs(params, hash, true);\n        builder.helper(env.lookupHelper(name, meta.templateMeta));\n    } else {\n        throw new Error(`Compile Error: ${name} is not a helper`);\n    }\n});\nEXPRESSIONS.add(Ops.Get, (sexp, builder) => {\n    let [, head, path] = sexp;\n    builder.getVariable(head);\n    for (let i = 0; i < path.length; i++) {\n        builder.getProperty(path[i]);\n    }\n});\nEXPRESSIONS.add(Ops.MaybeLocal, (sexp, builder) => {\n    let [, path] = sexp;\n    if (builder.meta.asPartial) {\n        let head = path[0];\n        path = path.slice(1);\n        builder.resolveMaybeLocal(head);\n    } else {\n        builder.getVariable(0);\n    }\n    for (let i = 0; i < path.length; i++) {\n        builder.getProperty(path[i]);\n    }\n});\nEXPRESSIONS.add(Ops.Undefined, (_sexp, builder) => {\n    return builder.primitive(undefined);\n});\nEXPRESSIONS.add(Ops.HasBlock, (sexp, builder) => {\n    builder.hasBlock(sexp[1]);\n});\nEXPRESSIONS.add(Ops.HasBlockParams, (sexp, builder) => {\n    builder.hasBlockParams(sexp[1]);\n});\nEXPRESSIONS.add(Ops.ClientSideExpression, (sexp, builder) => {\n    CLIENT_SIDE_EXPRS.compile(sexp, builder);\n});\nexport function compileList(params, builder) {\n    if (!params) return 0;\n    for (let i = 0; i < params.length; i++) {\n        expr(params[i], builder);\n    }\n    return params.length;\n}\nexport class Blocks {\n    constructor() {\n        this.names = dict();\n        this.funcs = [];\n    }\n    add(name, func) {\n        this.funcs.push(func);\n        this.names[name] = this.funcs.length - 1;\n    }\n    addMissing(func) {\n        this.missing = func;\n    }\n    compile(name, params, hash, template, inverse, builder) {\n        let index = this.names[name];\n        if (index === undefined) {\n            assert(!!this.missing, `${name} not found, and no catch-all block handler was registered`);\n            let func = this.missing;\n            let handled = func(name, params, hash, template, inverse, builder);\n            assert(!!handled, `${name} not found, and the catch-all block handler didn't handle it`);\n        } else {\n            let func = this.funcs[index];\n            func(params, hash, template, inverse, builder);\n        }\n    }\n}\nexport const BLOCKS = new Blocks();\nexport class Inlines {\n    constructor() {\n        this.names = dict();\n        this.funcs = [];\n    }\n    add(name, func) {\n        this.funcs.push(func);\n        this.names[name] = this.funcs.length - 1;\n    }\n    addMissing(func) {\n        this.missing = func;\n    }\n    compile(sexp, builder) {\n        let value = sexp[1];\n        // TODO: Fix this so that expression macros can return\n        // things like components, so that {{component foo}}\n        // is the same as {{(component foo)}}\n        if (!Array.isArray(value)) return ['expr', value];\n        let name;\n        let params;\n        let hash;\n        if (value[0] === Ops.Helper) {\n            name = value[1];\n            params = value[2];\n            hash = value[3];\n        } else if (value[0] === Ops.Unknown) {\n            name = value[1];\n            params = hash = null;\n        } else {\n            return ['expr', value];\n        }\n        let index = this.names[name];\n        if (index === undefined && this.missing) {\n            let func = this.missing;\n            let returned = func(name, params, hash, builder);\n            return returned === false ? ['expr', value] : returned;\n        } else if (index !== undefined) {\n            let func = this.funcs[index];\n            let returned = func(name, params, hash, builder);\n            return returned === false ? ['expr', value] : returned;\n        } else {\n            return ['expr', value];\n        }\n    }\n}\nexport const INLINES = new Inlines();\npopulateBuiltins(BLOCKS, INLINES);\nexport function populateBuiltins(blocks = new Blocks(), inlines = new Inlines()) {\n    blocks.add('if', (params, _hash, template, inverse, builder) => {\n        //        PutArgs\n        //        Test(Environment)\n        //        Enter(BEGIN, END)\n        // BEGIN: Noop\n        //        JumpUnless(ELSE)\n        //        Evaluate(default)\n        //        Jump(END)\n        // ELSE:  Noop\n        //        Evalulate(inverse)\n        // END:   Noop\n        //        Exit\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #if requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        expr(params[0], builder);\n        builder.test('environment');\n        builder.enter(1);\n        builder.jumpUnless('ELSE');\n        builder.invokeStatic(unwrap(template));\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('unless', (params, _hash, template, inverse, builder) => {\n        //        PutArgs\n        //        Test(Environment)\n        //        Enter(BEGIN, END)\n        // BEGIN: Noop\n        //        JumpUnless(ELSE)\n        //        Evaluate(default)\n        //        Jump(END)\n        // ELSE:  Noop\n        //        Evalulate(inverse)\n        // END:   Noop\n        //        Exit\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #unless requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        expr(params[0], builder);\n        builder.test('environment');\n        builder.enter(1);\n        builder.jumpIf('ELSE');\n        builder.invokeStatic(unwrap(template));\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('with', (params, _hash, template, inverse, builder) => {\n        //        PutArgs\n        //        Test(Environment)\n        //        Enter(BEGIN, END)\n        // BEGIN: Noop\n        //        JumpUnless(ELSE)\n        //        Evaluate(default)\n        //        Jump(END)\n        // ELSE:  Noop\n        //        Evalulate(inverse)\n        // END:   Noop\n        //        Exit\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #with requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        expr(params[0], builder);\n        builder.dup();\n        builder.test('environment');\n        builder.enter(2);\n        builder.jumpUnless('ELSE');\n        builder.invokeStatic(unwrap(template), 1);\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('each', (params, hash, template, inverse, builder) => {\n        //         Enter(BEGIN, END)\n        // BEGIN:  Noop\n        //         PutArgs\n        //         PutIterable\n        //         JumpUnless(ELSE)\n        //         EnterList(BEGIN2, END2)\n        // ITER:   Noop\n        //         NextIter(BREAK)\n        // BEGIN2: Noop\n        //         PushChildScope\n        //         Evaluate(default)\n        //         PopScope\n        // END2:   Noop\n        //         Exit\n        //         Jump(ITER)\n        // BREAK:  Noop\n        //         ExitList\n        //         Jump(END)\n        // ELSE:   Noop\n        //         Evalulate(inverse)\n        // END:    Noop\n        //         Exit\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        if (hash && hash[0][0] === 'key') {\n            expr(hash[1][0], builder);\n        } else {\n            builder.primitive(null);\n        }\n        expr(params[0], builder);\n        builder.enter(2);\n        builder.putIterator();\n        builder.jumpUnless('ELSE');\n        builder.pushFrame();\n        builder.returnTo('ITER');\n        builder.dup(Register.fp, 1);\n        builder.enterList('BODY');\n        builder.label('ITER');\n        builder.iterate('BREAK');\n        builder.label('BODY');\n        builder.invokeStatic(unwrap(template), 2);\n        builder.pop(2);\n        builder.exit();\n        builder.return();\n        builder.label('BREAK');\n        builder.exitList();\n        builder.popFrame();\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('-in-element', (params, hash, template, _inverse, builder) => {\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #-in-element requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        if (hash && hash[0].length) {\n            let [keys, values] = hash;\n            if (keys.length === 1 && keys[0] === 'nextSibling') {\n                expr(values[0], builder);\n            } else {\n                throw new Error(`SYNTAX ERROR: #-in-element does not take a \\`${keys[0]}\\` option`);\n            }\n        } else {\n            expr(null, builder);\n        }\n        expr(params[0], builder);\n        builder.dup();\n        builder.test('simple');\n        builder.enter(3);\n        builder.jumpUnless('ELSE');\n        builder.pushRemoteElement();\n        builder.invokeStatic(unwrap(template));\n        builder.popRemoteElement();\n        builder.label('ELSE');\n        builder.exit();\n        builder.return();\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('-with-dynamic-vars', (_params, hash, template, _inverse, builder) => {\n        if (hash) {\n            let [names, expressions] = hash;\n            compileList(expressions, builder);\n            builder.pushDynamicScope();\n            builder.bindDynamicScope(names);\n            builder.invokeStatic(unwrap(template));\n            builder.popDynamicScope();\n        } else {\n            builder.invokeStatic(unwrap(template));\n        }\n    });\n    return { blocks, inlines };\n}\nexport function compileStatement(statement, builder) {\n    STATEMENTS.compile(statement, builder);\n}\nexport function compileStatements(statements, meta, env) {\n    let b = new OpcodeBuilder(env, meta);\n    for (let i = 0; i < statements.length; i++) {\n        compileStatement(statements[i], b);\n    }\n    return b;\n}","import { CompiledDynamicTemplate, CompiledStaticTemplate } from '../compiled/blocks';\nimport { debugSlice } from '../opcodes';\nimport { compileStatements } from './functions';\n\nexport default class CompilableTemplate {\n    constructor(statements, symbolTable) {\n        this.statements = statements;\n        this.symbolTable = symbolTable;\n        this.compiledStatic = null;\n        this.compiledDynamic = null;\n    }\n    compileStatic(env) {\n        let { compiledStatic } = this;\n        if (!compiledStatic) {\n            let builder = compileStatements(this.statements, this.symbolTable.meta, env);\n            builder.finalize();\n            let handle = builder.start;\n            if (false) {\n                let start = env.program.heap.size() - env.program.heap.sizeof(handle);\n                let end = start + env.program.heap.sizeof(handle);\n                debugSlice(env, start, end);\n            }\n            compiledStatic = this.compiledStatic = new CompiledStaticTemplate(handle);\n        }\n        return compiledStatic;\n    }\n    compileDynamic(env) {\n        let { compiledDynamic } = this;\n        if (!compiledDynamic) {\n            let staticBlock = this.compileStatic(env);\n            compiledDynamic = new CompiledDynamicTemplate(staticBlock.handle, this.symbolTable);\n        }\n        return compiledDynamic;\n    }\n}","import { EMPTY_ARRAY } from '@glimmer/util';\nimport * as WireFormat from '@glimmer/wire-format';\nimport * as ClientSide from './syntax/client-side';\nimport CompilableTemplate from './syntax/compilable-template';\nimport { ATTRS_BLOCK } from './syntax/functions';\nvar Ops = WireFormat.Ops;\nexport default class Scanner {\n    constructor(block, env) {\n        this.block = block;\n        this.env = env;\n    }\n    scanEntryPoint(meta) {\n        let { block } = this;\n        let { statements, symbols, hasEval } = block;\n        return new CompilableTemplate(statements, { meta, symbols, hasEval });\n    }\n    scanBlock(meta) {\n        let { block } = this;\n        let { statements } = block;\n        return new CompilableTemplate(statements, { meta, parameters: EMPTY_ARRAY });\n    }\n    scanLayout(meta, attrs, componentName) {\n        let { block } = this;\n        let { statements, symbols, hasEval } = block;\n        let symbolTable = { meta, hasEval, symbols };\n        let newStatements = [];\n        let toplevel;\n        let inTopLevel = false;\n        for (let i = 0; i < statements.length; i++) {\n            let statement = statements[i];\n            if (WireFormat.Statements.isComponent(statement)) {\n                let tagName = statement[1];\n                if (!this.env.hasComponentDefinition(tagName, meta.templateMeta)) {\n                    if (toplevel !== undefined) {\n                        newStatements.push([Ops.OpenElement, tagName]);\n                    } else {\n                        toplevel = tagName;\n                        decorateTopLevelElement(tagName, symbols, attrs, newStatements);\n                    }\n                    addFallback(statement, newStatements);\n                } else {\n                    if (toplevel === undefined && tagName === componentName) {\n                        toplevel = tagName;\n                        decorateTopLevelElement(tagName, symbols, attrs, newStatements);\n                        addFallback(statement, newStatements);\n                    } else {\n                        newStatements.push(statement);\n                    }\n                }\n            } else {\n                if (toplevel === undefined && WireFormat.Statements.isOpenElement(statement)) {\n                    toplevel = statement[1];\n                    inTopLevel = true;\n                    decorateTopLevelElement(toplevel, symbols, attrs, newStatements);\n                } else {\n                    if (inTopLevel) {\n                        if (WireFormat.Statements.isFlushElement(statement)) {\n                            inTopLevel = false;\n                        } else if (WireFormat.Statements.isModifier(statement)) {\n                            throw Error(`Found modifier \"${statement[1]}\" on the top-level element of \"${componentName}\"\\. Modifiers cannot be on the top-level element`);\n                        }\n                    }\n                    newStatements.push(statement);\n                }\n            }\n        }\n        newStatements.push([Ops.ClientSideStatement, ClientSide.Ops.DidRenderLayout]);\n        return new CompilableTemplate(newStatements, symbolTable);\n    }\n}\nfunction addFallback(statement, buffer) {\n    let [,, attrs,, block] = statement;\n    for (let i = 0; i < attrs.length; i++) {\n        buffer.push(attrs[i]);\n    }\n    buffer.push([Ops.FlushElement]);\n    if (block) {\n        let { statements } = block;\n        for (let i = 0; i < statements.length; i++) {\n            buffer.push(statements[i]);\n        }\n    }\n    buffer.push([Ops.CloseElement]);\n}\nfunction decorateTopLevelElement(tagName, symbols, attrs, buffer) {\n    let attrsSymbol = symbols.push(ATTRS_BLOCK);\n    buffer.push([Ops.ClientSideStatement, ClientSide.Ops.OpenComponentElement, tagName]);\n    buffer.push([Ops.ClientSideStatement, ClientSide.Ops.DidCreateElement]);\n    buffer.push([Ops.Yield, attrsSymbol, EMPTY_ARRAY]);\n    buffer.push(...attrs);\n}","export class Constants {\n    constructor() {\n        // `0` means NULL\n        this.references = [];\n        this.strings = [];\n        this.expressions = [];\n        this.arrays = [];\n        this.blocks = [];\n        this.functions = [];\n        this.others = [];\n    }\n    getReference(value) {\n        return this.references[value - 1];\n    }\n    reference(value) {\n        let index = this.references.length;\n        this.references.push(value);\n        return index + 1;\n    }\n    getString(value) {\n        return this.strings[value - 1];\n    }\n    string(value) {\n        let index = this.strings.length;\n        this.strings.push(value);\n        return index + 1;\n    }\n    getExpression(value) {\n        return this.expressions[value - 1];\n    }\n    getArray(value) {\n        return this.arrays[value - 1];\n    }\n    getNames(value) {\n        let _names = [];\n        let names = this.getArray(value);\n        for (let i = 0; i < names.length; i++) {\n            let n = names[i];\n            _names[i] = this.getString(n);\n        }\n        return _names;\n    }\n    array(values) {\n        let index = this.arrays.length;\n        this.arrays.push(values);\n        return index + 1;\n    }\n    getBlock(value) {\n        return this.blocks[value - 1];\n    }\n    block(block) {\n        let index = this.blocks.length;\n        this.blocks.push(block);\n        return index + 1;\n    }\n    getFunction(value) {\n        return this.functions[value - 1];\n    }\n    function(f) {\n        let index = this.functions.length;\n        this.functions.push(f);\n        return index + 1;\n    }\n    getOther(value) {\n        return this.others[value - 1];\n    }\n    other(other) {\n        let index = this.others.length;\n        this.others.push(other);\n        return index + 1;\n    }\n}","import { normalizeTextValue } from '../compiled/opcodes/content';\nimport { isSafeString } from '../upsert';\nconst badProtocols = ['javascript:', 'vbscript:'];\nconst badTags = ['A', 'BODY', 'LINK', 'IMG', 'IFRAME', 'BASE', 'FORM'];\nconst badTagsForDataURI = ['EMBED'];\nconst badAttributes = ['href', 'src', 'background', 'action'];\nconst badAttributesForDataURI = ['src'];\nfunction has(array, item) {\n    return array.indexOf(item) !== -1;\n}\nfunction checkURI(tagName, attribute) {\n    return (tagName === null || has(badTags, tagName)) && has(badAttributes, attribute);\n}\nfunction checkDataURI(tagName, attribute) {\n    if (tagName === null) return false;\n    return has(badTagsForDataURI, tagName) && has(badAttributesForDataURI, attribute);\n}\nexport function requiresSanitization(tagName, attribute) {\n    return checkURI(tagName, attribute) || checkDataURI(tagName, attribute);\n}\nexport function sanitizeAttributeValue(env, element, attribute, value) {\n    let tagName = null;\n    if (value === null || value === undefined) {\n        return value;\n    }\n    if (isSafeString(value)) {\n        return value.toHTML();\n    }\n    if (!element) {\n        tagName = null;\n    } else {\n        tagName = element.tagName.toUpperCase();\n    }\n    let str = normalizeTextValue(value);\n    if (checkURI(tagName, attribute)) {\n        let protocol = env.protocolForURL(str);\n        if (has(badProtocols, protocol)) {\n            return `unsafe:${str}`;\n        }\n    }\n    if (checkDataURI(tagName, attribute)) {\n        return `unsafe:${str}`;\n    }\n    return str;\n}","/*\n * @method normalizeProperty\n * @param element {HTMLElement}\n * @param slotName {String}\n * @returns {Object} { name, type }\n */\nexport function normalizeProperty(element, slotName) {\n    let type, normalized;\n    if (slotName in element) {\n        normalized = slotName;\n        type = 'prop';\n    } else {\n        let lower = slotName.toLowerCase();\n        if (lower in element) {\n            type = 'prop';\n            normalized = lower;\n        } else {\n            type = 'attr';\n            normalized = slotName;\n        }\n    }\n    if (type === 'prop' && (normalized.toLowerCase() === 'style' || preferAttr(element.tagName, normalized))) {\n        type = 'attr';\n    }\n    return { normalized, type };\n}\nexport function normalizePropertyValue(value) {\n    if (value === '') {\n        return true;\n    }\n    return value;\n}\n// properties that MUST be set as attributes, due to:\n// * browser bug\n// * strange spec outlier\nconst ATTR_OVERRIDES = {\n    // phantomjs < 2.0 lets you set it as a prop but won't reflect it\n    // back to the attribute. button.getAttribute('type') === null\n    BUTTON: { type: true, form: true },\n    INPUT: {\n        // Some version of IE (like IE9) actually throw an exception\n        // if you set input.type = 'something-unknown'\n        type: true,\n        form: true,\n        // Chrome 46.0.2464.0: 'autocorrect' in document.createElement('input') === false\n        // Safari 8.0.7: 'autocorrect' in document.createElement('input') === false\n        // Mobile Safari (iOS 8.4 simulator): 'autocorrect' in document.createElement('input') === true\n        autocorrect: true,\n        // Chrome 54.0.2840.98: 'list' in document.createElement('input') === true\n        // Safari 9.1.3: 'list' in document.createElement('input') === false\n        list: true\n    },\n    // element.form is actually a legitimate readOnly property, that is to be\n    // mutated, but must be mutated by setAttribute...\n    SELECT: { form: true },\n    OPTION: { form: true },\n    TEXTAREA: { form: true },\n    LABEL: { form: true },\n    FIELDSET: { form: true },\n    LEGEND: { form: true },\n    OBJECT: { form: true }\n};\nfunction preferAttr(tagName, propName) {\n    let tag = ATTR_OVERRIDES[tagName.toUpperCase()];\n    return tag && tag[propName.toLowerCase()] || false;\n}","import { ConcreteBounds } from '../bounds';\nimport { moveNodesBefore } from '../dom/helper';\nlet innerHTMLWrapper = {\n    colgroup: { depth: 2, before: '<table><colgroup>', after: '</colgroup></table>' },\n    table: { depth: 1, before: '<table>', after: '</table>' },\n    tbody: { depth: 2, before: '<table><tbody>', after: '</tbody></table>' },\n    tfoot: { depth: 2, before: '<table><tfoot>', after: '</tfoot></table>' },\n    thead: { depth: 2, before: '<table><thead>', after: '</thead></table>' },\n    tr: { depth: 3, before: '<table><tbody><tr>', after: '</tr></tbody></table>' }\n};\n// Patch:    innerHTML Fix\n// Browsers: IE9\n// Reason:   IE9 don't allow us to set innerHTML on col, colgroup, frameset,\n//           html, style, table, tbody, tfoot, thead, title, tr.\n// Fix:      Wrap the innerHTML we are about to set in its parents, apply the\n//           wrapped innerHTML on a div, then move the unwrapped nodes into the\n//           target position.\nexport function domChanges(document, DOMChangesClass) {\n    if (!document) return DOMChangesClass;\n    if (!shouldApplyFix(document)) {\n        return DOMChangesClass;\n    }\n    let div = document.createElement('div');\n    return class DOMChangesWithInnerHTMLFix extends DOMChangesClass {\n        insertHTMLBefore(parent, nextSibling, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            let parentTag = parent.tagName.toLowerCase();\n            let wrapper = innerHTMLWrapper[parentTag];\n            if (wrapper === undefined) {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            return fixInnerHTML(parent, wrapper, div, html, nextSibling);\n        }\n    };\n}\nexport function treeConstruction(document, DOMTreeConstructionClass) {\n    if (!document) return DOMTreeConstructionClass;\n    if (!shouldApplyFix(document)) {\n        return DOMTreeConstructionClass;\n    }\n    let div = document.createElement('div');\n    return class DOMTreeConstructionWithInnerHTMLFix extends DOMTreeConstructionClass {\n        insertHTMLBefore(parent, referenceNode, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, referenceNode, html);\n            }\n            let parentTag = parent.tagName.toLowerCase();\n            let wrapper = innerHTMLWrapper[parentTag];\n            if (wrapper === undefined) {\n                return super.insertHTMLBefore(parent, referenceNode, html);\n            }\n            return fixInnerHTML(parent, wrapper, div, html, referenceNode);\n        }\n    };\n}\nfunction fixInnerHTML(parent, wrapper, div, html, reference) {\n    let wrappedHtml = wrapper.before + html + wrapper.after;\n    div.innerHTML = wrappedHtml;\n    let parentNode = div;\n    for (let i = 0; i < wrapper.depth; i++) {\n        parentNode = parentNode.childNodes[0];\n    }\n    let [first, last] = moveNodesBefore(parentNode, parent, reference);\n    return new ConcreteBounds(parent, first, last);\n}\nfunction shouldApplyFix(document) {\n    let table = document.createElement('table');\n    try {\n        table.innerHTML = '<tbody></tbody>';\n    } catch (e) {} finally {\n        if (table.childNodes.length !== 0) {\n            // It worked as expected, no fix required\n            return false;\n        }\n    }\n    return true;\n}","import { ConcreteBounds } from '../bounds';\nimport { moveNodesBefore } from '../dom/helper';\nimport { unwrap } from '@glimmer/util';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n// Patch:    insertAdjacentHTML on SVG Fix\n// Browsers: Safari, IE, Edge, Firefox ~33-34\n// Reason:   insertAdjacentHTML does not exist on SVG elements in Safari. It is\n//           present but throws an exception on IE and Edge. Old versions of\n//           Firefox create nodes in the incorrect namespace.\n// Fix:      Since IE and Edge silently fail to create SVG nodes using\n//           innerHTML, and because Firefox may create nodes in the incorrect\n//           namespace using innerHTML on SVG elements, an HTML-string wrapping\n//           approach is used. A pre/post SVG tag is added to the string, then\n//           that whole string is added to a div. The created nodes are plucked\n//           out and applied to the target location on DOM.\nexport function domChanges(document, DOMChangesClass, svgNamespace) {\n    if (!document) return DOMChangesClass;\n    if (!shouldApplyFix(document, svgNamespace)) {\n        return DOMChangesClass;\n    }\n    let div = document.createElement('div');\n    return class DOMChangesWithSVGInnerHTMLFix extends DOMChangesClass {\n        insertHTMLBefore(parent, nextSibling, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            if (parent.namespaceURI !== svgNamespace) {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            return fixSVG(parent, div, html, nextSibling);\n        }\n    };\n}\nexport function treeConstruction(document, TreeConstructionClass, svgNamespace) {\n    if (!document) return TreeConstructionClass;\n    if (!shouldApplyFix(document, svgNamespace)) {\n        return TreeConstructionClass;\n    }\n    let div = document.createElement('div');\n    return class TreeConstructionWithSVGInnerHTMLFix extends TreeConstructionClass {\n        insertHTMLBefore(parent, reference, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, reference, html);\n            }\n            if (parent.namespaceURI !== svgNamespace) {\n                return super.insertHTMLBefore(parent, reference, html);\n            }\n            return fixSVG(parent, div, html, reference);\n        }\n    };\n}\nfunction fixSVG(parent, div, html, reference) {\n    // IE, Edge: also do not correctly support using `innerHTML` on SVG\n    // namespaced elements. So here a wrapper is used.\n    let wrappedHtml = '<svg>' + html + '</svg>';\n    div.innerHTML = wrappedHtml;\n    let [first, last] = moveNodesBefore(div.firstChild, parent, reference);\n    return new ConcreteBounds(parent, first, last);\n}\nfunction shouldApplyFix(document, svgNamespace) {\n    let svg = document.createElementNS(svgNamespace, 'svg');\n    try {\n        svg['insertAdjacentHTML']('beforeend', '<circle></circle>');\n    } catch (e) {\n        // IE, Edge: Will throw, insertAdjacentHTML is unsupported on SVG\n        // Safari: Will throw, insertAdjacentHTML is not present on SVG\n    } finally {\n        // FF: Old versions will create a node in the wrong namespace\n        if (svg.childNodes.length === 1 && unwrap(svg.firstChild).namespaceURI === SVG_NAMESPACE) {\n            // The test worked as expected, no fix required\n            return false;\n        }\n        return true;\n    }\n}","// Patch:    Adjacent text node merging fix\n// Browsers: IE, Edge, Firefox w/o inspector open\n// Reason:   These browsers will merge adjacent text nodes. For exmaple given\n//           <div>Hello</div> with div.insertAdjacentHTML(' world') browsers\n//           with proper behavior will populate div.childNodes with two items.\n//           These browsers will populate it with one merged node instead.\n// Fix:      Add these nodes to a wrapper element, then iterate the childNodes\n//           of that wrapper and move the nodes to their target location. Note\n//           that potential SVG bugs will have been handled before this fix.\n//           Note that this fix must only apply to the previous text node, as\n//           the base implementation of `insertHTMLBefore` already handles\n//           following text nodes correctly.\nexport function domChanges(document, DOMChangesClass) {\n    if (!document) return DOMChangesClass;\n    if (!shouldApplyFix(document)) {\n        return DOMChangesClass;\n    }\n    return class DOMChangesWithTextNodeMergingFix extends DOMChangesClass {\n        constructor(document) {\n            super(document);\n            this.uselessComment = document.createComment('');\n        }\n        insertHTMLBefore(parent, nextSibling, html) {\n            if (html === null) {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            let didSetUselessComment = false;\n            let nextPrevious = nextSibling ? nextSibling.previousSibling : parent.lastChild;\n            if (nextPrevious && nextPrevious instanceof Text) {\n                didSetUselessComment = true;\n                parent.insertBefore(this.uselessComment, nextSibling);\n            }\n            let bounds = super.insertHTMLBefore(parent, nextSibling, html);\n            if (didSetUselessComment) {\n                parent.removeChild(this.uselessComment);\n            }\n            return bounds;\n        }\n    };\n}\nexport function treeConstruction(document, TreeConstructionClass) {\n    if (!document) return TreeConstructionClass;\n    if (!shouldApplyFix(document)) {\n        return TreeConstructionClass;\n    }\n    return class TreeConstructionWithTextNodeMergingFix extends TreeConstructionClass {\n        constructor(document) {\n            super(document);\n            this.uselessComment = this.createComment('');\n        }\n        insertHTMLBefore(parent, reference, html) {\n            if (html === null) {\n                return super.insertHTMLBefore(parent, reference, html);\n            }\n            let didSetUselessComment = false;\n            let nextPrevious = reference ? reference.previousSibling : parent.lastChild;\n            if (nextPrevious && nextPrevious instanceof Text) {\n                didSetUselessComment = true;\n                parent.insertBefore(this.uselessComment, reference);\n            }\n            let bounds = super.insertHTMLBefore(parent, reference, html);\n            if (didSetUselessComment) {\n                parent.removeChild(this.uselessComment);\n            }\n            return bounds;\n        }\n    };\n}\nfunction shouldApplyFix(document) {\n    let mergingTextDiv = document.createElement('div');\n    mergingTextDiv.innerHTML = 'first';\n    mergingTextDiv.insertAdjacentHTML('beforeend', 'second');\n    if (mergingTextDiv.childNodes.length === 2) {\n        // It worked as expected, no fix required\n        return false;\n    }\n    return true;\n}","import { ConcreteBounds, SingleNodeBounds } from '../bounds';\nimport { domChanges as domChangesTableElementFix, treeConstruction as treeConstructionTableElementFix } from '../compat/inner-html-fix';\nimport { domChanges as domChangesSvgElementFix, treeConstruction as treeConstructionSvgElementFix } from '../compat/svg-inner-html-fix';\nimport { domChanges as domChangesNodeMergingFix, treeConstruction as treeConstructionNodeMergingFix } from '../compat/text-node-merging-fix';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n// http://www.w3.org/TR/html/syntax.html#html-integration-point\nconst SVG_INTEGRATION_POINTS = { foreignObject: 1, desc: 1, title: 1 };\n// http://www.w3.org/TR/html/syntax.html#adjust-svg-attributes\n// TODO: Adjust SVG attributes\n// http://www.w3.org/TR/html/syntax.html#parsing-main-inforeign\n// TODO: Adjust SVG elements\n// http://www.w3.org/TR/html/syntax.html#parsing-main-inforeign\nexport const BLACKLIST_TABLE = Object.create(null);\n[\"b\", \"big\", \"blockquote\", \"body\", \"br\", \"center\", \"code\", \"dd\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"hr\", \"i\", \"img\", \"li\", \"listing\", \"main\", \"meta\", \"nobr\", \"ol\", \"p\", \"pre\", \"ruby\", \"s\", \"small\", \"span\", \"strong\", \"strike\", \"sub\", \"sup\", \"table\", \"tt\", \"u\", \"ul\", \"var\"].forEach(tag => BLACKLIST_TABLE[tag] = 1);\nconst WHITESPACE = /[\\t-\\r \\xA0\\u1680\\u180E\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/;\nlet doc = typeof document === 'undefined' ? null : document;\nexport function isWhitespace(string) {\n    return WHITESPACE.test(string);\n}\nexport function moveNodesBefore(source, target, nextSibling) {\n    let first = source.firstChild;\n    let last = null;\n    let current = first;\n    while (current) {\n        last = current;\n        current = current.nextSibling;\n        target.insertBefore(last, nextSibling);\n    }\n    return [first, last];\n}\nexport class DOMOperations {\n    constructor(document) {\n        this.document = document;\n        this.setupUselessElement();\n    }\n    // split into seperate method so that NodeDOMTreeConstruction\n    // can override it.\n    setupUselessElement() {\n        this.uselessElement = this.document.createElement('div');\n    }\n    createElement(tag, context) {\n        let isElementInSVGNamespace, isHTMLIntegrationPoint;\n        if (context) {\n            isElementInSVGNamespace = context.namespaceURI === SVG_NAMESPACE || tag === 'svg';\n            isHTMLIntegrationPoint = SVG_INTEGRATION_POINTS[context.tagName];\n        } else {\n            isElementInSVGNamespace = tag === 'svg';\n            isHTMLIntegrationPoint = false;\n        }\n        if (isElementInSVGNamespace && !isHTMLIntegrationPoint) {\n            // FIXME: This does not properly handle <font> with color, face, or\n            // size attributes, which is also disallowed by the spec. We should fix\n            // this.\n            if (BLACKLIST_TABLE[tag]) {\n                throw new Error(`Cannot create a ${tag} inside an SVG context`);\n            }\n            return this.document.createElementNS(SVG_NAMESPACE, tag);\n        } else {\n            return this.document.createElement(tag);\n        }\n    }\n    insertBefore(parent, node, reference) {\n        parent.insertBefore(node, reference);\n    }\n    insertHTMLBefore(_parent, nextSibling, html) {\n        return insertHTMLBefore(this.uselessElement, _parent, nextSibling, html);\n    }\n    createTextNode(text) {\n        return this.document.createTextNode(text);\n    }\n    createComment(data) {\n        return this.document.createComment(data);\n    }\n}\nexport var DOM;\n(function (DOM) {\n    class TreeConstruction extends DOMOperations {\n        createElementNS(namespace, tag) {\n            return this.document.createElementNS(namespace, tag);\n        }\n        setAttribute(element, name, value, namespace) {\n            if (namespace) {\n                element.setAttributeNS(namespace, name, value);\n            } else {\n                element.setAttribute(name, value);\n            }\n        }\n    }\n    DOM.TreeConstruction = TreeConstruction;\n    let appliedTreeContruction = TreeConstruction;\n    appliedTreeContruction = treeConstructionNodeMergingFix(doc, appliedTreeContruction);\n    appliedTreeContruction = treeConstructionTableElementFix(doc, appliedTreeContruction);\n    appliedTreeContruction = treeConstructionSvgElementFix(doc, appliedTreeContruction, SVG_NAMESPACE);\n    DOM.DOMTreeConstruction = appliedTreeContruction;\n})(DOM || (DOM = {}));\nexport class DOMChanges extends DOMOperations {\n    constructor(document) {\n        super(document);\n        this.document = document;\n        this.namespace = null;\n    }\n    setAttribute(element, name, value) {\n        element.setAttribute(name, value);\n    }\n    setAttributeNS(element, namespace, name, value) {\n        element.setAttributeNS(namespace, name, value);\n    }\n    removeAttribute(element, name) {\n        element.removeAttribute(name);\n    }\n    removeAttributeNS(element, namespace, name) {\n        element.removeAttributeNS(namespace, name);\n    }\n    insertNodeBefore(parent, node, reference) {\n        if (isDocumentFragment(node)) {\n            let { firstChild, lastChild } = node;\n            this.insertBefore(parent, node, reference);\n            return new ConcreteBounds(parent, firstChild, lastChild);\n        } else {\n            this.insertBefore(parent, node, reference);\n            return new SingleNodeBounds(parent, node);\n        }\n    }\n    insertTextBefore(parent, nextSibling, text) {\n        let textNode = this.createTextNode(text);\n        this.insertBefore(parent, textNode, nextSibling);\n        return textNode;\n    }\n    insertBefore(element, node, reference) {\n        element.insertBefore(node, reference);\n    }\n    insertAfter(element, node, reference) {\n        this.insertBefore(element, node, reference.nextSibling);\n    }\n}\nexport function insertHTMLBefore(_useless, _parent, _nextSibling, html) {\n    // TypeScript vendored an old version of the DOM spec where `insertAdjacentHTML`\n    // only exists on `HTMLElement` but not on `Element`. We actually work with the\n    // newer version of the DOM API here (and monkey-patch this method in `./compat`\n    // when we detect older browsers). This is a hack to work around this limitation.\n    let parent = _parent;\n    let useless = _useless;\n    let nextSibling = _nextSibling;\n    let prev = nextSibling ? nextSibling.previousSibling : parent.lastChild;\n    let last;\n    if (html === null || html === '') {\n        return new ConcreteBounds(parent, null, null);\n    }\n    if (nextSibling === null) {\n        parent.insertAdjacentHTML('beforeend', html);\n        last = parent.lastChild;\n    } else if (nextSibling instanceof HTMLElement) {\n        nextSibling.insertAdjacentHTML('beforebegin', html);\n        last = nextSibling.previousSibling;\n    } else {\n        // Non-element nodes do not support insertAdjacentHTML, so add an\n        // element and call it on that element. Then remove the element.\n        //\n        // This also protects Edge, IE and Firefox w/o the inspector open\n        // from merging adjacent text nodes. See ./compat/text-node-merging-fix.ts\n        parent.insertBefore(useless, nextSibling);\n        useless.insertAdjacentHTML('beforebegin', html);\n        last = useless.previousSibling;\n        parent.removeChild(useless);\n    }\n    let first = prev ? prev.nextSibling : parent.firstChild;\n    return new ConcreteBounds(parent, first, last);\n}\nfunction isDocumentFragment(node) {\n    return node.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\n}\nlet helper = DOMChanges;\nhelper = domChangesNodeMergingFix(doc, helper);\nhelper = domChangesTableElementFix(doc, helper);\nhelper = domChangesSvgElementFix(doc, helper, SVG_NAMESPACE);\nexport default helper;\nexport const DOMTreeConstruction = DOM.DOMTreeConstruction;","import { sanitizeAttributeValue, requiresSanitization } from './sanitized-values';\nimport { normalizeProperty } from './props';\nimport { SVG_NAMESPACE } from './helper';\nimport { normalizeTextValue } from '../compiled/opcodes/content';\nexport function defaultManagers(element, attr, _isTrusting, _namespace) {\n    let tagName = element.tagName;\n    let isSVG = element.namespaceURI === SVG_NAMESPACE;\n    if (isSVG) {\n        return defaultAttributeManagers(tagName, attr);\n    }\n    let { type, normalized } = normalizeProperty(element, attr);\n    if (type === 'attr') {\n        return defaultAttributeManagers(tagName, normalized);\n    } else {\n        return defaultPropertyManagers(tagName, normalized);\n    }\n}\nexport function defaultPropertyManagers(tagName, attr) {\n    if (requiresSanitization(tagName, attr)) {\n        return new SafePropertyManager(attr);\n    }\n    if (isUserInputValue(tagName, attr)) {\n        return INPUT_VALUE_PROPERTY_MANAGER;\n    }\n    if (isOptionSelected(tagName, attr)) {\n        return OPTION_SELECTED_MANAGER;\n    }\n    return new PropertyManager(attr);\n}\nexport function defaultAttributeManagers(tagName, attr) {\n    if (requiresSanitization(tagName, attr)) {\n        return new SafeAttributeManager(attr);\n    }\n    return new AttributeManager(attr);\n}\nexport function readDOMAttr(element, attr) {\n    let isSVG = element.namespaceURI === SVG_NAMESPACE;\n    let { type, normalized } = normalizeProperty(element, attr);\n    if (isSVG) {\n        return element.getAttribute(normalized);\n    }\n    if (type === 'attr') {\n        return element.getAttribute(normalized);\n    }\n    {\n        return element[normalized];\n    }\n}\n;\nexport class AttributeManager {\n    constructor(attr) {\n        this.attr = attr;\n    }\n    setAttribute(env, element, value, namespace) {\n        let dom = env.getAppendOperations();\n        let normalizedValue = normalizeAttributeValue(value);\n        if (!isAttrRemovalValue(normalizedValue)) {\n            dom.setAttribute(element, this.attr, normalizedValue, namespace);\n        }\n    }\n    updateAttribute(env, element, value, namespace) {\n        if (value === null || value === undefined || value === false) {\n            if (namespace) {\n                env.getDOM().removeAttributeNS(element, namespace, this.attr);\n            } else {\n                env.getDOM().removeAttribute(element, this.attr);\n            }\n        } else {\n            this.setAttribute(env, element, value);\n        }\n    }\n}\n;\nexport class PropertyManager extends AttributeManager {\n    setAttribute(_env, element, value, _namespace) {\n        if (!isAttrRemovalValue(value)) {\n            element[this.attr] = value;\n        }\n    }\n    removeAttribute(env, element, namespace) {\n        // TODO this sucks but to preserve properties first and to meet current\n        // semantics we must do this.\n        let { attr } = this;\n        if (namespace) {\n            env.getDOM().removeAttributeNS(element, namespace, attr);\n        } else {\n            env.getDOM().removeAttribute(element, attr);\n        }\n    }\n    updateAttribute(env, element, value, namespace) {\n        // ensure the property is always updated\n        element[this.attr] = value;\n        if (isAttrRemovalValue(value)) {\n            this.removeAttribute(env, element, namespace);\n        }\n    }\n}\n;\nfunction normalizeAttributeValue(value) {\n    if (value === false || value === undefined || value === null) {\n        return null;\n    }\n    if (value === true) {\n        return '';\n    }\n    // onclick function etc in SSR\n    if (typeof value === 'function') {\n        return null;\n    }\n    return String(value);\n}\nfunction isAttrRemovalValue(value) {\n    return value === null || value === undefined;\n}\nclass SafePropertyManager extends PropertyManager {\n    setAttribute(env, element, value) {\n        super.setAttribute(env, element, sanitizeAttributeValue(env, element, this.attr, value));\n    }\n    updateAttribute(env, element, value) {\n        super.updateAttribute(env, element, sanitizeAttributeValue(env, element, this.attr, value));\n    }\n}\nfunction isUserInputValue(tagName, attribute) {\n    return (tagName === 'INPUT' || tagName === 'TEXTAREA') && attribute === 'value';\n}\nclass InputValuePropertyManager extends AttributeManager {\n    setAttribute(_env, element, value) {\n        let input = element;\n        input.value = normalizeTextValue(value);\n    }\n    updateAttribute(_env, element, value) {\n        let input = element;\n        let currentValue = input.value;\n        let normalizedValue = normalizeTextValue(value);\n        if (currentValue !== normalizedValue) {\n            input.value = normalizedValue;\n        }\n    }\n}\nexport const INPUT_VALUE_PROPERTY_MANAGER = new InputValuePropertyManager('value');\nfunction isOptionSelected(tagName, attribute) {\n    return tagName === 'OPTION' && attribute === 'selected';\n}\nclass OptionSelectedManager extends PropertyManager {\n    setAttribute(_env, element, value) {\n        if (value !== null && value !== undefined && value !== false) {\n            let option = element;\n            option.selected = true;\n        }\n    }\n    updateAttribute(_env, element, value) {\n        let option = element;\n        if (value) {\n            option.selected = true;\n        } else {\n            option.selected = false;\n        }\n    }\n}\nexport const OPTION_SELECTED_MANAGER = new OptionSelectedManager('selected');\nclass SafeAttributeManager extends AttributeManager {\n    setAttribute(env, element, value) {\n        super.setAttribute(env, element, sanitizeAttributeValue(env, element, this.attr, value));\n    }\n    updateAttribute(env, element, value, _namespace) {\n        super.updateAttribute(env, element, sanitizeAttributeValue(env, element, this.attr, value));\n    }\n}","import { populateBuiltins } from './syntax/functions';\nimport { Constants } from './environment/constants';\nimport { UNDEFINED_REFERENCE, ConditionalReference } from './references';\nimport { defaultManagers } from './dom/attribute-managers';\nimport { assert, ensureGuid, expect } from '@glimmer/util';\n\nexport class Scope {\n    constructor(\n    // the 0th slot is `self`\n    slots, callerScope,\n    // named arguments and blocks passed to a layout that uses eval\n    evalScope,\n    // locals in scope when the partial was invoked\n    partialMap) {\n        this.slots = slots;\n        this.callerScope = callerScope;\n        this.evalScope = evalScope;\n        this.partialMap = partialMap;\n    }\n    static root(self, size = 0) {\n        let refs = new Array(size + 1);\n        for (let i = 0; i <= size; i++) {\n            refs[i] = UNDEFINED_REFERENCE;\n        }\n        return new Scope(refs, null, null, null).init({ self });\n    }\n    static sized(size = 0) {\n        let refs = new Array(size + 1);\n        for (let i = 0; i <= size; i++) {\n            refs[i] = UNDEFINED_REFERENCE;\n        }\n        return new Scope(refs, null, null, null);\n    }\n    init({ self }) {\n        this.slots[0] = self;\n        return this;\n    }\n    getSelf() {\n        return this.get(0);\n    }\n    getSymbol(symbol) {\n        return this.get(symbol);\n    }\n    getBlock(symbol) {\n        return this.get(symbol);\n    }\n    getEvalScope() {\n        return this.evalScope;\n    }\n    getPartialMap() {\n        return this.partialMap;\n    }\n    bind(symbol, value) {\n        this.set(symbol, value);\n    }\n    bindSelf(self) {\n        this.set(0, self);\n    }\n    bindSymbol(symbol, value) {\n        this.set(symbol, value);\n    }\n    bindBlock(symbol, value) {\n        this.set(symbol, value);\n    }\n    bindEvalScope(map) {\n        this.evalScope = map;\n    }\n    bindPartialMap(map) {\n        this.partialMap = map;\n    }\n    bindCallerScope(scope) {\n        this.callerScope = scope;\n    }\n    getCallerScope() {\n        return this.callerScope;\n    }\n    child() {\n        return new Scope(this.slots.slice(), this.callerScope, this.evalScope, this.partialMap);\n    }\n    get(index) {\n        if (index >= this.slots.length) {\n            throw new RangeError(`BUG: cannot get $${index} from scope; length=${this.slots.length}`);\n        }\n        return this.slots[index];\n    }\n    set(index, value) {\n        if (index >= this.slots.length) {\n            throw new RangeError(`BUG: cannot get $${index} from scope; length=${this.slots.length}`);\n        }\n        this.slots[index] = value;\n    }\n}\nclass Transaction {\n    constructor() {\n        this.scheduledInstallManagers = [];\n        this.scheduledInstallModifiers = [];\n        this.scheduledUpdateModifierManagers = [];\n        this.scheduledUpdateModifiers = [];\n        this.createdComponents = [];\n        this.createdManagers = [];\n        this.updatedComponents = [];\n        this.updatedManagers = [];\n        this.destructors = [];\n    }\n    didCreate(component, manager) {\n        this.createdComponents.push(component);\n        this.createdManagers.push(manager);\n    }\n    didUpdate(component, manager) {\n        this.updatedComponents.push(component);\n        this.updatedManagers.push(manager);\n    }\n    scheduleInstallModifier(modifier, manager) {\n        this.scheduledInstallManagers.push(manager);\n        this.scheduledInstallModifiers.push(modifier);\n    }\n    scheduleUpdateModifier(modifier, manager) {\n        this.scheduledUpdateModifierManagers.push(manager);\n        this.scheduledUpdateModifiers.push(modifier);\n    }\n    didDestroy(d) {\n        this.destructors.push(d);\n    }\n    commit() {\n        let { createdComponents, createdManagers } = this;\n        for (let i = 0; i < createdComponents.length; i++) {\n            let component = createdComponents[i];\n            let manager = createdManagers[i];\n            manager.didCreate(component);\n        }\n        let { updatedComponents, updatedManagers } = this;\n        for (let i = 0; i < updatedComponents.length; i++) {\n            let component = updatedComponents[i];\n            let manager = updatedManagers[i];\n            manager.didUpdate(component);\n        }\n        let { destructors } = this;\n        for (let i = 0; i < destructors.length; i++) {\n            destructors[i].destroy();\n        }\n        let { scheduledInstallManagers, scheduledInstallModifiers } = this;\n        for (let i = 0; i < scheduledInstallManagers.length; i++) {\n            let manager = scheduledInstallManagers[i];\n            let modifier = scheduledInstallModifiers[i];\n            manager.install(modifier);\n        }\n        let { scheduledUpdateModifierManagers, scheduledUpdateModifiers } = this;\n        for (let i = 0; i < scheduledUpdateModifierManagers.length; i++) {\n            let manager = scheduledUpdateModifierManagers[i];\n            let modifier = scheduledUpdateModifiers[i];\n            manager.update(modifier);\n        }\n    }\n}\nexport class Opcode {\n    constructor(heap) {\n        this.heap = heap;\n        this.offset = 0;\n    }\n    get type() {\n        return this.heap.getbyaddr(this.offset);\n    }\n    get op1() {\n        return this.heap.getbyaddr(this.offset + 1);\n    }\n    get op2() {\n        return this.heap.getbyaddr(this.offset + 2);\n    }\n    get op3() {\n        return this.heap.getbyaddr(this.offset + 3);\n    }\n}\nvar TableSlotState;\n(function (TableSlotState) {\n    TableSlotState[TableSlotState[\"Allocated\"] = 0] = \"Allocated\";\n    TableSlotState[TableSlotState[\"Freed\"] = 1] = \"Freed\";\n    TableSlotState[TableSlotState[\"Purged\"] = 2] = \"Purged\";\n    TableSlotState[TableSlotState[\"Pointer\"] = 3] = \"Pointer\";\n})(TableSlotState || (TableSlotState = {}));\nexport class Heap {\n    constructor() {\n        this.heap = [];\n        this.offset = 0;\n        this.handle = 0;\n        /**\n         * layout:\n         *\n         * - pointer into heap\n         * - size\n         * - freed (0 or 1)\n         */\n        this.table = [];\n    }\n    push(item) {\n        this.heap[this.offset++] = item;\n    }\n    getbyaddr(address) {\n        return this.heap[address];\n    }\n    setbyaddr(address, value) {\n        this.heap[address] = value;\n    }\n    malloc() {\n        this.table.push(this.offset, 0, 0);\n        let handle = this.handle;\n        this.handle += 3;\n        return handle;\n    }\n    finishMalloc(handle) {\n        let start = this.table[handle];\n        let finish = this.offset;\n        this.table[handle + 1] = finish - start;\n    }\n    size() {\n        return this.offset;\n    }\n    // It is illegal to close over this address, as compaction\n    // may move it. However, it is legal to use this address\n    // multiple times between compactions.\n    getaddr(handle) {\n        return this.table[handle];\n    }\n    gethandle(address) {\n        this.table.push(address, 0, TableSlotState.Pointer);\n        let handle = this.handle;\n        this.handle += 3;\n        return handle;\n    }\n    sizeof(handle) {\n        if (false) {\n            return this.table[handle + 1];\n        }\n        return -1;\n    }\n    free(handle) {\n        this.table[handle + 2] = 1;\n    }\n    compact() {\n        let compactedSize = 0;\n        let { table, table: { length }, heap } = this;\n        for (let i = 0; i < length; i += 3) {\n            let offset = table[i];\n            let size = table[i + 1];\n            let state = table[i + 2];\n            if (state === TableSlotState.Purged) {\n                continue;\n            } else if (state === TableSlotState.Freed) {\n                // transition to \"already freed\"\n                // a good improvement would be to reuse\n                // these slots\n                table[i + 2] = 2;\n                compactedSize += size;\n            } else if (state === TableSlotState.Allocated) {\n                for (let j = offset; j <= i + size; j++) {\n                    heap[j - compactedSize] = heap[j];\n                }\n                table[i] = offset - compactedSize;\n            } else if (state === TableSlotState.Pointer) {\n                table[i] = offset - compactedSize;\n            }\n        }\n        this.offset = this.offset - compactedSize;\n    }\n}\nexport class Program {\n    constructor() {\n        this.heap = new Heap();\n        this._opcode = new Opcode(this.heap);\n        this.constants = new Constants();\n    }\n    opcode(offset) {\n        this._opcode.offset = offset;\n        return this._opcode;\n    }\n}\nexport class Environment {\n    constructor({ appendOperations, updateOperations }) {\n        this._macros = null;\n        this._transaction = null;\n        this.program = new Program();\n        this.appendOperations = appendOperations;\n        this.updateOperations = updateOperations;\n    }\n    toConditionalReference(reference) {\n        return new ConditionalReference(reference);\n    }\n    getAppendOperations() {\n        return this.appendOperations;\n    }\n    getDOM() {\n        return this.updateOperations;\n    }\n    getIdentity(object) {\n        return ensureGuid(object) + '';\n    }\n    begin() {\n        assert(!this._transaction, 'a glimmer transaction was begun, but one already exists. You may have a nested transaction');\n        this._transaction = new Transaction();\n    }\n    get transaction() {\n        return expect(this._transaction, 'must be in a transaction');\n    }\n    didCreate(component, manager) {\n        this.transaction.didCreate(component, manager);\n    }\n    didUpdate(component, manager) {\n        this.transaction.didUpdate(component, manager);\n    }\n    scheduleInstallModifier(modifier, manager) {\n        this.transaction.scheduleInstallModifier(modifier, manager);\n    }\n    scheduleUpdateModifier(modifier, manager) {\n        this.transaction.scheduleUpdateModifier(modifier, manager);\n    }\n    didDestroy(d) {\n        this.transaction.didDestroy(d);\n    }\n    commit() {\n        let transaction = this.transaction;\n        this._transaction = null;\n        transaction.commit();\n    }\n    attributeFor(element, attr, isTrusting, namespace) {\n        return defaultManagers(element, attr, isTrusting, namespace === undefined ? null : namespace);\n    }\n    macros() {\n        let macros = this._macros;\n        if (!macros) {\n            this._macros = macros = this.populateBuiltins();\n        }\n        return macros;\n    }\n    populateBuiltins() {\n        return populateBuiltins();\n    }\n}\nexport default Environment;","import { clear, move as moveBounds } from '../bounds';\nimport { ElementStack } from '../builder';\nimport { Stack, LinkedList, dict, expect } from '@glimmer/util';\nimport { IteratorSynchronizer,\n// Tags\ncombine, UpdatableTag, combineSlice, CONSTANT_TAG, INITIAL } from '@glimmer/reference';\nimport { UpdatingOpcode } from '../opcodes';\nimport VM, { EvaluationStack } from './append';\nexport default class UpdatingVM {\n    constructor(env, { alwaysRevalidate = false }) {\n        this.frameStack = new Stack();\n        this.env = env;\n        this.constants = env.program.constants;\n        this.dom = env.getDOM();\n        this.alwaysRevalidate = alwaysRevalidate;\n    }\n    execute(opcodes, handler) {\n        let { frameStack } = this;\n        this.try(opcodes, handler);\n        while (true) {\n            if (frameStack.isEmpty()) break;\n            let opcode = this.frame.nextStatement();\n            if (opcode === null) {\n                this.frameStack.pop();\n                continue;\n            }\n            opcode.evaluate(this);\n        }\n    }\n    get frame() {\n        return expect(this.frameStack.current, 'bug: expected a frame');\n    }\n    goto(op) {\n        this.frame.goto(op);\n    }\n    try(ops, handler) {\n        this.frameStack.push(new UpdatingVMFrame(this, ops, handler));\n    }\n    throw() {\n        this.frame.handleException();\n        this.frameStack.pop();\n    }\n    evaluateOpcode(opcode) {\n        opcode.evaluate(this);\n    }\n}\nexport class BlockOpcode extends UpdatingOpcode {\n    constructor(start, state, bounds, children) {\n        super();\n        this.start = start;\n        this.type = \"block\";\n        this.next = null;\n        this.prev = null;\n        let { env, scope, dynamicScope, stack } = state;\n        this.children = children;\n        this.env = env;\n        this.scope = scope;\n        this.dynamicScope = dynamicScope;\n        this.stack = stack;\n        this.bounds = bounds;\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n    evaluate(vm) {\n        vm.try(this.children, null);\n    }\n    destroy() {\n        this.bounds.destroy();\n    }\n    didDestroy() {\n        this.env.didDestroy(this.bounds);\n    }\n    toJSON() {\n        let details = dict();\n        details[\"guid\"] = `${this._guid}`;\n        return {\n            guid: this._guid,\n            type: this.type,\n            details,\n            children: this.children.toArray().map(op => op.toJSON())\n        };\n    }\n}\nexport class TryOpcode extends BlockOpcode {\n    constructor(start, state, bounds, children) {\n        super(start, state, bounds, children);\n        this.type = \"try\";\n        this.tag = this._tag = UpdatableTag.create(CONSTANT_TAG);\n    }\n    didInitializeChildren() {\n        this._tag.inner.update(combineSlice(this.children));\n    }\n    evaluate(vm) {\n        vm.try(this.children, this);\n    }\n    handleException() {\n        let { env, bounds, children, scope, dynamicScope, start, stack, prev, next } = this;\n        children.clear();\n        let elementStack = ElementStack.resume(env, bounds, bounds.reset(env));\n        let vm = new VM(env, scope, dynamicScope, elementStack);\n        let updating = new LinkedList();\n        vm.execute(start, vm => {\n            vm.stack = EvaluationStack.restore(stack);\n            vm.updatingOpcodeStack.push(updating);\n            vm.updateWith(this);\n            vm.updatingOpcodeStack.push(children);\n        });\n        this.prev = prev;\n        this.next = next;\n    }\n    toJSON() {\n        let json = super.toJSON();\n        let details = json[\"details\"];\n        if (!details) {\n            details = json[\"details\"] = {};\n        }\n        return super.toJSON();\n    }\n}\nclass ListRevalidationDelegate {\n    constructor(opcode, marker) {\n        this.opcode = opcode;\n        this.marker = marker;\n        this.didInsert = false;\n        this.didDelete = false;\n        this.map = opcode.map;\n        this.updating = opcode['children'];\n    }\n    insert(key, item, memo, before) {\n        let { map, opcode, updating } = this;\n        let nextSibling = null;\n        let reference = null;\n        if (before) {\n            reference = map[before];\n            nextSibling = reference['bounds'].firstNode();\n        } else {\n            nextSibling = this.marker;\n        }\n        let vm = opcode.vmForInsertion(nextSibling);\n        let tryOpcode = null;\n        let { start } = opcode;\n        vm.execute(start, vm => {\n            map[key] = tryOpcode = vm.iterate(memo, item);\n            vm.updatingOpcodeStack.push(new LinkedList());\n            vm.updateWith(tryOpcode);\n            vm.updatingOpcodeStack.push(tryOpcode.children);\n        });\n        updating.insertBefore(tryOpcode, reference);\n        this.didInsert = true;\n    }\n    retain(_key, _item, _memo) {}\n    move(key, _item, _memo, before) {\n        let { map, updating } = this;\n        let entry = map[key];\n        let reference = map[before] || null;\n        if (before) {\n            moveBounds(entry, reference.firstNode());\n        } else {\n            moveBounds(entry, this.marker);\n        }\n        updating.remove(entry);\n        updating.insertBefore(entry, reference);\n    }\n    delete(key) {\n        let { map } = this;\n        let opcode = map[key];\n        opcode.didDestroy();\n        clear(opcode);\n        this.updating.remove(opcode);\n        delete map[key];\n        this.didDelete = true;\n    }\n    done() {\n        this.opcode.didInitializeChildren(this.didInsert || this.didDelete);\n    }\n}\nexport class ListBlockOpcode extends BlockOpcode {\n    constructor(start, state, bounds, children, artifacts) {\n        super(start, state, bounds, children);\n        this.type = \"list-block\";\n        this.map = dict();\n        this.lastIterated = INITIAL;\n        this.artifacts = artifacts;\n        let _tag = this._tag = UpdatableTag.create(CONSTANT_TAG);\n        this.tag = combine([artifacts.tag, _tag]);\n    }\n    didInitializeChildren(listDidChange = true) {\n        this.lastIterated = this.artifacts.tag.value();\n        if (listDidChange) {\n            this._tag.inner.update(combineSlice(this.children));\n        }\n    }\n    evaluate(vm) {\n        let { artifacts, lastIterated } = this;\n        if (!artifacts.tag.validate(lastIterated)) {\n            let { bounds } = this;\n            let { dom } = vm;\n            let marker = dom.createComment('');\n            dom.insertAfter(bounds.parentElement(), marker, expect(bounds.lastNode(), \"can't insert after an empty bounds\"));\n            let target = new ListRevalidationDelegate(this, marker);\n            let synchronizer = new IteratorSynchronizer({ target, artifacts });\n            synchronizer.sync();\n            this.parentElement().removeChild(marker);\n        }\n        // Run now-updated updating opcodes\n        super.evaluate(vm);\n    }\n    vmForInsertion(nextSibling) {\n        let { env, scope, dynamicScope } = this;\n        let elementStack = ElementStack.forInitialRender(this.env, this.bounds.parentElement(), nextSibling);\n        return new VM(env, scope, dynamicScope, elementStack);\n    }\n    toJSON() {\n        let json = super.toJSON();\n        let map = this.map;\n        let inner = Object.keys(map).map(key => {\n            return `${JSON.stringify(key)}: ${map[key]._guid}`;\n        }).join(\", \");\n        let details = json[\"details\"];\n        if (!details) {\n            details = json[\"details\"] = {};\n        }\n        details[\"map\"] = `{${inner}}`;\n        return json;\n    }\n}\nclass UpdatingVMFrame {\n    constructor(vm, ops, exceptionHandler) {\n        this.vm = vm;\n        this.ops = ops;\n        this.exceptionHandler = exceptionHandler;\n        this.vm = vm;\n        this.ops = ops;\n        this.current = ops.head();\n    }\n    goto(op) {\n        this.current = op;\n    }\n    nextStatement() {\n        let { current, ops } = this;\n        if (current) this.current = ops.nextNode(current);\n        return current;\n    }\n    handleException() {\n        if (this.exceptionHandler) {\n            this.exceptionHandler.handleException();\n        }\n    }\n}","import { clear } from '../bounds';\nimport UpdatingVM from './update';\nexport default class RenderResult {\n    constructor(env, updating, bounds) {\n        this.env = env;\n        this.updating = updating;\n        this.bounds = bounds;\n    }\n    rerender({ alwaysRevalidate = false } = { alwaysRevalidate: false }) {\n        let { env, updating } = this;\n        let vm = new UpdatingVM(env, { alwaysRevalidate });\n        vm.execute(updating, this);\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n    opcodes() {\n        return this.updating;\n    }\n    handleException() {\n        throw \"this should never happen\";\n    }\n    destroy() {\n        this.bounds.destroy();\n        clear(this.bounds);\n    }\n}","import { Register } from '../opcodes';\nimport { Scope } from '../environment';\nimport { Stack, LinkedList, ListSlice, expect, typePos } from '@glimmer/util';\nimport { combineSlice } from '@glimmer/reference';\nimport { LabelOpcode, JumpIfNotModifiedOpcode, DidModifyOpcode } from '../compiled/opcodes/vm';\nimport { ListBlockOpcode, TryOpcode } from './update';\nimport RenderResult from './render-result';\n\nimport { APPEND_OPCODES } from '../opcodes';\nexport class EvaluationStack {\n    constructor(stack, fp, sp) {\n        this.stack = stack;\n        this.fp = fp;\n        this.sp = sp;\n        if (false) {\n            Object.seal(this);\n        }\n    }\n    static empty() {\n        return new this([], 0, -1);\n    }\n    static restore(snapshot) {\n        return new this(snapshot.slice(), 0, snapshot.length - 1);\n    }\n    isEmpty() {\n        return this.sp === -1;\n    }\n    push(value) {\n        this.stack[++this.sp] = value;\n    }\n    dup(position = this.sp) {\n        this.push(this.stack[position]);\n    }\n    pop(n = 1) {\n        let top = this.stack[this.sp];\n        this.sp -= n;\n        return top;\n    }\n    peek() {\n        return this.stack[this.sp];\n    }\n    fromBase(offset) {\n        return this.stack[this.fp - offset];\n    }\n    fromTop(offset) {\n        return this.stack[this.sp - offset];\n    }\n    capture(items) {\n        let end = this.sp + 1;\n        let start = end - items;\n        return this.stack.slice(start, end);\n    }\n    reset() {\n        this.stack.length = 0;\n    }\n    toArray() {\n        return this.stack.slice(this.fp, this.sp + 1);\n    }\n}\nexport default class VM {\n    constructor(env, scope, dynamicScope, elementStack) {\n        this.env = env;\n        this.elementStack = elementStack;\n        this.dynamicScopeStack = new Stack();\n        this.scopeStack = new Stack();\n        this.updatingOpcodeStack = new Stack();\n        this.cacheGroups = new Stack();\n        this.listBlockStack = new Stack();\n        this.stack = EvaluationStack.empty();\n        /* Registers */\n        this.pc = -1;\n        this.ra = -1;\n        this.s0 = null;\n        this.s1 = null;\n        this.t0 = null;\n        this.t1 = null;\n        this.env = env;\n        this.heap = env.program.heap;\n        this.constants = env.program.constants;\n        this.elementStack = elementStack;\n        this.scopeStack.push(scope);\n        this.dynamicScopeStack.push(dynamicScope);\n    }\n    get fp() {\n        return this.stack.fp;\n    }\n    set fp(fp) {\n        this.stack.fp = fp;\n    }\n    get sp() {\n        return this.stack.sp;\n    }\n    set sp(sp) {\n        this.stack.sp = sp;\n    }\n    // Fetch a value from a register onto the stack\n    fetch(register) {\n        this.stack.push(this[Register[register]]);\n    }\n    // Load a value from the stack into a register\n    load(register) {\n        this[Register[register]] = this.stack.pop();\n    }\n    // Fetch a value from a register\n    fetchValue(register) {\n        return this[Register[register]];\n    }\n    // Load a value into a register\n    loadValue(register, value) {\n        this[Register[register]] = value;\n    }\n    // Start a new frame and save $ra and $fp on the stack\n    pushFrame() {\n        this.stack.push(this.ra);\n        this.stack.push(this.fp);\n        this.fp = this.sp - 1;\n    }\n    // Restore $ra, $sp and $fp\n    popFrame() {\n        this.sp = this.fp - 1;\n        this.ra = this.stack.fromBase(0);\n        this.fp = this.stack.fromBase(-1);\n    }\n    // Jump to an address in `program`\n    goto(offset) {\n        this.pc = typePos(this.pc + offset);\n    }\n    // Save $pc into $ra, then jump to a new address in `program` (jal in MIPS)\n    call(handle) {\n        let pc = this.heap.getaddr(handle);\n        this.ra = this.pc;\n        this.pc = pc;\n    }\n    // Put a specific `program` address in $ra\n    returnTo(offset) {\n        this.ra = typePos(this.pc + offset);\n    }\n    // Return to the `program` address stored in $ra\n    return() {\n        this.pc = this.ra;\n    }\n    static initial(env, self, dynamicScope, elementStack, program) {\n        let scope = Scope.root(self, program.symbolTable.symbols.length);\n        let vm = new VM(env, scope, dynamicScope, elementStack);\n        vm.pc = vm.heap.getaddr(program.handle);\n        vm.updatingOpcodeStack.push(new LinkedList());\n        return vm;\n    }\n    capture(args) {\n        return {\n            dynamicScope: this.dynamicScope(),\n            env: this.env,\n            scope: this.scope(),\n            stack: this.stack.capture(args)\n        };\n    }\n    beginCacheGroup() {\n        this.cacheGroups.push(this.updating().tail());\n    }\n    commitCacheGroup() {\n        //        JumpIfNotModified(END)\n        //        (head)\n        //        (....)\n        //        (tail)\n        //        DidModify\n        // END:   Noop\n        let END = new LabelOpcode(\"END\");\n        let opcodes = this.updating();\n        let marker = this.cacheGroups.pop();\n        let head = marker ? opcodes.nextNode(marker) : opcodes.head();\n        let tail = opcodes.tail();\n        let tag = combineSlice(new ListSlice(head, tail));\n        let guard = new JumpIfNotModifiedOpcode(tag, END);\n        opcodes.insertBefore(guard, head);\n        opcodes.append(new DidModifyOpcode(guard));\n        opcodes.append(END);\n    }\n    enter(args) {\n        let updating = new LinkedList();\n        let state = this.capture(args);\n        let tracker = this.elements().pushUpdatableBlock();\n        let tryOpcode = new TryOpcode(this.heap.gethandle(this.pc), state, tracker, updating);\n        this.didEnter(tryOpcode);\n    }\n    iterate(memo, value) {\n        let stack = this.stack;\n        stack.push(value);\n        stack.push(memo);\n        let state = this.capture(2);\n        let tracker = this.elements().pushUpdatableBlock();\n        // let ip = this.ip;\n        // this.ip = end + 4;\n        // this.frames.push(ip);\n        return new TryOpcode(this.heap.gethandle(this.pc), state, tracker, new LinkedList());\n    }\n    enterItem(key, opcode) {\n        this.listBlock().map[key] = opcode;\n        this.didEnter(opcode);\n    }\n    enterList(relativeStart) {\n        let updating = new LinkedList();\n        let state = this.capture(0);\n        let tracker = this.elements().pushBlockList(updating);\n        let artifacts = this.stack.peek().artifacts;\n        let start = this.heap.gethandle(typePos(this.pc + relativeStart));\n        let opcode = new ListBlockOpcode(start, state, tracker, updating, artifacts);\n        this.listBlockStack.push(opcode);\n        this.didEnter(opcode);\n    }\n    didEnter(opcode) {\n        this.updateWith(opcode);\n        this.updatingOpcodeStack.push(opcode.children);\n    }\n    exit() {\n        this.elements().popBlock();\n        this.updatingOpcodeStack.pop();\n        let parent = this.updating().tail();\n        parent.didInitializeChildren();\n    }\n    exitList() {\n        this.exit();\n        this.listBlockStack.pop();\n    }\n    updateWith(opcode) {\n        this.updating().append(opcode);\n    }\n    listBlock() {\n        return expect(this.listBlockStack.current, 'expected a list block');\n    }\n    updating() {\n        return expect(this.updatingOpcodeStack.current, 'expected updating opcode on the updating opcode stack');\n    }\n    elements() {\n        return this.elementStack;\n    }\n    scope() {\n        return expect(this.scopeStack.current, 'expected scope on the scope stack');\n    }\n    dynamicScope() {\n        return expect(this.dynamicScopeStack.current, 'expected dynamic scope on the dynamic scope stack');\n    }\n    pushChildScope() {\n        this.scopeStack.push(this.scope().child());\n    }\n    pushCallerScope(childScope = false) {\n        let callerScope = expect(this.scope().getCallerScope(), 'pushCallerScope is called when a caller scope is present');\n        this.scopeStack.push(childScope ? callerScope.child() : callerScope);\n    }\n    pushDynamicScope() {\n        let child = this.dynamicScope().child();\n        this.dynamicScopeStack.push(child);\n        return child;\n    }\n    pushRootScope(size, bindCaller) {\n        let scope = Scope.sized(size);\n        if (bindCaller) scope.bindCallerScope(this.scope());\n        this.scopeStack.push(scope);\n        return scope;\n    }\n    popScope() {\n        this.scopeStack.pop();\n    }\n    popDynamicScope() {\n        this.dynamicScopeStack.pop();\n    }\n    newDestroyable(d) {\n        this.elements().newDestroyable(d);\n    }\n    /// SCOPE HELPERS\n    getSelf() {\n        return this.scope().getSelf();\n    }\n    referenceForSymbol(symbol) {\n        return this.scope().getSymbol(symbol);\n    }\n    /// EXECUTION\n    execute(start, initialize) {\n        this.pc = this.heap.getaddr(start);\n        if (initialize) initialize(this);\n        let result;\n        while (true) {\n            result = this.next();\n            if (result.done) break;\n        }\n        return result.value;\n    }\n    next() {\n        let { env, updatingOpcodeStack, elementStack } = this;\n        let opcode = this.nextStatement(env);\n        let result;\n        if (opcode !== null) {\n            APPEND_OPCODES.evaluate(this, opcode, opcode.type);\n            result = { done: false, value: null };\n        } else {\n            // Unload the stack\n            this.stack.reset();\n            result = {\n                done: true,\n                value: new RenderResult(env, expect(updatingOpcodeStack.pop(), 'there should be a final updating opcode stack'), elementStack.popBlock())\n            };\n        }\n        return result;\n    }\n    nextStatement(env) {\n        let { pc } = this;\n        if (pc === -1) {\n            return null;\n        }\n        let program = env.program;\n        this.pc += 4;\n        return program.opcode(pc);\n    }\n    evaluateOpcode(opcode) {\n        APPEND_OPCODES.evaluate(this, opcode, opcode.type);\n    }\n    bindDynamicScope(names) {\n        let scope = this.dynamicScope();\n        for (let i = names.length - 1; i >= 0; i--) {\n            let name = this.constants.getString(names[i]);\n            scope.set(name, this.stack.pop());\n        }\n    }\n}","import { assign, EMPTY_ARRAY } from '@glimmer/util';\nimport { ElementStack } from './builder';\nimport Scanner from './scanner';\nimport { VM } from './vm';\nexport class TemplateIterator {\n    constructor(vm) {\n        this.vm = vm;\n    }\n    next() {\n        return this.vm.next();\n    }\n}\nlet clientId = 0;\nexport default function templateFactory({ id: templateId, meta, block }) {\n    let parsedBlock;\n    let id = templateId || `client-${clientId++}`;\n    let create = (env, envMeta) => {\n        let newMeta = envMeta ? assign({}, envMeta, meta) : meta;\n        if (!parsedBlock) {\n            parsedBlock = JSON.parse(block);\n        }\n        return new ScannableTemplate(id, newMeta, env, parsedBlock);\n    };\n    return { id, meta, create };\n}\nclass ScannableTemplate {\n    constructor(id, meta, env, rawBlock) {\n        this.id = id;\n        this.meta = meta;\n        this.env = env;\n        this.entryPoint = null;\n        this.layout = null;\n        this.partial = null;\n        this.block = null;\n        this.scanner = new Scanner(rawBlock, env);\n        this.symbols = rawBlock.symbols;\n        this.hasEval = rawBlock.hasEval;\n    }\n    render(self, appendTo, dynamicScope) {\n        let { env } = this;\n        let elementStack = ElementStack.forInitialRender(env, appendTo, null);\n        let compiled = this.asEntryPoint().compileDynamic(env);\n        let vm = VM.initial(env, self, dynamicScope, elementStack, compiled);\n        return new TemplateIterator(vm);\n    }\n    asEntryPoint() {\n        if (!this.entryPoint) this.entryPoint = this.scanner.scanEntryPoint(this.compilationMeta());\n        return this.entryPoint;\n    }\n    asLayout(componentName, attrs) {\n        if (!this.layout) this.layout = this.scanner.scanLayout(this.compilationMeta(), attrs || EMPTY_ARRAY, componentName);\n        return this.layout;\n    }\n    asPartial() {\n        if (!this.partial) this.partial = this.scanner.scanEntryPoint(this.compilationMeta(true));\n        return this.partial;\n    }\n    asBlock() {\n        if (!this.block) this.block = this.scanner.scanBlock(this.compilationMeta());\n        return this.block;\n    }\n    compilationMeta(asPartial = false) {\n        return { templateMeta: this.meta, symbols: this.symbols, asPartial };\n    }\n}","export var NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Element\"] = 0] = \"Element\";\n    NodeType[NodeType[\"Attribute\"] = 1] = \"Attribute\";\n    NodeType[NodeType[\"Text\"] = 2] = \"Text\";\n    NodeType[NodeType[\"CdataSection\"] = 3] = \"CdataSection\";\n    NodeType[NodeType[\"EntityReference\"] = 4] = \"EntityReference\";\n    NodeType[NodeType[\"Entity\"] = 5] = \"Entity\";\n    NodeType[NodeType[\"ProcessingInstruction\"] = 6] = \"ProcessingInstruction\";\n    NodeType[NodeType[\"Comment\"] = 7] = \"Comment\";\n    NodeType[NodeType[\"Document\"] = 8] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 9] = \"DocumentType\";\n    NodeType[NodeType[\"DocumentFragment\"] = 10] = \"DocumentFragment\";\n    NodeType[NodeType[\"Notation\"] = 11] = \"Notation\";\n})(NodeType || (NodeType = {}));","export function EMPTY_CACHE() {}","import { EMPTY_CACHE } from '../utils';\nimport { dict } from '@glimmer/util';\nimport Meta from '../meta';\nimport { PropertyReference } from './descriptors';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nexport default class PathReference {\n    constructor(parent, property) {\n        this.cache = EMPTY_CACHE;\n        this.inner = null;\n        this.chains = null;\n        this.lastParentValue = EMPTY_CACHE;\n        this._guid = 0;\n        this.tag = VOLATILE_TAG;\n        this.parent = parent;\n        this.property = property;\n    }\n    value() {\n        let { lastParentValue, property, inner } = this;\n        let parentValue = this._parentValue();\n        if (parentValue === null || parentValue === undefined) {\n            return this.cache = undefined;\n        }\n        if (lastParentValue === parentValue) {\n            inner = this.inner;\n        } else {\n            let ReferenceType = typeof parentValue === 'object' ? Meta.for(parentValue).referenceTypeFor(property) : PropertyReference;\n            inner = this.inner = new ReferenceType(parentValue, property, this);\n        }\n        // if (typeof parentValue === 'object') {\n        //   Meta.for(parentValue).addReference(property, this);\n        // }\n        return this.cache = inner.value();\n    }\n    get(prop) {\n        let chains = this._getChains();\n        if (prop in chains) return chains[prop];\n        return chains[prop] = new PathReference(this, prop);\n    }\n    label() {\n        return '[reference Direct]';\n    }\n    _getChains() {\n        if (this.chains) return this.chains;\n        return this.chains = dict();\n    }\n    _parentValue() {\n        let parent = this.parent.value();\n        this.lastParentValue = parent;\n        return parent;\n    }\n}\nexport { PathReference };","import { dict } from '@glimmer/util';\nimport { PathReference } from './path';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nexport default class RootReference {\n    constructor(object) {\n        this.chains = dict();\n        this.tag = VOLATILE_TAG;\n        this.object = object;\n    }\n    value() {\n        return this.object;\n    }\n    update(object) {\n        this.object = object;\n        // this.notify();\n    }\n    get(prop) {\n        let chains = this.chains;\n        if (prop in chains) return chains[prop];\n        return chains[prop] = new PathReference(this, prop);\n    }\n    chainFor(prop) {\n        let chains = this.chains;\n        if (prop in chains) return chains[prop];\n        return null;\n    }\n    path(string) {\n        return string.split('.').reduce((ref, part) => ref.get(part), this);\n    }\n    referenceFromParts(parts) {\n        return parts.reduce((ref, part) => ref.get(part), this);\n    }\n    label() {\n        return '[reference Root]';\n    }\n}","import { PropertyReference } from './references/descriptors';\nimport RootReference from './references/root';\nimport { DictSet, dict } from '@glimmer/util';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nconst NOOP_DESTROY = { destroy() {} };\nclass ConstPath {\n    constructor(parent, _property) {\n        this.tag = VOLATILE_TAG;\n        this.parent = parent;\n    }\n    chain() {\n        return NOOP_DESTROY;\n    }\n    notify() {}\n    value() {\n        return this.parent[this.property];\n    }\n    get(prop) {\n        return new ConstPath(this.parent[this.property], prop);\n    }\n}\nclass ConstRoot {\n    constructor(value) {\n        this.tag = VOLATILE_TAG;\n        this.inner = value;\n    }\n    update(inner) {\n        this.inner = inner;\n    }\n    chain() {\n        return NOOP_DESTROY;\n    }\n    notify() {}\n    value() {\n        return this.inner;\n    }\n    referenceFromParts(_parts) {\n        throw new Error(\"Not implemented\");\n    }\n    chainFor(_prop) {\n        throw new Error(\"Not implemented\");\n    }\n    get(prop) {\n        return new ConstPath(this.inner, prop);\n    }\n}\nclass ConstMeta /*implements IMeta*/ {\n    constructor(object) {\n        this.object = object;\n    }\n    root() {\n        return new ConstRoot(this.object);\n    }\n}\nexport const CLASS_META = \"df8be4c8-4e89-44e2-a8f9-550c8dacdca7\";\nconst hasOwnProperty = Object.hasOwnProperty;\nclass Meta {\n    constructor(object, { RootReferenceFactory, DefaultPathReferenceFactory }) {\n        this.references = null;\n        this.slots = null;\n        this.referenceTypes = null;\n        this.propertyMetadata = null;\n        this.object = object;\n        this.RootReferenceFactory = RootReferenceFactory || RootReference;\n        this.DefaultPathReferenceFactory = DefaultPathReferenceFactory || PropertyReference;\n    }\n    static for(obj) {\n        if (obj === null || obj === undefined) return new Meta(obj, {});\n        if (hasOwnProperty.call(obj, '_meta') && obj._meta) return obj._meta;\n        if (!Object.isExtensible(obj)) return new ConstMeta(obj);\n        let MetaToUse = Meta;\n        if (obj.constructor && obj.constructor[CLASS_META]) {\n            let classMeta = obj.constructor[CLASS_META];\n            MetaToUse = classMeta.InstanceMetaConstructor;\n        } else if (obj[CLASS_META]) {\n            MetaToUse = obj[CLASS_META].InstanceMetaConstructor;\n        }\n        return obj._meta = new MetaToUse(obj, {});\n    }\n    static exists(obj) {\n        return typeof obj === 'object' && obj._meta;\n    }\n    static metadataForProperty(_key) {\n        return null;\n    }\n    addReference(property, reference) {\n        let refs = this.references = this.references || dict();\n        let set = refs[property] = refs[property] || new DictSet();\n        set.add(reference);\n    }\n    addReferenceTypeFor(property, type) {\n        this.referenceTypes = this.referenceTypes || dict();\n        this.referenceTypes[property] = type;\n    }\n    referenceTypeFor(property) {\n        if (!this.referenceTypes) return PropertyReference;\n        return this.referenceTypes[property] || PropertyReference;\n    }\n    removeReference(property, reference) {\n        if (!this.references) return;\n        let set = this.references[property];\n        set.delete(reference);\n    }\n    getReferenceTypes() {\n        this.referenceTypes = this.referenceTypes || dict();\n        return this.referenceTypes;\n    }\n    referencesFor(property) {\n        if (!this.references) return null;\n        return this.references[property];\n    }\n    getSlots() {\n        return this.slots = this.slots || dict();\n    }\n    root() {\n        return this.rootCache = this.rootCache || new this.RootReferenceFactory(this.object);\n    }\n}\nexport default Meta;\nexport function metaFor(obj) {\n    return Meta.for(obj);\n}","import Meta from '../meta';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nexport class PropertyReference {\n    constructor(object, property, _outer) {\n        this.tag = VOLATILE_TAG;\n        this.object = object;\n        this.property = property;\n    }\n    value() {\n        return this.object[this.property];\n    }\n    label() {\n        return '[reference Property]';\n    }\n}\nexport function ComputedReferenceBlueprint(_property, dependencies) {\n    return class ComputedReference {\n        constructor(object, property, outer) {\n            this.installed = false;\n            this.tag = VOLATILE_TAG;\n            this.object = object;\n            this.property = property;\n            this.dependencies = dependencies;\n            this.outer = outer;\n        }\n        value() {\n            if (!this.installed) {\n                let root = Meta.for(this.object).root();\n                this.dependencies.forEach(dep => {\n                    let ref = root.referenceFromParts(dep);\n                    ref.value();\n                });\n                this.installed = true;\n            }\n            return this.object[this.property];\n        }\n        label() {\n            return '[reference Computed]';\n        }\n    };\n}","// import { metaFor } from './meta';\n// import { intern } from '@glimmer/util';\n// import { metaFor } from './meta';\nexport function setProperty(parent, property, val) {\n    // let rootProp = metaFor(parent).root().chainFor(property));\n    // let referencesToNotify = metaFor(parent).referencesFor(property));\n    parent[property] = val;\n    // if (referencesToNotify) {\n    //   referencesToNotify.forEach(function(ref) { ref.notify(); });\n    // }\n    // if (rootProp) rootProp.notify();\n}\nexport function notifyProperty(_parent, _property) {\n    // let rootProp = metaFor(parent).root().chainFor(property));\n    // let referencesToNotify = metaFor(parent).referencesFor(property));\n    // if (referencesToNotify) {\n    //   referencesToNotify.forEach(function(ref) { ref.notify(); });\n    // }\n    // if (rootProp) rootProp.notify();\n}","import {\n  Registry,\n  RegistryAccessor,\n  RegistrationOptions,\n  Injection,\n  Resolver\n} from '@glimmer/di';\n\nfunction isTypeSpecifier(specifier: string) {\n  return specifier.indexOf(':') === -1;\n}\n\nexport default class ApplicationRegistry implements RegistryAccessor {\n  private _registry: Registry;\n  private _resolver: Resolver;\n\n  constructor(registry: Registry, resolver: Resolver) {\n    this._registry = registry;\n    this._resolver = resolver;\n  }\n\n  register(specifier: string, factory: any, options?: RegistrationOptions): void {\n    let normalizedSpecifier = this._toAbsoluteSpecifier(specifier);\n    this._registry.register(normalizedSpecifier, factory, options);\n  }\n\n  registration(specifier: string): any {\n    let normalizedSpecifier = this._toAbsoluteSpecifier(specifier);\n    return this._registry.registration(normalizedSpecifier);\n  }\n\n  unregister(specifier: string) {\n    let normalizedSpecifier = this._toAbsoluteSpecifier(specifier);\n    this._registry.unregister(normalizedSpecifier);\n  }\n\n  registerOption(specifier: string, option: string, value: any): void {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    this._registry.registerOption(normalizedSpecifier, option, value);\n  }\n\n  registeredOption(specifier: string, option: string): any {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    return this._registry.registeredOption(normalizedSpecifier, option);\n  }\n\n  registeredOptions(specifier: string): any {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    return this._registry.registeredOptions(normalizedSpecifier);\n  }\n\n  unregisterOption(specifier: string, option: string): void {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    this._registry.unregisterOption(normalizedSpecifier, option);\n  }\n\n  registerInjection(specifier: string, property: string, injection: string): void {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    let normalizedInjection = this._toAbsoluteSpecifier(injection);\n    this._registry.registerInjection(normalizedSpecifier, property, normalizedInjection);\n  }\n\n  registeredInjections(specifier: string): Injection[] {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    return this._registry.registeredInjections(normalizedSpecifier);\n  }\n\n  private _toAbsoluteSpecifier(specifier: string, referrer?: string): string {\n    return this._resolver.identify(specifier, referrer);\n  }\n\n  private _toAbsoluteOrTypeSpecifier(specifier: string): string {\n    if (isTypeSpecifier(specifier)) {\n      return specifier;\n    } else {\n      return this._toAbsoluteSpecifier(specifier);\n    }\n  }\n}","import {\n  assign,\n  Opaque\n} from '@glimmer/util';\nimport {\n  DynamicScope as GlimmerDynamicScope\n} from '@glimmer/runtime';\nimport {\n  PathReference\n} from '@glimmer/reference';\n\nexport default class DynamicScope implements GlimmerDynamicScope {\n  private bucket;\n\n  constructor(bucket=null) {\n    if (bucket) {\n      this.bucket = assign({}, bucket);\n    } else {\n      this.bucket = {};\n    }\n  }\n\n  get(key: string): PathReference<Opaque> {\n    return this.bucket[key];\n  }\n\n  set(key: string, reference: PathReference<Opaque>) {\n    return this.bucket[key] = reference;\n  }\n\n  child(): DynamicScope {\n    return new DynamicScope(this.bucket);\n  }\n}\n","import {\n  Opaque\n} from '@glimmer/util';\n\nimport {\n  Reference,\n  OpaqueIterator,\n  AbstractIterable,\n  IterationItem,\n  Tag\n} from \"@glimmer/reference\";\n\nimport {\n  UpdatableReference\n} from \"@glimmer/object-reference\";\n\nexport type KeyFor<T> = (item: Opaque, index: T) => string;\n\nclass ArrayIterator implements OpaqueIterator {\n  private array: Opaque[];\n  private keyFor: KeyFor<number>;\n  private position = 0;\n\n  constructor(array: Opaque[], keyFor: KeyFor<number>) {\n    this.array = array;\n    this.keyFor = keyFor;\n  }\n\n  isEmpty(): boolean {\n    return this.array.length === 0;\n  }\n\n  next(): IterationItem<Opaque, number> {\n    let { position, array, keyFor } = this;\n\n    if (position >= array.length) return null;\n\n    let value = array[position];\n    let key = keyFor(value, position);\n    let memo = position;\n\n    this.position++;\n\n    return { key, value, memo };\n  }\n}\n\nclass ObjectKeysIterator implements OpaqueIterator {\n  private keys: string[];\n  private values: Opaque[];\n  private keyFor: KeyFor<string>;\n  private position = 0;\n\n  constructor(keys: string[], values: Opaque[], keyFor: KeyFor<string>) {\n    this.keys = keys;\n    this.values = values;\n    this.keyFor = keyFor;\n  }\n\n  isEmpty(): boolean {\n    return this.keys.length === 0;\n  }\n\n  next(): IterationItem<Opaque, string> {\n    let { position, keys, values, keyFor } = this;\n\n    if (position >= keys.length) return null;\n\n    let value = values[position];\n    let memo = keys[position];\n    let key = keyFor(value, memo);\n\n    this.position++;\n\n    return { key, value, memo };\n  }\n}\n\nclass EmptyIterator implements OpaqueIterator {\n  isEmpty(): boolean {\n    return true;\n  }\n\n  next(): IterationItem<Opaque, Opaque> {\n    throw new Error(`Cannot call next() on an empty iterator`);\n  }\n}\n\nconst EMPTY_ITERATOR = new EmptyIterator();\n\nexport default class Iterable implements AbstractIterable<Opaque, Opaque, IterationItem<Opaque, Opaque>, UpdatableReference<Opaque>, UpdatableReference<Opaque>> {\n  public tag: Tag;\n  private ref: Reference<Opaque>;\n  private keyFor: KeyFor<Opaque>;\n\n  constructor(ref: Reference<Opaque>, keyFor: KeyFor<Opaque>) {\n    this.tag = ref.tag;\n    this.ref = ref;\n    this.keyFor = keyFor;\n  }\n\n  iterate(): OpaqueIterator {\n    let { ref, keyFor } = this;\n\n    let iterable = ref.value() as any;\n\n    if (Array.isArray(iterable)) {\n      return iterable.length > 0 ? new ArrayIterator(iterable, keyFor) : EMPTY_ITERATOR;\n    } else if (iterable === undefined || iterable === null) {\n      return EMPTY_ITERATOR;\n    } else if (iterable.forEach !== undefined) {\n      let array = [];\n      iterable.forEach(function(item) {\n        array.push(item);\n      });\n      return array.length > 0 ? new ArrayIterator(array, keyFor) : EMPTY_ITERATOR;\n    } else if (typeof iterable === 'object') {\n       let keys = Object.keys(iterable);\n       return keys.length > 0 ? new ObjectKeysIterator(keys, keys.map(key => iterable[key]), keyFor) : EMPTY_ITERATOR;\n     } else {\n      throw new Error(`Don't know how to {{#each ${iterable}}}`);\n    }\n  }\n\n  valueReferenceFor(item: IterationItem<Opaque, Opaque>): UpdatableReference<Opaque> {\n    return new UpdatableReference(item.value);\n  }\n\n  updateValueReference(reference: UpdatableReference<Opaque>, item: IterationItem<Opaque, Opaque>) {\n    reference.update(item.value);\n  }\n\n  memoReferenceFor(item: IterationItem<Opaque, Opaque>): UpdatableReference<Opaque> {\n    return new UpdatableReference(item.memo);\n  }\n\n  updateMemoReference(reference: UpdatableReference<Opaque>, item: IterationItem<Opaque, Opaque>) {\n    reference.update(item.memo);\n  }\n}\n","import { ConstReference, Reference } from \"@glimmer/reference\";\nimport { VM, Arguments } from \"@glimmer/runtime\";\n\nexport default function buildAction(vm: VM, _args: Arguments) {\n  let componentRef = vm.getSelf();\n  let args = _args.capture();\n\n  let actionFunc = args.positional.at(0).value() as Function;\n  if (typeof actionFunc !== 'function') {\n    throwNoActionError(actionFunc, args.positional.at(0));\n  }\n\n  return new ConstReference(function action(...invokedArgs) {\n    let curriedArgs = args.positional.value();\n    // Consume the action function that was already captured above.\n    curriedArgs.shift();\n\n    curriedArgs.push(...invokedArgs);\n\n    // Invoke the function with the component as the context, the curried\n    // arguments passed to `{{action}}`, and the arguments the bound function\n    // was invoked with.\n    actionFunc.apply(componentRef && componentRef.value(), curriedArgs);\n  });\n}\n\nfunction throwNoActionError(actionFunc: any, actionFuncReference: Reference<any>) {\n  let referenceInfo = debugInfoForReference(actionFuncReference);\n  throw new Error(`You tried to create an action with the {{action}} helper, but the first argument ${referenceInfo}was ${typeof actionFunc} instead of a function.`);\n}\n\nexport function debugInfoForReference(reference: any): string {\n  let message = '';\n  let parent;\n  let property;\n\n  if (reference === null || reference === undefined) { return message; }\n\n  if ('parent' in reference && 'property' in reference) {\n    parent = reference['parent'].value();\n    property = reference['property'];\n  } else if ('_parentValue' in reference && '_propertyKey' in reference) {\n    parent = reference['_parentValue'];\n    property = reference['_propertyKey'];\n  }\n\n  if (property !== undefined) {\n    message += `('${property}' on ${debugName(parent)}) `;\n  }\n\n  return message;\n}\n\nfunction debugName(obj: any) {\n  let objType = typeof obj;\n  if (obj === null || obj === undefined) {\n    return objType;\n  } else if (objType === 'number' || objType === 'boolean') {\n    return obj.toString();\n  } else {\n    if (obj['debugName']) {\n      return obj['debugName'];\n    }\n    try {\n      return JSON.stringify(obj);\n    } catch (e) { }\n    return obj.toString();\n  }\n}\n","import {\n  Dict,\n  Opaque\n} from '@glimmer/util';\n\nimport {\n  VOLATILE_TAG,\n  PathReference,\n  Reference\n} from \"@glimmer/reference\";\n\nimport {\n  Arguments,\n  CapturedArguments,\n  Helper as GlimmerHelper,\n  VM\n} from \"@glimmer/runtime\";\n\nexport type UserHelper = (args: ReadonlyArray<Opaque>, named: Dict<Opaque>) => any;\n\nexport default function buildUserHelper(helperFunc): GlimmerHelper {\n  return (_vm: VM, args: Arguments) => new HelperReference(helperFunc, args);\n}\n\nexport class SimplePathReference<T> implements PathReference<T> {\n  private parent: Reference<T>;\n  private property: string;\n  public tag = VOLATILE_TAG;\n\n  constructor(parent: Reference<T>, property: string) {\n    this.parent = parent;\n    this.property = property;\n  }\n\n  value(): T {\n    return this.parent.value()[this.property];\n  }\n\n  get(prop: string): PathReference<Opaque> {\n    return new SimplePathReference(this, prop);\n  }\n}\n\nexport class HelperReference implements PathReference<Opaque> {\n  private helper: UserHelper;\n  private args: CapturedArguments;\n  public tag = VOLATILE_TAG;\n\n  constructor(helper: UserHelper, args: Arguments) {\n    this.helper = helper;\n    this.args = args.capture();\n  }\n\n  value() {\n    let { helper, args } = this;\n\n    return helper(args.positional.value(), args.named.value());\n  }\n\n  get(prop: string): SimplePathReference<Opaque> {\n    return new SimplePathReference(this, prop);\n  }\n}\n","import {\n  DOMChanges,\n  DOMTreeConstruction,\n  Environment as GlimmerEnvironment,\n  InlineMacros,\n  ModifierManager,\n  templateFactory,\n  ComponentDefinition,\n  Component,\n  ComponentManager,\n  BlockMacros,\n  Helper as GlimmerHelper\n} from '@glimmer/runtime';\nimport {\n  Reference,\n  OpaqueIterable\n} from \"@glimmer/reference\";\nimport {\n  dict,\n  Opaque\n} from '@glimmer/util';\nimport {\n  getOwner,\n  setOwner,\n  Owner,\n  Factory\n} from '@glimmer/di';\nimport Iterable from './iterable';\nimport { TemplateMeta } from '@glimmer/component';\nimport ComponentDefinitionCreator from './component-definition-creator';\nimport Application from \"./application\";\nimport {\n  blockComponentMacro,\n  inlineComponentMacro\n } from './dynamic-component';\n import action from './helpers/action';\n import buildUserHelper from './helpers/user-helper';\n\ntype KeyFor<T> = (item: Opaque, index: T) => string;\n\nexport interface EnvironmentOptions {\n  document?: HTMLDocument;\n  appendOperations?: DOMTreeConstruction;\n}\n\nclass DefaultComponentDefinition extends ComponentDefinition<any> {\n  toJSON() {\n    return `<default-component-definition name=${this.name}>`;\n  }\n}\n\nconst DEFAULT_MANAGER = 'main';\nconst DEFAULT_HELPERS = {\n  action\n};\n\nexport default class Environment extends GlimmerEnvironment {\n  private helpers = dict<GlimmerHelper>();\n  private modifiers = dict<ModifierManager<Opaque>>();\n  private components = dict<ComponentDefinition<Component>>();\n  private managers = dict<ComponentManager<Component>>();\n  private uselessAnchor: HTMLAnchorElement;\n\n  static create(options: EnvironmentOptions = {}) {\n    options.document = options.document || self.document;\n    options.appendOperations = options.appendOperations || new DOMTreeConstruction(options.document);\n\n    return new Environment(options);\n  }\n\n  constructor(options: EnvironmentOptions) {\n    super({ appendOperations: options.appendOperations, updateOperations: new DOMChanges(options.document as HTMLDocument || document) });\n\n    setOwner(this, getOwner(options));\n\n    // TODO - required for `protocolForURL` - seek alternative approach\n    // e.g. see `installPlatformSpecificProtocolForURL` in Ember\n    this.uselessAnchor = options.document.createElement('a') as HTMLAnchorElement;\n  }\n\n  protocolForURL(url: string): string {\n    // TODO - investigate alternative approaches\n    // e.g. see `installPlatformSpecificProtocolForURL` in Ember\n    this.uselessAnchor.href = url;\n    return this.uselessAnchor.protocol;\n  }\n\n  hasPartial() {\n    return false;\n  }\n\n  lookupPartial(): any {\n  }\n\n  managerFor(managerId: string = DEFAULT_MANAGER): ComponentManager<Component> {\n    let manager: ComponentManager<Component>;\n\n    manager = this.managers[managerId];\n    if (!manager) {\n      let app: Application = getOwner(this) as any as Application;\n      manager = this.managers[managerId] = getOwner(this).lookup(`component-manager:/${app.rootName}/component-managers/${managerId}`);\n      if (!manager) {\n        throw new Error(`No component manager found for ID ${managerId}.`);\n      }\n    }\n    return manager;\n  }\n\n  hasComponentDefinition(name: string, meta: TemplateMeta): boolean {\n    return !!this.getComponentDefinition(name, meta);\n  }\n\n  getComponentDefinition(name: string, meta: TemplateMeta): ComponentDefinition<Component> {\n    let owner: Owner = getOwner(this);\n    let relSpecifier = `template:${name}`;\n    let referrer: string = meta.specifier;\n\n    let specifier = owner.identify(relSpecifier, referrer);\n    if (specifier === undefined) {\n      if (owner.identify(`component:${name}`, referrer)) {\n        throw new Error(`The component '${name}' is missing a template. All components must have a template. Make sure there is a template.hbs in the component directory.`);\n      } else {\n        throw new Error(\"Could not find template for \" + name);\n      }\n    }\n\n    if (!this.components[specifier]) {\n      return this.registerComponent(name, specifier, meta, owner);\n    }\n\n    return this.components[specifier];\n  }\n\n  registerComponent(name: string, templateSpecifier: string, meta: TemplateMeta, owner: Owner): ComponentDefinition<Component> {\n    let serializedTemplate = owner.lookup('template', templateSpecifier);\n    let componentSpecifier = owner.identify('component', templateSpecifier);\n    let componentFactory: Factory<Component> = null;\n\n    if (componentSpecifier) {\n      componentFactory = owner.factoryFor(componentSpecifier);\n    }\n\n    let template = templateFactory<TemplateMeta>(serializedTemplate).create(this);\n    let manager: ComponentManager<Component> = this.managerFor(meta.managerId);\n    let definition: ComponentDefinition<Component>;\n\n    if (canCreateComponentDefinition(manager)) {\n      definition = manager.createComponentDefinition(name, template, componentFactory);\n    } else {\n      definition = new DefaultComponentDefinition(name, manager, componentFactory);\n    }\n\n    this.components[templateSpecifier] = definition;\n\n    return definition;\n  }\n\n  hasHelper(name: string, meta: TemplateMeta) {\n    return !!this.lookupHelper(name, meta);\n  }\n\n  lookupHelper(name: string, meta: TemplateMeta): GlimmerHelper {\n    if (DEFAULT_HELPERS[name]) {\n      return DEFAULT_HELPERS[name];\n    }\n\n    let owner: Owner = getOwner(this);\n    let relSpecifier = `helper:${name}`;\n    let referrer: string = meta.specifier;\n\n    let specifier = owner.identify(relSpecifier, referrer);\n    if (specifier === undefined) {\n      return;\n    }\n\n    if (!this.helpers[specifier]) {\n      return this.registerHelper(specifier, owner);\n    }\n\n    return this.helpers[specifier];\n  }\n\n  registerHelper(specifier: string, owner: Owner): GlimmerHelper {\n    let helperFunc = owner.lookup(specifier);\n\n    let userHelper = buildUserHelper(helperFunc);\n    this.helpers[specifier] = userHelper;\n\n    return userHelper;\n  }\n\n  hasModifier(modifierName: string, blockMeta: TemplateMeta): boolean {\n    return modifierName.length === 1 && (modifierName in this.modifiers);\n  }\n\n  lookupModifier(modifierName: string, blockMeta: TemplateMeta): ModifierManager<Opaque> {\n    let modifier = this.modifiers[modifierName];\n\n    if(!modifier) throw new Error(`Modifier for ${modifierName} not found.`);\n    return modifier;\n  }\n\n  iterableFor(ref: Reference<Opaque>, keyPath: string): OpaqueIterable {\n    let keyFor: KeyFor<Opaque>;\n\n    if (!keyPath) {\n      throw new Error('Must specify a key for #each');\n    }\n\n    switch (keyPath) {\n      case '@index':\n        keyFor = (_, index: number) => String(index);\n      break;\n      case '@primitive':\n        keyFor = (item: Opaque) => String(item);\n      break;\n      default:\n        keyFor = (item: Opaque) => item[keyPath];\n      break;\n    }\n\n    return new Iterable(ref, keyFor);\n  }\n\n  macros(): { blocks: BlockMacros, inlines: InlineMacros } {\n    let macros = super.macros();\n\n    populateMacros(macros.blocks, macros.inlines);\n\n    return macros;\n  }\n}\n\nfunction populateMacros(blocks: BlockMacros, inlines: InlineMacros): void {\n  blocks.add('component', blockComponentMacro);\n  inlines.add('component', inlineComponentMacro);\n}\n\nfunction canCreateComponentDefinition(manager: ComponentDefinitionCreator | ComponentManager<Component>): manager is ComponentDefinitionCreator {\n  return (manager as ComponentDefinitionCreator).createComponentDefinition !== undefined;\n}\n","export default {\"id\":\"UN61+JFU\",\"block\":\"{\\\"symbols\\\":[\\\"root\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[19,0,[\\\"roots\\\"]]],[[\\\"key\\\"],[\\\"id\\\"]],{\\\"statements\\\":[[4,\\\"-in-element\\\",[[19,1,[\\\"parent\\\"]]],[[\\\"nextSibling\\\"],[[19,1,[\\\"nextSibling\\\"]]]],{\\\"statements\\\":[[1,[25,\\\"component\\\",[[19,1,[\\\"component\\\"]]],null],false]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/-application/templates/main\"}};","import {\n  Container,\n  Factory,\n  Owner,\n  Registry,\n  RegistryWriter,\n  Resolver,\n  setOwner,\n} from '@glimmer/di';\nimport {\n  Simple,\n  templateFactory,\n  ComponentDefinition,\n  Component\n} from '@glimmer/runtime';\nimport {\n  UpdatableReference\n} from '@glimmer/object-reference';\nimport {\n  Option\n} from '@glimmer/util';\nimport ApplicationRegistry from './application-registry';\nimport DynamicScope from './dynamic-scope';\nimport Environment from './environment';\nimport mainTemplate from './templates/main';\n\nfunction NOOP() {}\n\nexport interface ApplicationOptions {\n  rootName: string;\n  resolver: Resolver;\n  document?: Simple.Document;\n}\n\nexport interface Initializer {\n  name?: string;\n  initialize(registry: RegistryWriter): void;\n}\n\nexport interface AppRoot {\n  id: number;\n  component: string | ComponentDefinition<Component>;\n  parent: Simple.Node;\n  nextSibling: Option<Simple.Node>;\n}\n\nexport default class Application implements Owner {\n  public rootName: string;\n  public resolver: Resolver;\n  public document: Simple.Document;\n  public env: Environment;\n  private _roots: AppRoot[] = [];\n  private _rootsIndex = 0;\n  private _registry: Registry;\n  private _container: Container;\n  private _initializers: Initializer[] = [];\n  private _initialized = false;\n  private _rendering = false;\n  private _rendered = false;\n  private _scheduled = false;\n  private _rerender: () => void = NOOP;\n\n  constructor(options: ApplicationOptions) {\n    this.rootName = options.rootName;\n    this.resolver = options.resolver;\n    this.document = options.document || window.document;\n  }\n\n  /** @hidden */\n  registerInitializer(initializer: Initializer): void {\n    this._initializers.push(initializer);\n  }\n\n  /** @hidden */\n  initRegistry(): void {\n    let registry = this._registry = new Registry();\n\n    // Create ApplicationRegistry as a proxy to the underlying registry\n    // that will only be available during `initialize`.\n    let appRegistry = new ApplicationRegistry(this._registry, this.resolver);\n\n    registry.register(`environment:/${this.rootName}/main/main`, Environment);\n    registry.registerOption('helper', 'instantiate', false);\n    registry.registerOption('template', 'instantiate', false);\n    registry.register(`document:/${this.rootName}/main/main`, this.document as any);\n    registry.registerOption('document', 'instantiate', false);\n    registry.registerInjection('environment', 'document', `document:/${this.rootName}/main/main`);\n    registry.registerInjection('component-manager', 'env', `environment:/${this.rootName}/main/main`);\n\n    let initializers = this._initializers;\n    for (let i = 0; i < initializers.length; i++) {\n      initializers[i].initialize(appRegistry);\n    }\n\n    this._initialized = true;\n  }\n\n  /** @hidden */\n  initContainer(): void {\n    this._container = new Container(this._registry, this.resolver);\n\n    // Inject `this` (the app) as the \"owner\" of every object instantiated\n    // by its container.\n    this._container.defaultInjections = (specifier: string) => {\n      let hash = {};\n      setOwner(hash, this);\n      return hash;\n    };\n  }\n\n  /** @hidden */\n  initialize(): void {\n    this.initRegistry();\n    this.initContainer();\n  }\n\n  /** @hidden */\n  boot(): void {\n    this.initialize();\n\n    this.env = this.lookup(`environment:/${this.rootName}/main/main`);\n\n    this.render();\n  }\n\n  /** @hidden */\n  render(): void {\n    this.env.begin();\n\n    let mainLayout = templateFactory(mainTemplate).create(this.env);\n    let self = new UpdatableReference({ roots: this._roots });\n    let doc = this.document as Document; // TODO FixReification\n    let appendTo = doc.body;\n    let dynamicScope = new DynamicScope();\n    let templateIterator = mainLayout.render(self, appendTo, dynamicScope);\n    let result;\n    do {\n      result = templateIterator.next();\n    } while (!result.done);\n\n    this.env.commit();\n\n    let renderResult = result.value;\n\n    this._rerender = () => {\n      this.env.begin();\n      renderResult.rerender();\n      this.env.commit();\n      this._didRender();\n    };\n\n    this._didRender();\n  }\n\n  _didRender(): void {\n    this._rendered = true;\n  }\n\n  renderComponent(component: string | ComponentDefinition<Component>, parent: Simple.Node, nextSibling: Option<Simple.Node> = null): void {\n    this._roots.push({ id: this._rootsIndex++, component, parent, nextSibling });\n    this.scheduleRerender();\n  }\n\n  scheduleRerender(): void {\n    if (this._scheduled || !this._rendered) return;\n\n    this._rendering = true;\n    this._scheduled = true;\n    requestAnimationFrame(() => {\n      this._scheduled = false;\n      this._rerender();\n      this._rendering = false;\n    });\n  }\n\n  /**\n   * Owner interface implementation\n   *\n   * @hidden\n   */\n  identify(specifier: string, referrer?: string): string {\n    return this.resolver.identify(specifier, referrer);\n  }\n\n  /** @hidden */\n  factoryFor(specifier: string, referrer?: string): Factory<any> {\n    return this._container.factoryFor(this.identify(specifier, referrer));\n  }\n\n  /** @hidden */\n  lookup(specifier: string, referrer?: string): any {\n    return this._container.lookup(this.identify(specifier, referrer));\n  }\n}\n","import { RegistrationOptions } from './registry';\nimport { Factory } from './factory';\n\n// TODO - use symbol\nexport const OWNER = '__owner__';\n\nexport function getOwner(object: object): Owner {\n  return object[OWNER];\n}\n\nexport function setOwner(object: object, owner: Owner): void {\n  object[OWNER] = owner;\n}\n\nexport interface Owner {\n  identify(specifier: string, referrer?: string): string;\n\n  factoryFor(specifier: string, referrer?: string): Factory<any>;\n  \n  lookup(specifier: string, referrer?: string): any;\n}\n","export interface Specifier {\n  rootName?: string;\n  collection?: string;\n  namespace?: string;\n  name?: string;\n  type?: string;\n}\n\nexport function isSpecifierStringAbsolute(specifier: string): boolean {\n  let [type, path] = specifier.split(':');\n  return !!(type && path && path.indexOf('/') === 0 && path.split('/').length > 3);\n}\n\nexport function isSpecifierObjectAbsolute(specifier: Specifier): boolean {\n  return specifier.rootName !== undefined &&\n         specifier.collection !== undefined &&\n         specifier.name !== undefined &&\n         specifier.type !== undefined;\n}\n\nexport function serializeSpecifier(specifier: Specifier): string {\n  let type = specifier.type;\n  let path = serializeSpecifierPath(specifier);\n\n  if (path) {\n    return type + ':' + path;\n  } else {\n    return type;\n  }\n}\n\nexport function serializeSpecifierPath(specifier: Specifier): string {\n  let path = [];\n  if (specifier.rootName) {\n    path.push(specifier.rootName);\n  }\n  if (specifier.collection) {\n    path.push(specifier.collection);\n  }\n  if (specifier.namespace) {\n    path.push(specifier.namespace);\n  }\n  if (specifier.name) {\n    path.push(specifier.name);\n  }\n\n  if (path.length > 0) {\n    let fullPath = path.join('/');\n    if (isSpecifierObjectAbsolute(specifier)) {\n      fullPath = '/' + fullPath;\n    }\n    return fullPath;\n  }\n}\n\nexport function deserializeSpecifier(specifier: string): Specifier {\n  let obj: Specifier = {};\n\n  if (specifier.indexOf(':') > -1) {\n    let [type, path] = specifier.split(':');\n    obj.type = type;\n\n    let pathSegments;\n\n    if (path.indexOf('/') === 0) {\n      pathSegments = path.substr(1).split('/');\n      obj.rootName = pathSegments.shift();\n      obj.collection = pathSegments.shift();\n    } else {\n      pathSegments = path.split('/');\n    }\n\n    if (pathSegments.length > 0) {\n      obj.name = pathSegments.pop();\n\n      if (pathSegments.length > 0) {\n        obj.namespace = pathSegments.join('/');\n      }\n    }\n\n  } else {\n    obj.type = specifier;\n  }\n\n  return obj;\n}\n","export function assert(description: string, test: any) {\n  if (!test) {\n    throw new Error('Assertion Failed: ' + description);\n  }\n}\n","import {\n  Resolver as IResolver,\n  Specifier,\n  isSpecifierStringAbsolute,\n  isSpecifierObjectAbsolute,\n  deserializeSpecifier,\n  serializeSpecifier\n} from '@glimmer/di';\nimport { assert } from './utils/debug';\nimport { ModuleRegistry } from './module-registry';\nimport { ResolverConfiguration } from './resolver-configuration';\n\nexport default class Resolver implements IResolver {\n  public config: ResolverConfiguration;\n  public registry: ModuleRegistry;\n\n  constructor(config: ResolverConfiguration, registry: ModuleRegistry) {\n    this.config = config;\n    this.registry = registry;\n  }\n\n  identify(specifier: string, referrer?: string): string {\n    if (isSpecifierStringAbsolute(specifier)) {\n      return specifier;\n    }\n\n    let s = deserializeSpecifier(specifier);\n    let result: string;\n\n    if (referrer) {\n      let r = deserializeSpecifier(referrer);\n\n      if (isSpecifierObjectAbsolute(r)) {\n        assert('Specifier must not include a rootName, collection, or namespace when combined with an absolute referrer', s.rootName === undefined && s.collection === undefined && s.namespace === undefined);\n\n        // Look locally in the referrer's namespace\n        s.rootName = r.rootName;\n        s.collection = r.collection;\n        if (s.name) {\n          s.namespace = r.namespace ? r.namespace + '/' + r.name : r.name;\n        } else {\n          s.namespace = r.namespace;\n          s.name = r.name;\n        }\n        if (result = this._serializeAndVerify(s)) { return result; }\n\n        // Look for a private collection in the referrer's namespace\n        let privateCollection = this._definitiveCollection(s.type);\n        if (privateCollection) {\n          s.namespace += '/-' + privateCollection;\n          if (result = this._serializeAndVerify(s)) { return result; }\n        }\n\n        // Because local and private resolution has failed, clear all but `name` and `type`\n        // to proceed with top-level resolution\n        s.rootName = s.collection = s.namespace = undefined;\n      } else {\n        assert('Referrer must either be \"absolute\" or include a `type` to determine the associated type', r.type);\n\n        // Look in the definitive collection for the associated type\n        s.collection = this._definitiveCollection(r.type);\n        assert(`'${r.type}' does not have a definitive collection`, s.collection);\n      }\n    }\n\n    // If the collection is unspecified, use the definitive collection for the `type`\n    if (!s.collection) {\n      s.collection = this._definitiveCollection(s.type);\n      assert(`'${s.type}' does not have a definitive collection`, s.collection);\n    }\n\n    if (!s.rootName) {\n      // If the root name is unspecified, try the app's `rootName` first\n      s.rootName = this.config.app.rootName || 'app';\n      if (result = this._serializeAndVerify(s)) { return result; }\n\n      // Then look for an addon with a matching `rootName`\n      let addonDef;\n      if (s.namespace) {\n        addonDef = this.config.addons && this.config.addons[s.namespace];\n        s.rootName = s.namespace;\n        s.namespace = undefined;\n\n      } else {\n        addonDef = this.config.addons && this.config.addons[s.name];\n        s.rootName = s.name;\n        s.name = 'main';\n      }\n    }\n\n    if (result = this._serializeAndVerify(s)) { return result; }\n  }\n\n  retrieve(specifier: string): any {\n    return this.registry.get(specifier);\n  }\n\n  resolve(specifier: string, referrer?: string): any {\n    let id = this.identify(specifier, referrer);\n    if (id) {\n      return this.retrieve(id);\n    }\n  }\n\n  private _definitiveCollection(type: string): string {\n    let typeDef = this.config.types[type];\n    assert(`'${type}' is not a recognized type`, typeDef);\n    return typeDef.definitiveCollection;\n  }\n\n  private _serializeAndVerify(specifier: Specifier): string {\n    let serialized = serializeSpecifier(specifier);\n    if (this.registry.has(serialized)) {\n      return serialized;\n    }\n  }\n}\n","import { DEBUG } from \"@glimmer/env\";\nimport { Tag, DirtyableTag, TagWrapper, combine, CONSTANT_TAG } from \"@glimmer/reference\";\nimport { dict, Dict } from \"@glimmer/util\";\n\n/**\n * @decorator\n *\n * Marks a property as tracked.\n *\n * By default, a component's properties are expected to be static,\n * meaning you are not able to update them and have the template update accordingly.\n * Marking a property as tracked means that when that property changes,\n * a rerender of the component is scheduled so the template is kept up to date.\n *\n * @param dependencies Optional dependents to be tracked.\n */\nexport function tracked(...dependencies: string[]): MethodDecorator;\nexport function tracked(target: any, key: any): any;\nexport function tracked(target: any, key: any, descriptor: PropertyDescriptor): PropertyDescriptor;\nexport function tracked(...dependencies: any[]): any {\n  let [target, key, descriptor] = dependencies;\n\n  if (typeof target === \"string\") {\n    return function(target: any, key: string | Symbol, descriptor: PropertyDescriptor) {\n      return descriptorForTrackedComputedProperty(target, key, descriptor, dependencies);\n    };\n  } else {\n    if (descriptor) {\n      return descriptorForTrackedComputedProperty(target, key, descriptor, []);\n    } else {\n      installTrackedProperty(target, key);\n    }\n  }\n}\n\nfunction descriptorForTrackedComputedProperty(target: any, key: any, descriptor: PropertyDescriptor, dependencies: string[]): PropertyDescriptor {\n  let meta = metaFor(target);\n  meta.trackedProperties[key] = true;\n  meta.trackedPropertyDependencies[key] = dependencies || [];\n\n  return {\n    enumerable: true,\n    configurable: false,\n    get: descriptor.get,\n    set: function() {\n      metaFor(this).dirtyableTagFor(key).inner.dirty();\n      descriptor.set.apply(this, arguments);\n      propertyDidChange();\n    }\n  };\n}\n\nexport type Key = string;\n\n/**\n  Installs a getter/setter for change tracking. The accessor\n  acts just like a normal property, but it triggers the `propertyDidChange`\n  hook when written to.\n\n  Values are saved on the object using a \"shadow key,\" or a symbol based on the\n  tracked property name. Sets write the value to the shadow key, and gets read\n  from it.\n */\nfunction installTrackedProperty(target: any, key: Key) {\n  let value: any;\n  let shadowKey = Symbol(key);\n\n  let meta = metaFor(target);\n  meta.trackedProperties[key] = true;\n\n  if (target[key] !== undefined) {\n    value = target[key];\n  }\n\n  Object.defineProperty(target, key, {\n    configurable: true,\n\n    get() {\n      return this[shadowKey];\n    },\n\n    set(newValue) {\n      metaFor(this).dirtyableTagFor(key).inner.dirty();\n      this[shadowKey] = newValue;\n      propertyDidChange();\n    }\n  });\n}\n\n/**\n * Stores bookkeeping information about tracked properties on the target object\n * and includes helper methods for manipulating and retrieving that data.\n *\n * Computed properties (i.e., tracked getters/setters) deserve some explanation.\n * A computed property is invalidated when either it is set, or one of its\n * dependencies is invalidated. Therefore, we store two tags for each computed\n * property:\n *\n * 1. The dirtyable tag that we invalidate when the setter is invoked.\n * 2. A union tag (tag combinator) of the dirtyable tag and all of the computed\n *    property's dependencies' tags, used by Glimmer to determine \"does this\n *    computed property need to be recomputed?\"\n */\nexport default class Meta {\n  tags: Dict<Tag>;\n  computedPropertyTags: Dict<TagWrapper<DirtyableTag>>;\n  trackedProperties: Dict<boolean>;\n  trackedPropertyDependencies: Dict<string[]>;\n\n  constructor(parent: Meta) {\n    this.tags = dict<Tag>();\n    this.computedPropertyTags = dict<TagWrapper<DirtyableTag>>();\n    this.trackedProperties = parent ? Object.create(parent.trackedProperties) : dict<boolean>();\n    this.trackedPropertyDependencies = parent ? Object.create(parent.trackedPropertyDependencies) : dict<string[]>();\n  }\n\n  /**\n   * The tag representing whether the given property should be recomputed. Used\n   * by e.g. Glimmer VM to detect when a property should be re-rendered. Think\n   * of this as the \"public-facing\" tag.\n   *\n   * For static tracked properties, this is a single DirtyableTag. For computed\n   * properties, it is a combinator of the property's DirtyableTag as well as\n   * all of its dependencies' tags.\n   */\n  tagFor(key: Key): Tag {\n    let tag = this.tags[key];\n    if (tag) { return tag; }\n\n    let dependencies;\n    if (dependencies = this.trackedPropertyDependencies[key]) {\n      return this.tags[key] = combinatorForComputedProperties(this, key, dependencies);\n    }\n\n    return this.tags[key] = DirtyableTag.create();\n  }\n\n  /**\n   * The tag used internally to invalidate when a tracked property is set. For\n   * static properties, this is the same DirtyableTag returned from `tagFor`.\n   * For computed properties, it is the DirtyableTag used as one of the tags in\n   * the tag combinator of the CP and its dependencies.\n  */\n  dirtyableTagFor(key: Key): TagWrapper<DirtyableTag> {\n    let dependencies = this.trackedPropertyDependencies[key];\n    let tag;\n\n    if (dependencies) {\n      // The key is for a computed property.\n      tag = this.computedPropertyTags[key];\n      if (tag) { return tag; }\n      return this.computedPropertyTags[key] = DirtyableTag.create();\n    } else {\n      // The key is for a static property.\n      tag = this.tags[key];\n      if (tag) { return tag as TagWrapper<DirtyableTag>; }\n      return this.tags[key] = DirtyableTag.create();\n    }\n  }\n}\n\nfunction combinatorForComputedProperties(meta: Meta, key: Key, dependencies: Key[] | void): Tag {\n  // Start off with the tag for the CP's own dirty state.\n  let tags: Tag[] = [meta.dirtyableTagFor(key)];\n\n  // Next, add in all of the tags for its dependencies.\n  if (dependencies && dependencies.length) {\n    for (let i = 0; i < dependencies.length; i++) {\n      tags.push(meta.tagFor(dependencies[i]));\n    }\n  }\n\n  // Return a combinator across the CP's tags and its dependencies' tags.\n  return combine(tags);\n}\n\nexport interface Interceptors {\n  [key: string]: boolean;\n}\n\nlet META = Symbol(\"ember-object\");\n\nexport function metaFor(obj: any): Meta {\n  let meta = obj[META];\n  if (meta && hasOwnProperty(obj, META)) {\n    return meta;\n  }\n\n  return obj[META] = new Meta(meta);\n}\n\nlet hOP = Object.prototype.hasOwnProperty;\nfunction hasOwnProperty(obj: any, key: symbol) {\n  return hOP.call(obj, key);\n}\n\nlet propertyDidChange = function() {};\n\nexport function setPropertyDidChange(cb: () => void) {\n  propertyDidChange = cb;\n}\n\nexport function hasTag(obj: any, key: string): boolean {\n  let meta = obj[META] as Meta;\n\n  if (!obj[META]) { return false; }\n  if (!meta.trackedProperties[key]) { return false; }\n\n  return true;\n}\n\nexport class UntrackedPropertyError extends Error {\n  static for(obj: any, key: string): UntrackedPropertyError {\n    return new UntrackedPropertyError(obj, key, `The property '${key}' on ${obj} was changed after being rendered. If you want to change a property used in a template after the component has rendered, mark the property as a tracked property with the @tracked decorator.`);\n  }\n\n  constructor(public target: any, public key: string, message: string) {\n    super(message);\n  }\n}\n\n/**\n * Function that can be used in development mode to generate more meaningful\n * error messages.\n */\nexport interface UntrackedPropertyErrorThrower {\n  (obj: any, key: string): void;\n}\n\nfunction defaultErrorThrower(obj: any, key: string): UntrackedPropertyError {\n  throw UntrackedPropertyError.for(obj, key);\n}\n\nexport function tagForProperty(obj: any, key: string, throwError: UntrackedPropertyErrorThrower = defaultErrorThrower): Tag {\n  if (typeof obj === \"object\" && obj) {\n    if (DEBUG && !hasTag(obj, key)) {\n      installDevModeErrorInterceptor(obj, key, throwError);\n    }\n\n    let meta = metaFor(obj);\n    return meta.tagFor(key);\n  } else {\n    return CONSTANT_TAG;\n  }\n}\n\n/**\n * In development mode only, we install an ad hoc setter on properties where a\n * tag is requested (i.e., it was used in a template) without being tracked. In\n * cases where the property is set, we raise an error.\n */\nfunction installDevModeErrorInterceptor(obj: object, key: string, throwError: UntrackedPropertyErrorThrower) {\n  let target = obj;\n  let descriptor: PropertyDescriptor;\n\n  // Find the descriptor for the current property. We may need to walk the\n  // prototype chain to do so. If the property is undefined, we may never get a\n  // descriptor here.\n  let hasOwnDescriptor = true;\n  while (target) {\n    descriptor = Object.getOwnPropertyDescriptor(target, key);\n    if (descriptor) { break; }\n    hasOwnDescriptor = false;\n    target = Object.getPrototypeOf(target);\n  }\n\n  // If possible, define a property descriptor that passes through the current\n  // value on reads but throws an exception on writes.\n  if (descriptor) {\n    if (descriptor.configurable || !hasOwnDescriptor) {\n      Object.defineProperty(obj, key, {\n        configurable: descriptor.configurable,\n        enumerable: descriptor.enumerable,\n\n        get() {\n          if (descriptor.get) {\n            return descriptor.get.call(this);\n          } else {\n            return descriptor.value;\n          }\n        },\n\n        set() {\n          throwError(this, key);\n        }\n      });\n    }\n  } else {\n    Object.defineProperty(obj, key, {\n      set() {\n        throwError(this, key);\n      }\n    });\n  }\n}\n","import { Simple } from \"@glimmer/runtime\";\nimport { metaFor } from \"./tracked\";\n\n/**\n * The `Component` class defines an encapsulated UI element that is rendered to\n * the DOM. A component is made up of a template and, optionally, this component\n * object.\n *\n * ## Defining a Component\n *\n * To define a component, subclass `Component` and add your own properties,\n * methods and lifecycle hooks:\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n * }\n * ```\n *\n * ## Lifecycle Hooks\n *\n * Lifecycle hooks allow you to respond to changes to a component, such as when\n * it gets created, rendered, updated or destroyed. To add a lifecycle hook to a\n * component, implement the hook as a method on your component subclass.\n *\n * For example, to be notified when Glimmer has rendered your component so you\n * can attach a legacy jQuery plugin, implement the `didInsertElement()` method:\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n *   didInsertElement() {\n *     $(this.element).pickadate();\n *   }\n * }\n * ```\n *\n * ## Data for Templates\n *\n * `Component`s have two different kinds of data, or state, that can be\n * displayed in templates:\n *\n * 1. Arguments\n * 2. Properties\n *\n * Arguments are data that is passed in to a component from its parent\n * component. For example, if I have a `user-greeting` component, I can pass it\n * a name and greeting to use:\n *\n * ```hbs\n * <user-greeting @name=\"Ricardo\" @greeting=\"Olá\">\n * ```\n *\n * Inside my `user-greeting` template, I can access the `@name` and `@greeting`\n * arguments that I've been given:\n *\n * ```hbs\n * {{@greeting}}, {{@name}}!\n * ```\n *\n * Arguments are also available inside my component:\n *\n * ```ts\n * console.log(this.args.greeting); // prints \"Olá\"\n * ```\n *\n * Properties, on the other hand, are internal to the component and declared in\n * the class. You can use properties to store data that you want to show in the\n * template, or pass to another component as an argument.\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n *   user = {\n *     name: 'Robbie'\n *   }\n * }\n * ```\n *\n * In the above example, we've defined a component with a `user` property that\n * contains an object with its own `name` property.\n *\n * We can render that property in our template:\n *\n * ```hbs\n * Hello, {{user.name}}!\n * ```\n *\n * We can also take that property and pass it as an argument to the\n * `user-greeting` component we defined above:\n *\n * ```hbs\n * <user-greeting @greeting=\"Hello\" @name={{user.name}} />\n * ```\n *\n * ## Arguments vs. Properties\n *\n * Remember, arguments are data that was given to your component by its parent\n * component, and properties are data your component has defined for itself.\n *\n * You can tell the difference between arguments and properties in templates\n * because arguments always start with an `@` sign (think \"A is for arguments\"):\n *\n * ```hbs\n * {{@firstName}}\n * ```\n *\n * We know that `@firstName` came from the parent component, not the current\n * component, because it starts with `@` and is therefore an argument.\n *\n * On the other hand, if we see:\n *\n * ```hbs\n * {{name}}\n * ```\n *\n * We know that `name` is a property on the component. If we want to know where\n * the data is coming from, we can go look at our component class to find out.\n *\n * Inside the component itself, arguments always show up inside the component's\n * `args` property. For example, if `{{@firstName}}` is `Tom` in the template,\n * inside the component `this.args.firstName` would also be `Tom`.\n */\nclass Component {\n  /**\n   * The element corresponding to the top-level element of the component's template.\n   * You should not try to access this property until after the component's `didInsertElement()`\n   * lifecycle hook is called.\n   */\n  element: Simple.Element = null;\n\n  /**\n   * Development-mode only name of the component, useful for debugging.\n   */\n  debugName: string = null;\n\n  /**\n   * Named arguments passed to the component from its parent component.\n   * They can be accessed in JavaScript via `this.args.argumentName` and in the template via `@argumentName`.\n   *\n   * Say you have the following component, which will have two `args`, `firstName` and `lastName`:\n   *\n   * ```hbs\n   * <my-component @firstName=\"Arthur\" @lastName=\"Dent\" />\n   * ```\n   *\n   * If you needed to calculate `fullName` by combining both of them, you would do:\n   *\n   * ```ts\n   * didInsertElement() {\n   *   console.log(`Hi, my full name is ${this.args.firstName} ${this.args.lastName}`);\n   * }\n   * ```\n   *\n   * While in the template you could do:\n   *\n   * ```hbs\n   * <p>Welcome, {{@firstName}} {{@lastName}}!</p>\n   * ```\n   *\n   */\n  get args() {\n    return this.__args__;\n  }\n\n  set args(args) {\n    this.__args__ = args;\n    metaFor(this).dirtyableTagFor(\"args\").inner.dirty();\n  }\n\n  /** @private\n   * Slot on the component to save Arguments object passed to the `args` setter.\n   */\n  private __args__: any = null;\n\n  static create(injections: any) {\n    return new this(injections);\n  }\n\n  /**\n   * Constructs a new component and assigns itself the passed properties. You\n   * should not construct new components yourself. Instead, Glimmer will\n   * instantiate new components automatically as it renders.\n   *\n   * @param options\n   */\n  constructor(options: object) {\n    Object.assign(this, options);\n  }\n\n  /**\n   * Called when the component has been inserted into the DOM.\n   * Override this function to do any set up that requires an element in the document body.\n   */\n  didInsertElement() { }\n\n  /**\n   * Called when the component has updated and rerendered itself.\n   * Called only during a rerender, not during an initial render.\n   */\n  didUpdate() { }\n\n  /**\n   * Called before the component has been removed from the DOM.\n   */\n  willDestroy() { }\n\n  destroy() {\n    this.willDestroy();\n  }\n\n  toString() {\n    return `${this.debugName} component`;\n  }\n}\n\nexport default Component;\n\nexport interface ComponentFactory {\n  create(injections: object): Component;\n}\n","import {\n  dict\n} from \"@glimmer/util\";\nimport {\n  PathReference,\n  CONSTANT_TAG,\n  ConstReference,\n  DirtyableTag,\n  UpdatableTag,\n  combine,\n  isConst,\n  Tag,\n  TagWrapper\n} from \"@glimmer/reference\";\nimport {\n  ConditionalReference as GlimmerConditionalReference,\n  PrimitiveReference\n} from \"@glimmer/runtime\";\nimport { tagForProperty, UntrackedPropertyError } from \"./tracked\";\n\n/**\n * The base PathReference.\n */\nexport abstract class ComponentPathReference<T> implements PathReference<T> {\n  abstract value(): T;\n  abstract get tag(): Tag;\n\n  get(key: string): PathReference<any> {\n    return PropertyReference.create(this, key);\n  }\n}\n\nexport abstract class CachedReference<T> extends ComponentPathReference<T> {\n  private _lastRevision: number | null = null;\n  private _lastValue: any = null;\n\n  abstract compute(): T;\n\n  value() {\n    let { tag, _lastRevision, _lastValue } = this;\n\n    if (!_lastRevision || !tag.validate(_lastRevision)) {\n      _lastValue = this._lastValue = this.compute();\n      this._lastRevision = tag.value();\n    }\n\n    return _lastValue;\n  }\n}\n\nexport class RootReference extends ConstReference<object> {\n  private children = dict<RootPropertyReference>();\n\n  get(propertyKey: string) {\n    let ref = this.children[propertyKey];\n\n    if (!ref) {\n      ref = this.children[propertyKey] = new RootPropertyReference(this.inner, propertyKey);\n    }\n\n    return ref;\n  }\n}\n\nexport abstract class PropertyReference extends CachedReference<any> {\n  static create(parentReference: PathReference<any>, propertyKey: string) {\n    if (isConst(parentReference)) {\n      return new RootPropertyReference(parentReference.value(), propertyKey);\n    } else {\n      return new NestedPropertyReference(parentReference, propertyKey);\n    }\n  }\n\n  get(key: string): PathReference<any>  {\n    return new NestedPropertyReference(this, key);\n  }\n}\n\nfunction buildError(obj: any, key: string) {\n  let message = `The '${key}' property on the ${obj} was changed after it had been rendered. Properties that change after being rendered must be tracked. Use the @tracked decorator to mark this as a tracked property.`;\n  throw new UntrackedPropertyError(obj, key, message);\n}\n\nexport class RootPropertyReference extends PropertyReference {\n  tag: Tag;\n  private _parentValue: object;\n  private _propertyKey: string;\n\n  constructor(parentValue: object, propertyKey: string) {\n    super();\n\n    this._parentValue = parentValue;\n    this._propertyKey = propertyKey;\n    this.tag = tagForProperty(parentValue, propertyKey, buildError);\n  }\n\n  compute(): any {\n    return (this._parentValue as any)[this._propertyKey];\n  }\n}\n\nexport class NestedPropertyReference extends PropertyReference {\n  public tag: Tag;\n  private _parentReference: PathReference<any>;\n  private _parentObjectTag: TagWrapper<UpdatableTag>;\n  private _propertyKey: string;\n\n  constructor(parentReference: PathReference<any>, propertyKey: string) {\n    super();\n\n    let parentReferenceTag = parentReference.tag;\n    let parentObjectTag = UpdatableTag.create(CONSTANT_TAG);\n\n    this._parentReference = parentReference;\n    this._parentObjectTag = parentObjectTag;\n    this._propertyKey = propertyKey;\n\n    this.tag = combine([parentReferenceTag, parentObjectTag]);\n  }\n\n  compute() {\n    let { _parentReference, _parentObjectTag, _propertyKey } = this;\n\n    let parentValue = _parentReference.value();\n\n    _parentObjectTag.inner.update(tagForProperty(parentValue, _propertyKey));\n\n    if (typeof parentValue === \"string\" && _propertyKey === \"length\") {\n      return parentValue.length;\n    }\n\n    if (typeof parentValue === \"object\" && parentValue) {\n      return parentValue[_propertyKey];\n    } else {\n      return undefined;\n    }\n  }\n}\n\nexport class UpdatableReference<T> extends ComponentPathReference<T> {\n  public tag: TagWrapper<DirtyableTag>;\n  private _value: T;\n\n  constructor(value: T) {\n    super();\n\n    this.tag = DirtyableTag.create();\n    this._value = value;\n  }\n\n  value() {\n    return this._value;\n  }\n\n  update(value: T) {\n    let { _value } = this;\n\n    if (value !== _value) {\n      this.tag.inner.dirty();\n      this._value = value;\n    }\n  }\n}\n\nexport class ConditionalReference extends GlimmerConditionalReference {\n  static create(reference: PathReference<any>) {\n    if (isConst(reference)) {\n      let value = reference.value();\n      return PrimitiveReference.create(value);\n    }\n\n    return new ConditionalReference(reference);\n  }\n}\n","import {\n  getOwner,\n  setOwner,\n  Factory,\n  Owner\n} from \"@glimmer/di\";\nimport {\n  Bounds,\n  ComponentManager as GlimmerComponentManager,\n  DynamicScope,\n  Environment,\n  Simple,\n  CompiledDynamicProgram,\n  Arguments,\n  Template,\n  CapturedArguments,\n  compileLayout,\n  ComponentLayoutBuilder\n} from \"@glimmer/runtime\";\nimport {\n  TemplateMeta\n} from \"@glimmer/wire-format\";\nimport Component from \"./component\";\nimport ComponentDefinition from \"./component-definition\";\nimport { RootReference } from \"./references\";\nimport { Dict, Destroyable } from \"@glimmer/util\";\n\nexport interface ConstructorOptions {\n  env: Environment;\n}\n\nexport class ComponentStateBucket {\n  public name: string;\n  public component: Component;\n  private args: CapturedArguments;\n\n  constructor(definition: ComponentDefinition, args: CapturedArguments, owner: Owner) {\n    let componentFactory = definition.componentFactory;\n    let name = definition.name;\n\n    this.args = args;\n\n    let injections = {\n      debugName: name,\n      args: this.namedArgsSnapshot()\n    };\n\n    setOwner(injections, owner);\n    this.component = componentFactory.create(injections);\n  }\n\n  namedArgsSnapshot(): Readonly<Dict<object | void>> {\n    return Object.freeze(this.args.named.value());\n  }\n}\n\nclass LayoutCompiler {\n  name: string;\n  template: Template<TemplateMeta>;\n\n  constructor(name: string, template: Template<TemplateMeta>) {\n    this.template = template;\n    this.name = name;\n  }\n\n  compile(builder: ComponentLayoutBuilder): void {\n    builder.fromLayout(this.name, this.template);\n  }\n}\n\nexport default class ComponentManager implements GlimmerComponentManager<ComponentStateBucket> {\n  private env: Environment;\n\n  static create(options: ConstructorOptions): ComponentManager {\n    return new ComponentManager(options);\n  }\n\n  constructor(options: ConstructorOptions) {\n    this.env = options.env;\n  }\n\n  prepareArgs(definition: ComponentDefinition, args: Arguments): null {\n    return null;\n  }\n\n  create(environment: Environment, definition: ComponentDefinition, volatileArgs: Arguments): ComponentStateBucket | null {\n    let componentFactory = definition.componentFactory;\n    if (!componentFactory) { return null; }\n\n    let owner = getOwner(this.env);\n    return new ComponentStateBucket(definition, volatileArgs.capture(), owner);\n  }\n\n  createComponentDefinition(name: string, template: Template<any>, componentFactory?: Factory<Component>): ComponentDefinition {\n    return new ComponentDefinition(name, this, template, componentFactory);\n  }\n\n  layoutFor(definition: ComponentDefinition, bucket: ComponentStateBucket, env: Environment): CompiledDynamicProgram {\n    let template = definition.template;\n\n    return compileLayout(new LayoutCompiler(definition.name, template), this.env);\n  }\n\n  getSelf(bucket: ComponentStateBucket) {\n    if (!bucket) { return null; }\n    return new RootReference(bucket.component);\n  }\n\n  didCreateElement(bucket: ComponentStateBucket, element: Simple.Element) {\n    if (!bucket) { return; }\n    bucket.component.element = element;\n  }\n\n  didRenderLayout(bucket: ComponentStateBucket, bounds: Bounds) {\n  }\n\n  didCreate(bucket: ComponentStateBucket) {\n    bucket && bucket.component.didInsertElement();\n  }\n\n  getTag(): null {\n    return null;\n  }\n\n  update(bucket: ComponentStateBucket, scope: DynamicScope) {\n    if (!bucket) { return; }\n\n    // TODO: This should be moved to `didUpdate`, but there's currently a\n    // Glimmer bug that causes it not to be called if the layout doesn't update.\n    let { component } = bucket;\n\n    component.args = bucket.namedArgsSnapshot();\n    component.didUpdate();\n  }\n\n  didUpdateLayout() {}\n\n  didUpdate(bucket: ComponentStateBucket) { }\n\n  getDestructor(bucket: ComponentStateBucket): Destroyable {\n    if (!bucket) { return; }\n\n    return bucket.component;\n  }\n}\n","import Component, { tracked } from '@glimmer/component';\nlet $ = window['$'];\n\nexport default class EndpointRoute extends Component {\n  @tracked fetchParams = {};\n  @tracked selectedPayloadName: string;\n  @tracked idParam: string;\n\n  constructor(attributes) {\n    super(attributes);\n    this.args.context.endpointComponent = this;\n  }\n\n  updateParams(name, e) {\n    this.fetchParams[name] = e.target.value;\n  }\n\n  updateIdParam(e) {\n    this.idParam = e.target.value;\n  }\n\n  changeCurrentPayload(e) {\n    this.selectedPayloadName = e.target.value;\n  }\n\n  @tracked('selectedPayloadName')\n  get currentPayload() {\n    if (this.selectedPayloadName) {\n      return this.payloads.find((p) => {\n        return p.name === this.selectedPayloadName;\n      });\n    } else {\n      return this.payloads[0];\n    }\n  }\n\n  switchTab(tabId, e) {\n    e.preventDefault();\n    $('.nav-tabs li a').removeClass('active');\n    $('.tab-pane').removeClass('active');\n    $(e.target).addClass('active');\n    $(`#${tabId}`).addClass('active');\n  }\n\n  presentFetchParams() {\n    let newParams = {};\n    Object.keys(this.fetchParams).forEach((key) => {\n      if (this.fetchParams[key]) {\n        newParams[key] = this.fetchParams[key];\n      }\n    });\n    return newParams;\n  }\n\n  pathParams() {\n    if (this.idParam && this.idParam != '') {\n      return `/${this.idParam}`;\n    } else {\n      return '';\n    }\n  }\n\n  @tracked('args')\n  get isReadOperation() {\n    return this.args.params.id.indexOf('-get') > -1;\n  }\n\n  @tracked('args')\n  get isCreateAction() {\n    return this.args.params.id.indexOf('-post') > -1;\n  }\n\n  @tracked('args')\n  get isUpdateAction() {\n    return this.args.params.id.indexOf('-put') > -1;\n  }\n\n  @tracked('args')\n  get fetchMethod() {\n    if (this.isReadOperation) {\n      return 'GET';\n    } else if(this.isCreateAction) {\n      return 'POST';\n    } else if(this.isUpdateAction) {\n      return 'PUT';\n    } else {\n      return 'DELETE';\n    }\n  }\n\n  fetch() {\n    let url = window['CONFIG']['basePath'];\n    url += this.model.path.split('/{')[0];\n    url += this.pathParams();\n\n    if (this.isReadOperation) {\n      this.doRead(url).then((responseJSON) => {\n        this.onApiResponse(responseJSON);\n      });\n    } else {\n      this.doWrite(url).then((responseJSON) => {\n        this.onApiResponse(responseJSON);\n      });\n    }\n  }\n\n  onApiResponse(responseJSON) {\n    let html = window['$'](`<pre class=\"highlight\"><code class=\"json hljs\">${responseJSON}</code></pre>`);\n    window['$']('#api-response').html(html);\n\n    window['$']('pre.highlight code').each(function(i, block) {\n      window['hljs'].highlightBlock(block);\n    });\n  }\n\n  doRead(url) {\n    let paramString = window['$'].param(this.presentFetchParams());\n    url = `${url}?${paramString}`\n    return fetch(url).then((response) => {\n      return response.json().then((json) => {\n        return JSON.stringify(json, null, 2);\n      });\n    });\n  }\n\n  doWrite(url) {\n    let opts = {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n\n    if (this.fetchParams['payload']) {\n      let json = JSON.parse(this.fetchParams['payload']);\n      json = JSON.stringify(json);\n      opts['body'] = json;\n    }\n\n    opts['method'] = this.fetchMethod;\n    return fetch(url, opts).then((response) => {\n      return response.json().then((json) => {\n        return JSON.stringify(json, null, 2);\n      });\n    });\n  }\n\n  @tracked('model')\n  get payloads() {\n    let arr = [];\n    this.model.config.tags.forEach((t) => {\n      if (t.startsWith('payload')) {\n        let payloadName = t.split('payload-')[1];\n        let payload = this.args.swagger.definitions[payloadName];\n        payload = { name: payloadName, ...payload };\n        arr.push(payload);\n      }\n    });\n    return arr;\n  }\n\n  @tracked('args')\n  get model() {\n    return this.args.swagger.endpoints.find((e) => {\n      return e.id === this.args.params.id;\n    });\n  }\n};\n","export default {\"id\":\"YTpDYBPG\",\"block\":\"{\\\"symbols\\\":[\\\"prop\\\",\\\"payload\\\",\\\"param\\\",\\\"@isReady\\\"],\\\"statements\\\":[[6,\\\"div\\\"],[9,\\\"class\\\",\\\"col-md-4\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"endpoint\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[19,4,[]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"h2\\\"],[7],[1,[20,[\\\"model\\\",\\\"label\\\"]],false],[8],[0,\\\"\\\\n\\\\n      \\\"],[6,\\\"p\\\"],[7],[1,[20,[\\\"model\\\",\\\"config\\\",\\\"description\\\"]],true],[8],[0,\\\"\\\\n\\\\n      \\\"],[6,\\\"button\\\"],[10,\\\"onclick\\\",[25,\\\"action\\\",[[19,0,[\\\"fetch\\\"]]],null],null],[9,\\\"class\\\",\\\"btn btn-primary\\\"],[9,\\\"type\\\",\\\"button\\\"],[7],[0,\\\"Try It Out\\\"],[8],[0,\\\"\\\\n\\\\n      \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"parameters\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"h4\\\"],[7],[0,\\\"Parameters\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[19,0,[\\\"model\\\",\\\"config\\\",\\\"parameters\\\"]]],[[\\\"key\\\"],[\\\"@index\\\"]],{\\\"statements\\\":[[0,\\\"          \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"parameter\\\"],[7],[0,\\\"\\\\n            \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"row\\\"],[7],[0,\\\"\\\\n              \\\"],[6,\\\"label\\\"],[7],[1,[19,3,[\\\"name\\\"]],false],[8],[0,\\\"\\\\n            \\\"],[8],[0,\\\"\\\\n\\\\n            \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"row\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[25,\\\"eq\\\",[[19,3,[\\\"name\\\"]],\\\"id\\\"],null]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[6,\\\"input\\\"],[10,\\\"oninput\\\",[25,\\\"action\\\",[[19,0,[\\\"updateIdParam\\\"]]],null],null],[10,\\\"value\\\",[18,\\\"idParam\\\"],null],[9,\\\"class\\\",\\\"col-md-6\\\"],[9,\\\"type\\\",\\\"text\\\"],[7],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[25,\\\"eq\\\",[[19,3,[\\\"name\\\"]],\\\"payload\\\"],null]],null,{\\\"statements\\\":[[0,\\\"                  \\\"],[6,\\\"textarea\\\"],[10,\\\"oninput\\\",[25,\\\"action\\\",[[19,0,[\\\"updateParams\\\"]],[19,3,[\\\"name\\\"]]],null],null],[9,\\\"class\\\",\\\"col-md-6\\\"],[9,\\\"type\\\",\\\"text\\\"],[7],[8],[0,\\\"\\\\n                  \\\"],[6,\\\"small\\\"],[7],[0,\\\"Paste JSON here, or - better yet - use \\\"],[6,\\\"a\\\"],[9,\\\"target\\\",\\\"_blank\\\"],[9,\\\"href\\\",\\\"https://www.getpostman.com\\\"],[7],[0,\\\"Postman\\\"],[8],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                  \\\"],[6,\\\"input\\\"],[10,\\\"oninput\\\",[25,\\\"action\\\",[[19,0,[\\\"updateParams\\\"]],[19,3,[\\\"name\\\"]]],null],null],[9,\\\"class\\\",\\\"col-md-6\\\"],[9,\\\"type\\\",\\\"text\\\"],[7],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[8],[0,\\\"\\\\n\\\\n            \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"row\\\"],[7],[0,\\\"\\\\n              \\\"],[6,\\\"small\\\"],[7],[1,[19,3,[\\\"description\\\"]],true],[8],[0,\\\"\\\\n            \\\"],[8],[0,\\\"\\\\n          \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"      \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"col-md-5\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"right-sidebar language-json highlighter-rouge\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"ul\\\"],[9,\\\"class\\\",\\\"nav nav-tabs\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"li\\\"],[7],[6,\\\"a\\\"],[10,\\\"onclick\\\",[25,\\\"action\\\",[[19,0,[\\\"switchTab\\\"]],\\\"api-response\\\"],null],null],[9,\\\"href\\\",\\\"#\\\"],[7],[0,\\\"API Response\\\"],[8],[8],[0,\\\"\\\\n      \\\"],[6,\\\"li\\\"],[7],[6,\\\"a\\\"],[10,\\\"onclick\\\",[25,\\\"action\\\",[[19,0,[\\\"switchTab\\\"]],\\\"schemas\\\"],null],null],[9,\\\"href\\\",\\\"#\\\"],[7],[0,\\\"Schemas\\\"],[8],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[19,4,[]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"tab-content\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"tab-pane\\\"],[9,\\\"class\\\",\\\"active\\\"],[9,\\\"id\\\",\\\"api-response\\\"],[7],[0,\\\"\\\\n          \\\"],[6,\\\"pre\\\"],[9,\\\"class\\\",\\\"highlight\\\"],[7],[0,\\\"\\\\n            \\\"],[6,\\\"code\\\"],[9,\\\"class\\\",\\\"json hljs\\\"],[7],[0,\\\"\\\\n            Click \\\\\\\"Try it Out\\\\\\\" to view API response here\\\\n            \\\"],[8],[0,\\\"\\\\n          \\\"],[8],[0,\\\"\\\\n        \\\"],[8],[0,\\\"\\\\n\\\\n        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"tab-pane\\\"],[9,\\\"id\\\",\\\"schemas\\\"],[7],[0,\\\"\\\\n          \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"row\\\"],[7],[0,\\\"\\\\n            \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"form-group\\\"],[7],[0,\\\"\\\\n              \\\"],[6,\\\"select\\\"],[9,\\\"class\\\",\\\"payload-select form-control\\\"],[10,\\\"onchange\\\",[25,\\\"action\\\",[[19,0,[\\\"changeCurrentPayload\\\"]]],null],null],[7],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[19,0,[\\\"payloads\\\"]]],[[\\\"key\\\"],[\\\"@index\\\"]],{\\\"statements\\\":[[0,\\\"                  \\\"],[6,\\\"option\\\"],[10,\\\"selected\\\",[25,\\\"eq\\\",[[19,0,[\\\"currentPayload\\\",\\\"name\\\"]],[19,2,[\\\"name\\\"]]],null],null],[10,\\\"value\\\",[19,2,[\\\"name\\\"]],null],[7],[1,[19,2,[\\\"name\\\"]],false],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"              \\\"],[8],[0,\\\"\\\\n            \\\"],[8],[0,\\\"\\\\n          \\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[19,0,[\\\"currentPayload\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[6,\\\"h3\\\"],[7],[1,[20,[\\\"currentPayload\\\",\\\"name\\\"]],false],[8],[0,\\\"\\\\n            \\\"],[6,\\\"ul\\\"],[9,\\\"class\\\",\\\"attributes\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[25,\\\"props\\\",[[19,0,[\\\"currentPayload\\\",\\\"properties\\\"]]],null]],[[\\\"key\\\"],[\\\"@index\\\"]],{\\\"statements\\\":[[0,\\\"                \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"attribute\\\"],[7],[0,\\\"\\\\n                  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"row\\\"],[7],[0,\\\"\\\\n                    \\\"],[6,\\\"label\\\"],[7],[0,\\\"\\\\n                      \\\"],[1,[19,1,[\\\"key\\\"]],false],[0,\\\"\\\\n                      \\\"],[5,\\\"type-check\\\",[],[[\\\"@type\\\"],[[19,1,[\\\"value\\\",\\\"type\\\"]]]],{\\\"statements\\\":[],\\\"parameters\\\":[]}],[0,\\\"\\\\n                    \\\"],[8],[0,\\\"\\\\n                  \\\"],[8],[0,\\\"\\\\n                  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"row\\\"],[7],[0,\\\"\\\\n                    \\\"],[6,\\\"small\\\"],[7],[1,[19,1,[\\\"value\\\",\\\"description\\\"]],false],[8],[0,\\\"\\\\n                  \\\"],[8],[0,\\\"\\\\n                \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/jsonapi-swagger-ui/components/endpoint-route\"}};","export default function eq([left, right]) {\n  return left === right;\n};\n","export default function _if([test, truthy, falsy]) {\n  return test ? truthy : falsy;\n};\n","import Component from '@glimmer/component';\n\nexport default class IndexRoute extends Component {\n};\n","export default {\"id\":\"x84cIsRK\",\"block\":\"{\\\"symbols\\\":[\\\"@swagger\\\"],\\\"statements\\\":[[6,\\\"h1\\\"],[7],[0,\\\"Welcome to the \\\"],[1,[19,1,[\\\"info\\\",\\\"title\\\"]],false],[0,\\\" API!\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"col-md-9\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"introduction\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n      This API adheres to the open-source \\\"],[6,\\\"a\\\"],[9,\\\"target\\\",\\\"_blank\\\"],[9,\\\"href\\\",\\\"http://jsonapi.org\\\"],[7],[0,\\\"JSONAPI Specification\\\"],[8],[0,\\\". If you're unfamiliar with JSONAPI, start there!\\\\n    \\\"],[8],[0,\\\"\\\\n\\\\n    \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n      Because the specification is verbose, we've omitted the cruft. Instead, Resource Schemas detail the relevant attributes, types, and descriptions.\\\\n      At the top of each endpoint's documentation, you'll see the schemas relevant to that endpoint (ie, possible sideloads and sideposts).\\\\n    \\\"],[8],[0,\\\"\\\\n\\\\n    \\\"],[6,\\\"p\\\"],[7],[0,\\\"\\\\n      If you need a token to access this API, use something like \\\"],[6,\\\"a\\\"],[9,\\\"target\\\",\\\"_blank\\\"],[9,\\\"href\\\",\\\"http://www.requestly.in\\\"],[7],[0,\\\"Requestly\\\"],[8],[0,\\\" to modify your headers each request. This way you can access endpoints directly through your browser.\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"description\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"h2\\\"],[7],[0,\\\"API Details\\\"],[8],[0,\\\"\\\\n    \\\"],[1,[19,1,[\\\"info\\\",\\\"description\\\"]],true],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/jsonapi-swagger-ui/components/index-route\"}};","var createObject = Object.create;\nfunction createMap() {\n    var map = createObject(null);\n    map[\"__\"] = undefined;\n    delete map[\"__\"];\n    return map;\n}\n\nvar Target = function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n};\nTarget.prototype.to = function to (target, callback) {\n    var delegate = this.delegate;\n    if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n    }\n    this.matcher.add(this.path, target);\n    if (callback) {\n        if (callback.length === 0) {\n            throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n    }\n};\nvar Matcher = function Matcher(target) {\n    this.routes = createMap();\n    this.children = createMap();\n    this.target = target;\n};\nMatcher.prototype.add = function add (path, target) {\n    this.routes[path] = target;\n};\nMatcher.prototype.addChild = function addChild (path, target, callback, delegate) {\n    var matcher = new Matcher(target);\n    this.children[path] = matcher;\n    var match = generateMatch(path, matcher, delegate);\n    if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n    }\n    callback(match);\n};\nfunction generateMatch(startingPath, matcher, delegate) {\n    function match(path, callback) {\n        var fullPath = startingPath + path;\n        if (callback) {\n            callback(generateMatch(fullPath, matcher, delegate));\n        }\n        else {\n            return new Target(fullPath, matcher, delegate);\n        }\n    }\n    \n    return match;\n}\nfunction addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0; i < routeArray.length; i++) {\n        len += routeArray[i].path.length;\n    }\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n}\nfunction eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n    var paths = Object.keys(routes);\n    for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n        var nested = matcher.children[path];\n        if (nested) {\n            eachRoute(routeArray, nested, callback, binding);\n        }\n        else {\n            callback.call(binding, routeArray);\n        }\n    }\n}\nvar map = function (callback, addRouteCallback) {\n    var matcher = new Matcher();\n    callback(generateMatch(\"\", matcher, this.delegate));\n    eachRoute([], matcher, function (routes) {\n        if (addRouteCallback) {\n            addRouteCallback(this, routes);\n        }\n        else {\n            this.add(routes);\n        }\n    }, this);\n};\n\n// Normalizes percent-encoded values in `path` to upper-case and decodes percent-encoded\n// values that are not reserved (i.e., unicode characters, emoji, etc). The reserved\n// chars are \"/\" and \"%\".\n// Safe to call multiple times on the same path.\n// Normalizes percent-encoded values in `path` to upper-case and decodes percent-encoded\nfunction normalizePath(path) {\n    return path.split(\"/\")\n        .map(normalizeSegment)\n        .join(\"/\");\n}\n// We want to ensure the characters \"%\" and \"/\" remain in percent-encoded\n// form when normalizing paths, so replace them with their encoded form after\n// decoding the rest of the path\nvar SEGMENT_RESERVED_CHARS = /%|\\//g;\nfunction normalizeSegment(segment) {\n    if (segment.length < 3 || segment.indexOf(\"%\") === -1)\n        { return segment; }\n    return decodeURIComponent(segment).replace(SEGMENT_RESERVED_CHARS, encodeURIComponent);\n}\n// We do not want to encode these characters when generating dynamic path segments\n// See https://tools.ietf.org/html/rfc3986#section-3.3\n// sub-delims: \"!\", \"$\", \"&\", \"'\", \"(\", \")\", \"*\", \"+\", \",\", \";\", \"=\"\n// others allowed by RFC 3986: \":\", \"@\"\n//\n// First encode the entire path segment, then decode any of the encoded special chars.\n//\n// The chars \"!\", \"'\", \"(\", \")\", \"*\" do not get changed by `encodeURIComponent`,\n// so the possible encoded chars are:\n// ['%24', '%26', '%2B', '%2C', '%3B', '%3D', '%3A', '%40'].\nvar PATH_SEGMENT_ENCODINGS = /%(?:2(?:4|6|B|C)|3(?:B|D|A)|40)/g;\nfunction encodePathSegment(str) {\n    return encodeURIComponent(str).replace(PATH_SEGMENT_ENCODINGS, decodeURIComponent);\n}\n\nvar escapeRegex = /(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\)/g;\nvar isArray = Array.isArray;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction getParam(params, key) {\n    if (typeof params !== \"object\" || params === null) {\n        throw new Error(\"You must pass an object as the second argument to `generate`.\");\n    }\n    if (!hasOwnProperty.call(params, key)) {\n        throw new Error(\"You must provide param `\" + key + \"` to `generate`.\");\n    }\n    var value = params[key];\n    var str = typeof value === \"string\" ? value : \"\" + value;\n    if (str.length === 0) {\n        throw new Error(\"You must provide a param `\" + key + \"`.\");\n    }\n    return str;\n}\nvar eachChar = [];\neachChar[0 /* Static */] = function (segment, currentState) {\n    var state = currentState;\n    var value = segment.value;\n    for (var i = 0; i < value.length; i++) {\n        var ch = value.charCodeAt(i);\n        state = state.put(ch, false, false);\n    }\n    return state;\n};\neachChar[1 /* Dynamic */] = function (_, currentState) {\n    return currentState.put(47 /* SLASH */, true, true);\n};\neachChar[2 /* Star */] = function (_, currentState) {\n    return currentState.put(-1 /* ANY */, false, true);\n};\neachChar[4 /* Epsilon */] = function (_, currentState) {\n    return currentState;\n};\nvar regex = [];\nregex[0 /* Static */] = function (segment) {\n    return segment.value.replace(escapeRegex, \"\\\\$1\");\n};\nregex[1 /* Dynamic */] = function () {\n    return \"([^/]+)\";\n};\nregex[2 /* Star */] = function () {\n    return \"(.+)\";\n};\nregex[4 /* Epsilon */] = function () {\n    return \"\";\n};\nvar generate = [];\ngenerate[0 /* Static */] = function (segment) {\n    return segment.value;\n};\ngenerate[1 /* Dynamic */] = function (segment, params) {\n    var value = getParam(params, segment.value);\n    if (RouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS) {\n        return encodePathSegment(value);\n    }\n    else {\n        return value;\n    }\n};\ngenerate[2 /* Star */] = function (segment, params) {\n    return getParam(params, segment.value);\n};\ngenerate[4 /* Epsilon */] = function () {\n    return \"\";\n};\nvar EmptyObject = Object.freeze({});\nvar EmptyArray = Object.freeze([]);\n// The `names` will be populated with the paramter name for each dynamic/star\n// segment. `shouldDecodes` will be populated with a boolean for each dyanamic/star\n// segment, indicating whether it should be decoded during recognition.\nfunction parse(segments, route, types) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.length > 0 && route.charCodeAt(0) === 47 /* SLASH */) {\n        route = route.substr(1);\n    }\n    var parts = route.split(\"/\");\n    var names = undefined;\n    var shouldDecodes = undefined;\n    for (var i = 0; i < parts.length; i++) {\n        var part = parts[i];\n        var flags = 0;\n        var type = 0;\n        if (part === \"\") {\n            type = 4 /* Epsilon */;\n        }\n        else if (part.charCodeAt(0) === 58 /* COLON */) {\n            type = 1 /* Dynamic */;\n        }\n        else if (part.charCodeAt(0) === 42 /* STAR */) {\n            type = 2 /* Star */;\n        }\n        else {\n            type = 0 /* Static */;\n        }\n        flags = 2 << type;\n        if (flags & 12 /* Named */) {\n            part = part.slice(1);\n            names = names || [];\n            names.push(part);\n            shouldDecodes = shouldDecodes || [];\n            shouldDecodes.push((flags & 4 /* Decoded */) !== 0);\n        }\n        if (flags & 14 /* Counted */) {\n            types[type]++;\n        }\n        segments.push({\n            type: type,\n            value: normalizeSegment(part)\n        });\n    }\n    return {\n        names: names || EmptyArray,\n        shouldDecodes: shouldDecodes || EmptyArray,\n    };\n}\nfunction isEqualCharSpec(spec, char, negate) {\n    return spec.char === char && spec.negate === negate;\n}\n// A State has a character specification and (`charSpec`) and a list of possible\n// subsequent states (`nextStates`).\n//\n// If a State is an accepting state, it will also have several additional\n// properties:\n//\n// * `regex`: A regular expression that is used to extract parameters from paths\n//   that reached this accepting state.\n// * `handlers`: Information on how to convert the list of captures into calls\n//   to registered handlers with the specified parameters\n// * `types`: How many static, dynamic or star segments in this route. Used to\n//   decide which route to use if multiple registered routes match a path.\n//\n// Currently, State is implemented naively by looping over `nextStates` and\n// comparing a character specification against a character. A more efficient\n// implementation would use a hash of keys pointing at one or more next states.\nvar State = function State(states, id, char, negate, repeat) {\n    this.states = states;\n    this.id = id;\n    this.char = char;\n    this.negate = negate;\n    this.nextStates = repeat ? id : null;\n    this.pattern = \"\";\n    this._regex = undefined;\n    this.handlers = undefined;\n    this.types = undefined;\n};\nState.prototype.regex = function regex$1 () {\n    if (!this._regex) {\n        this._regex = new RegExp(this.pattern);\n    }\n    return this._regex;\n};\nState.prototype.get = function get (char, negate) {\n        var this$1 = this;\n\n    var nextStates = this.nextStates;\n    if (nextStates === null)\n        { return; }\n    if (isArray(nextStates)) {\n        for (var i = 0; i < nextStates.length; i++) {\n            var child = this$1.states[nextStates[i]];\n            if (isEqualCharSpec(child, char, negate)) {\n                return child;\n            }\n        }\n    }\n    else {\n        var child$1 = this.states[nextStates];\n        if (isEqualCharSpec(child$1, char, negate)) {\n            return child$1;\n        }\n    }\n};\nState.prototype.put = function put (char, negate, repeat) {\n    var state;\n    // If the character specification already exists in a child of the current\n    // state, just return that state.\n    if (state = this.get(char, negate)) {\n        return state;\n    }\n    // Make a new state for the character spec\n    var states = this.states;\n    state = new State(states, states.length, char, negate, repeat);\n    states[states.length] = state;\n    // Insert the new state as a child of the current state\n    if (this.nextStates == null) {\n        this.nextStates = state.id;\n    }\n    else if (isArray(this.nextStates)) {\n        this.nextStates.push(state.id);\n    }\n    else {\n        this.nextStates = [this.nextStates, state.id];\n    }\n    // Return the new state\n    return state;\n};\n// Find a list of child states matching the next character\nState.prototype.match = function match (ch) {\n        var this$1 = this;\n\n    var nextStates = this.nextStates;\n    if (!nextStates)\n        { return []; }\n    var returned = [];\n    if (isArray(nextStates)) {\n        for (var i = 0; i < nextStates.length; i++) {\n            var child = this$1.states[nextStates[i]];\n            if (isMatch(child, ch)) {\n                returned.push(child);\n            }\n        }\n    }\n    else {\n        var child$1 = this.states[nextStates];\n        if (isMatch(child$1, ch)) {\n            returned.push(child$1);\n        }\n    }\n    return returned;\n};\nfunction isMatch(spec, char) {\n    return spec.negate ? spec.char !== char && spec.char !== -1 /* ANY */ : spec.char === char || spec.char === -1 /* ANY */;\n}\n// This is a somewhat naive strategy, but should work in a lot of cases\n// A better strategy would properly resolve /posts/:id/new and /posts/edit/:id.\n//\n// This strategy generally prefers more static and less dynamic matching.\n// Specifically, it\n//\n//  * prefers fewer stars to more, then\n//  * prefers using stars for less of the match to more, then\n//  * prefers fewer dynamic segments to more, then\n//  * prefers more static segments to more\nfunction sortSolutions(states) {\n    return states.sort(function (a, b) {\n        var ref = a.types || [0, 0, 0];\n        var astatics = ref[0];\n        var adynamics = ref[1];\n        var astars = ref[2];\n        var ref$1 = b.types || [0, 0, 0];\n        var bstatics = ref$1[0];\n        var bdynamics = ref$1[1];\n        var bstars = ref$1[2];\n        if (astars !== bstars) {\n            return astars - bstars;\n        }\n        if (astars) {\n            if (astatics !== bstatics) {\n                return bstatics - astatics;\n            }\n            if (adynamics !== bdynamics) {\n                return bdynamics - adynamics;\n            }\n        }\n        if (adynamics !== bdynamics) {\n            return adynamics - bdynamics;\n        }\n        if (astatics !== bstatics) {\n            return bstatics - astatics;\n        }\n        return 0;\n    });\n}\nfunction recognizeChar(states, ch) {\n    var nextStates = [];\n    for (var i = 0, l = states.length; i < l; i++) {\n        var state = states[i];\n        nextStates = nextStates.concat(state.match(ch));\n    }\n    return nextStates;\n}\nvar RecognizeResults = function RecognizeResults(queryParams) {\n    this.length = 0;\n    this.queryParams = queryParams || {};\n};\n\nRecognizeResults.prototype.splice = Array.prototype.splice;\nRecognizeResults.prototype.slice = Array.prototype.slice;\nRecognizeResults.prototype.push = Array.prototype.push;\nfunction findHandler(state, originalPath, queryParams) {\n    var handlers = state.handlers;\n    var regex = state.regex();\n    if (!regex || !handlers)\n        { throw new Error(\"state not initialized\"); }\n    var captures = originalPath.match(regex);\n    var currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n    result.length = handlers.length;\n    for (var i = 0; i < handlers.length; i++) {\n        var handler = handlers[i];\n        var names = handler.names;\n        var shouldDecodes = handler.shouldDecodes;\n        var params = EmptyObject;\n        var isDynamic = false;\n        if (names !== EmptyArray && shouldDecodes !== EmptyArray) {\n            for (var j = 0; j < names.length; j++) {\n                isDynamic = true;\n                var name = names[j];\n                var capture = captures && captures[currentCapture++];\n                if (params === EmptyObject) {\n                    params = {};\n                }\n                if (RouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS && shouldDecodes[j]) {\n                    params[name] = capture && decodeURIComponent(capture);\n                }\n                else {\n                    params[name] = capture;\n                }\n            }\n        }\n        result[i] = {\n            handler: handler.handler,\n            params: params,\n            isDynamic: isDynamic\n        };\n    }\n    return result;\n}\nfunction decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, \"%20\");\n    var result;\n    try {\n        result = decodeURIComponent(part);\n    }\n    catch (error) {\n        result = \"\";\n    }\n    return result;\n}\nvar RouteRecognizer = function RouteRecognizer() {\n    this.names = createMap();\n    var states = [];\n    var state = new State(states, 0, -1 /* ANY */, true, false);\n    states[0] = state;\n    this.states = states;\n    this.rootState = state;\n};\nRouteRecognizer.prototype.add = function add (routes, options) {\n    var currentState = this.rootState;\n    var pattern = \"^\";\n    var types = [0, 0, 0];\n    var handlers = new Array(routes.length);\n    var allSegments = [];\n    var isEmpty = true;\n    var j = 0;\n    for (var i = 0; i < routes.length; i++) {\n        var route = routes[i];\n        var ref = parse(allSegments, route.path, types);\n            var names = ref.names;\n            var shouldDecodes = ref.shouldDecodes;\n        // preserve j so it points to the start of newly added segments\n        for (; j < allSegments.length; j++) {\n            var segment = allSegments[j];\n            if (segment.type === 4 /* Epsilon */) {\n                continue;\n            }\n            isEmpty = false;\n            // Add a \"/\" for the new segment\n            currentState = currentState.put(47 /* SLASH */, false, false);\n            pattern += \"/\";\n            // Add a representation of the segment to the NFA and regex\n            currentState = eachChar[segment.type](segment, currentState);\n            pattern += regex[segment.type](segment);\n        }\n        handlers[i] = {\n            handler: route.handler,\n            names: names,\n            shouldDecodes: shouldDecodes\n        };\n    }\n    if (isEmpty) {\n        currentState = currentState.put(47 /* SLASH */, false, false);\n        pattern += \"/\";\n    }\n    currentState.handlers = handlers;\n    currentState.pattern = pattern + \"$\";\n    currentState.types = types;\n    var name;\n    if (typeof options === \"object\" && options !== null && options.as) {\n        name = options.as;\n    }\n    if (name) {\n        // if (this.names[name]) {\n        //   throw new Error(\"You may not add a duplicate route named `\" + name + \"`.\");\n        // }\n        this.names[name] = {\n            segments: allSegments,\n            handlers: handlers\n        };\n    }\n};\nRouteRecognizer.prototype.handlersFor = function handlersFor (name) {\n    var route = this.names[name];\n    if (!route) {\n        throw new Error(\"There is no route named \" + name);\n    }\n    var result = new Array(route.handlers.length);\n    for (var i = 0; i < route.handlers.length; i++) {\n        var handler = route.handlers[i];\n        result[i] = handler;\n    }\n    return result;\n};\nRouteRecognizer.prototype.hasRoute = function hasRoute (name) {\n    return !!this.names[name];\n};\nRouteRecognizer.prototype.generate = function generate$1 (name, params) {\n    var route = this.names[name];\n    var output = \"\";\n    if (!route) {\n        throw new Error(\"There is no route named \" + name);\n    }\n    var segments = route.segments;\n    for (var i = 0; i < segments.length; i++) {\n        var segment = segments[i];\n        if (segment.type === 4 /* Epsilon */) {\n            continue;\n        }\n        output += \"/\";\n        output += generate[segment.type](segment, params);\n    }\n    if (output.charAt(0) !== \"/\") {\n        output = \"/\" + output;\n    }\n    if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n    }\n    return output;\n};\nRouteRecognizer.prototype.generateQueryString = function generateQueryString (params) {\n    var pairs = [];\n    var keys = Object.keys(params);\n    keys.sort();\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = params[key];\n        if (value == null) {\n            continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n            for (var j = 0; j < value.length; j++) {\n                var arrayPair = key + \"[]\" + \"=\" + encodeURIComponent(value[j]);\n                pairs.push(arrayPair);\n            }\n        }\n        else {\n            pair += \"=\" + encodeURIComponent(value);\n            pairs.push(pair);\n        }\n    }\n    if (pairs.length === 0) {\n        return \"\";\n    }\n    return \"?\" + pairs.join(\"&\");\n};\nRouteRecognizer.prototype.parseQueryString = function parseQueryString (queryString) {\n    var pairs = queryString.split(\"&\");\n    var queryParams = {};\n    for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split(\"=\"), key = decodeQueryParamPart(pair[0]), keyLength = key.length, isArray = false, value = (void 0);\n        if (pair.length === 1) {\n            value = \"true\";\n        }\n        else {\n            // Handle arrays\n            if (keyLength > 2 && key.slice(keyLength - 2) === \"[]\") {\n                isArray = true;\n                key = key.slice(0, keyLength - 2);\n                if (!queryParams[key]) {\n                    queryParams[key] = [];\n                }\n            }\n            value = pair[1] ? decodeQueryParamPart(pair[1]) : \"\";\n        }\n        if (isArray) {\n            queryParams[key].push(value);\n        }\n        else {\n            queryParams[key] = value;\n        }\n    }\n    return queryParams;\n};\nRouteRecognizer.prototype.recognize = function recognize (path) {\n    var results;\n    var states = [this.rootState];\n    var queryParams = {};\n    var isSlashDropped = false;\n    var hashStart = path.indexOf(\"#\");\n    if (hashStart !== -1) {\n        path = path.substr(0, hashStart);\n    }\n    var queryStart = path.indexOf(\"?\");\n    if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        queryParams = this.parseQueryString(queryString);\n    }\n    if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n    }\n    var originalPath = path;\n    if (RouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS) {\n        path = normalizePath(path);\n    }\n    else {\n        path = decodeURI(path);\n        originalPath = decodeURI(originalPath);\n    }\n    var pathLen = path.length;\n    if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        originalPath = originalPath.substr(0, originalPath.length - 1);\n        isSlashDropped = true;\n    }\n    for (var i = 0; i < path.length; i++) {\n        states = recognizeChar(states, path.charCodeAt(i));\n        if (!states.length) {\n            break;\n        }\n    }\n    var solutions = [];\n    for (var i$1 = 0; i$1 < states.length; i$1++) {\n        if (states[i$1].handlers) {\n            solutions.push(states[i$1]);\n        }\n    }\n    states = sortSolutions(solutions);\n    var state = solutions[0];\n    if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.pattern && state.pattern.slice(-5) === \"(.+)$\") {\n            originalPath = originalPath + \"/\";\n        }\n        results = findHandler(state, originalPath, queryParams);\n    }\n    return results;\n};\nRouteRecognizer.VERSION = \"0.3.3\";\n// Set to false to opt-out of encoding and decoding path segments.\n// See https://github.com/tildeio/route-recognizer/pull/55\nRouteRecognizer.ENCODE_AND_DECODE_PATH_SEGMENTS = true;\nRouteRecognizer.Normalizer = {\n    normalizeSegment: normalizeSegment, normalizePath: normalizePath, encodePathSegment: encodePathSegment\n};\nRouteRecognizer.prototype.map = map;\n\nexport default RouteRecognizer;\n\n//# sourceMappingURL=route-recognizer.es.js.map\n","import RouteRecognizer from 'route-recognizer';\n\nlet router = new RouteRecognizer();\n\nrouter.map(function(match) {\n  match('/').to('index-route');\n  match('/endpoints/:id').to('endpoint-route');\n});\n\nexport function getHash(location) {\n  let href = location.href;\n  let hashIndex = href.indexOf('#');\n\n  if (hashIndex === -1) {\n    return '/';\n  } else {\n    return href.substr(hashIndex + 1);\n  }\n}\n\nlet changeCallback, lastPath;\nfunction _hashchangeHandler() {\n  let path = getHash(window.location);\n\n  if (path === lastPath) { return; }\n\n  lastPath = path;\n\n  let matches = router.recognize(path);\n\n  changeCallback(matches[0].handler, matches[0].params);\n}\n\nexport function onChange(callback: Function) {\n  changeCallback = callback;\n\n  _hashchangeHandler(); // kick it off the first time\n  window.addEventListener('hashchange', _hashchangeHandler);\n}\n\nexport default router;\n","\n          var config;\n          try {\n            var metaName = 'jsonapi-swagger-ui/config/environment';\n            var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n            config = JSON.parse(decodeURIComponent(rawConfig));\n          }\n          catch(err) {\n            throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n          }\n\n          export default config;\n        ","import Component, { tracked } from '@glimmer/component';\nimport { onChange } from '../../../utils/router';\nimport config from '../../../../config/environment';\nconsole.log('configwas', config)\n\nlet $ = window['$'];\n\nexport default class JsonapiSwaggerUi extends Component {\n  @tracked protected currentRouteComponent: string;\n  @tracked params = {};\n  @tracked swagger = {};\n  @tracked id = 'employee';\n  @tracked routeIsChanging = false;\n  endpointComponent: any;\n\n  @tracked('swagger')\n  get isReady() {\n    return !!this.swagger['info'];\n  }\n\n  constructor(options) {\n    super(options);\n\n    let url = `${window['CONFIG'].basePath}/swagger.json`;\n    fetch(url).then((response) => {\n      response.json().then((json) => {\n        this.swagger = this._buildSwagger(json);\n      });\n    });\n\n    onChange((componentName: string, params: any) => {\n      this.params = params;\n      this.currentRouteComponent = componentName;\n\n      this.routeIsChanging = true;\n      let doRouteChange = () => { this.routeIsChanging = false; }\n      setTimeout(doRouteChange, 1);\n    });\n  }\n\n  _buildSwagger(json) {\n    json.models = [];\n    json.endpoints = [];\n\n    Object.keys(json.paths).forEach((pathName) => {\n      let pathConfig = json.paths[pathName];\n\n      Object.keys(pathConfig).forEach((methodName) => {\n        let methodConfig = pathConfig[methodName];\n\n        let id = `${pathName.replace(/\\//g, '-')}-${methodName}`;\n\n        json.endpoints.push({\n          id: id,\n          path: pathName,\n          label: `${pathName}#${methodName}`,\n          config: methodConfig\n        });\n      });\n    });\n\n    Object.keys(json.definitions).forEach((defName) => {\n      let config = json.definitions[defName];\n      json.models.push({\n        id: defName,\n        label: defName,\n        properties: config.properties\n      });\n    });\n\n    window['swagger'] = json;\n\n    return json;\n  }\n}\n","export default {\"id\":\"LI8ddkWn\",\"block\":\"{\\\"symbols\\\":[\\\"endpoint\\\"],\\\"statements\\\":[[6,\\\"main\\\"],[9,\\\"class\\\",\\\"page-content\\\"],[9,\\\"aria-label\\\",\\\"Content\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"wrapper\\\"],[7],[0,\\\"\\\\n    \\\"],[5,\\\"nav-header\\\",[],[[\\\"@swagger\\\"],[[18,\\\"swagger\\\"]]],{\\\"statements\\\":[],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"container-fluid\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"row\\\"],[7],[0,\\\"\\\\n\\\\n        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"col-md-3 alpha\\\"],[7],[0,\\\"\\\\n          \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"sidebar-nav-fixed left-sidebar\\\"],[7],[0,\\\"\\\\n            \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"well\\\"],[7],[0,\\\"\\\\n              \\\"],[6,\\\"ul\\\"],[9,\\\"class\\\",\\\"nav endpoints\\\"],[7],[0,\\\"\\\\n                \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"nav-header\\\"],[7],[0,\\\"API Reference\\\"],[8],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[19,0,[\\\"swagger\\\",\\\"endpoints\\\"]]],[[\\\"key\\\"],[\\\"@index\\\"]],{\\\"statements\\\":[[0,\\\"                  \\\"],[6,\\\"li\\\"],[7],[0,\\\"\\\\n                    \\\"],[6,\\\"a\\\"],[10,\\\"href\\\",[26,[\\\"#/endpoints/\\\",[19,1,[\\\"id\\\"]]]]],[7],[1,[19,1,[\\\"label\\\"]],false],[8],[0,\\\"\\\\n                  \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"              \\\"],[8],[0,\\\"\\\\n            \\\"],[8],[0,\\\"\\\\n          \\\"],[8],[0,\\\"\\\\n        \\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"unless\\\",[[19,0,[\\\"routeIsChanging\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[1,[25,\\\"component\\\",[[19,0,[\\\"currentRouteComponent\\\"]]],[[\\\"context\\\",\\\"isReady\\\",\\\"swagger\\\",\\\"params\\\"],[[19,0,[]],[19,0,[\\\"isReady\\\"]],[19,0,[\\\"swagger\\\"]],[19,0,[\\\"params\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\\n\\\"]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/jsonapi-swagger-ui/components/jsonapi-swagger-ui\"}};","export default {\"id\":\"75vDVPqU\",\"block\":\"{\\\"symbols\\\":[\\\"@swagger\\\"],\\\"statements\\\":[[6,\\\"header\\\"],[9,\\\"class\\\",\\\"navbar navbar-inverse normal\\\"],[9,\\\"role\\\",\\\"banner\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"container-fluid\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"navbar-header\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"#/\\\"],[9,\\\"class\\\",\\\"navbar-brand\\\"],[7],[1,[19,1,[\\\"info\\\",\\\"title\\\"]],false],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"nav\\\"],[9,\\\"class\\\",\\\"collapse navbar-collapse bs-navbar-collapse\\\"],[9,\\\"role\\\",\\\"navigation\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"ul\\\"],[9,\\\"class\\\",\\\"nav navbar-nav\\\"],[7],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"ul\\\"],[9,\\\"class\\\",\\\"nav navbar-nav navbar-right visible-md visible-lg\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"li\\\"],[7],[0,\\\"\\\\n          \\\"],[6,\\\"a\\\"],[10,\\\"href\\\",[18,\\\"githubURL\\\"],null],[9,\\\"class\\\",\\\"button\\\"],[7],[0,\\\"Fork on Github\\\"],[8],[0,\\\"\\\\n        \\\"],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/jsonapi-swagger-ui/components/nav-header\"}};","export default function props(params) {\n  let obj = params[0];\n\n  let arr = [];\n  Object.keys(obj).forEach((key) => {\n    arr.push({ key, value: obj[key] });\n  });\n  return arr;\n};\n","export default {\"id\":\"wNy8BFEa\",\"block\":\"{\\\"symbols\\\":[\\\"@type\\\"],\\\"statements\\\":[[6,\\\"span\\\"],[10,\\\"class\\\",[26,[\\\"label \\\",[18,\\\"labelClass\\\"]]]],[7],[1,[19,1,[]],false],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/jsonapi-swagger-ui/components/type-check\"}};","import { default as __ui_components_endpoint_route_component__ } from '../src/ui/components/endpoint-route/component';\nimport { default as __ui_components_endpoint_route_template__ } from '../src/ui/components/endpoint-route/template';\nimport { default as __ui_components_eq_helper__ } from '../src/ui/components/eq/helper';\nimport { default as __ui_components_if_helper__ } from '../src/ui/components/if/helper';\nimport { default as __ui_components_index_route_component__ } from '../src/ui/components/index-route/component';\nimport { default as __ui_components_index_route_template__ } from '../src/ui/components/index-route/template';\nimport { default as __ui_components_jsonapi_swagger_ui_component__ } from '../src/ui/components/jsonapi-swagger-ui/component';\nimport { default as __ui_components_jsonapi_swagger_ui_template__ } from '../src/ui/components/jsonapi-swagger-ui/template';\nimport { default as __ui_components_nav_header_component__ } from '../src/ui/components/nav-header/component';\nimport { default as __ui_components_nav_header_template__ } from '../src/ui/components/nav-header/template';\nimport { default as __ui_components_props_helper__ } from '../src/ui/components/props/helper';\nimport { default as __ui_components_type_check_component__ } from '../src/ui/components/type-check/component';\nimport { default as __ui_components_type_check_template__ } from '../src/ui/components/type-check/template';\nexport default {'component:/jsonapi-swagger-ui/components/endpoint-route': __ui_components_endpoint_route_component__,'template:/jsonapi-swagger-ui/components/endpoint-route': __ui_components_endpoint_route_template__,'helper:/jsonapi-swagger-ui/components/eq': __ui_components_eq_helper__,'helper:/jsonapi-swagger-ui/components/if': __ui_components_if_helper__,'component:/jsonapi-swagger-ui/components/index-route': __ui_components_index_route_component__,'template:/jsonapi-swagger-ui/components/index-route': __ui_components_index_route_template__,'component:/jsonapi-swagger-ui/components/jsonapi-swagger-ui': __ui_components_jsonapi_swagger_ui_component__,'template:/jsonapi-swagger-ui/components/jsonapi-swagger-ui': __ui_components_jsonapi_swagger_ui_template__,'component:/jsonapi-swagger-ui/components/nav-header': __ui_components_nav_header_component__,'template:/jsonapi-swagger-ui/components/nav-header': __ui_components_nav_header_template__,'helper:/jsonapi-swagger-ui/components/props': __ui_components_props_helper__,'component:/jsonapi-swagger-ui/components/type-check': __ui_components_type_check_component__,'template:/jsonapi-swagger-ui/components/type-check': __ui_components_type_check_template__};\n","export default {\"app\":{\"name\":\"jsonapi-swagger-ui\",\"rootName\":\"jsonapi-swagger-ui\"},\"types\":{\"application\":{\"definitiveCollection\":\"main\"},\"component\":{\"definitiveCollection\":\"components\"},\"component-test\":{\"unresolvable\":true},\"helper\":{\"definitiveCollection\":\"components\"},\"helper-test\":{\"unresolvable\":true},\"renderer\":{\"definitiveCollection\":\"main\"},\"template\":{\"definitiveCollection\":\"components\"}},\"collections\":{\"main\":{\"types\":[\"application\",\"renderer\"]},\"components\":{\"group\":\"ui\",\"types\":[\"component\",\"component-test\",\"template\",\"helper\",\"helper-test\"],\"defaultType\":\"component\",\"privateCollections\":[\"utils\"]},\"styles\":{\"group\":\"ui\",\"unresolvable\":true},\"utils\":{\"unresolvable\":true}}};\n","import Application from '@glimmer/application';\nimport Resolver, { BasicModuleRegistry } from '@glimmer/resolver';\nimport moduleMap from '../config/module-map';\nimport resolverConfiguration from '../config/resolver-configuration';\n\nexport default class App extends Application {\n  constructor() {\n    let moduleRegistry = new BasicModuleRegistry(moduleMap);\n    let resolver = new Resolver(resolverConfiguration, moduleRegistry);\n\n    super({\n      rootName: resolverConfiguration.app.rootName,\n      resolver\n    });\n  }\n}\n","import App from './main';\nimport { ComponentManager, setPropertyDidChange } from '@glimmer/component';\n\nconst app = new App();\nconst containerElement = document.getElementById('app');\n\nsetPropertyDidChange(() => {\n  app.scheduleRerender();\n});\n\napp.registerInitializer({\n  initialize(registry) {\n    registry.register(`component-manager:/${app.rootName}/component-managers/main`, ComponentManager);\n  }\n});\n\napp.renderComponent('jsonapi-swagger-ui', containerElement, null);\n\napp.boot();\n"],"names":["unwrap","val","undefined","Error","expect","message","unreachable","typePos","lastOperand","debugAssert","test","msg","LogLevel","NullConsole","_message","ALWAYS","Logger","console","level","f","force","stackTrace","skipped","Trace","log","trace","Debug","Warn","warn","error","_console","LOG_LEVEL","objKeys","Object","keys","assign","obj","i","arguments","length","assignment","j","key","fillNulls","count","arr","Array","GUID","initializeGuid","object","_guid","ensureGuid","proto","create","EmptyObject","prototype","dict","DictSet","callback","dictKeys","Stack","stack","current","item","push","pop","len","ListNode","value","next","prev","LinkedList","clear","fromSlice","slice","list","forEachNode","n","append","clone","_head","_tail","out","start","end","reference","before","node","needle","tail","remove","insertBefore","ListSlice","head","toList","nextNode","EMPTY_SLICE","HAS_NATIVE_WEAKMAP","hasWeakMap","WeakMap","instance","toString","call","HAS_TYPED_ARRAYS","Uint32Array","A","EMPTY_ARRAY","freeze","Register","AppendOpcodes","evaluateOpcode","name","evaluate","vm","opcode","type","func","APPEND_OPCODES","AbstractOpcode","guid","UpdatingOpcode","CONSTANT","INITIAL","VOLATILE","NaN","RevisionTag","snapshot","id","VALUE","VALIDATE","TagWrapper","inner","register","Type","tag","validate","_tag","CONSTANT_TAG","VOLATILE_TAG","$REVISION","CURRENT_TAG","DirtyableTag","revision","combineTagged","tagged","optimized","l","_combine","combineSlice","combine","tags","TagsPair","TagsCombinator","CachedTag","lastChecked","lastValue","compute","first","second","Math","max","UpdatableTag","lastUpdated","invalidate","CachedReference","lastRevision","MapperReference","mapper","map","ReferenceCache","initialized","initialize","NOT_MODIFIED","isModified","ConstReference","isConst","ListItem","iterable","result","valueReferenceFor","retained","seen","memo","memoReferenceFor","updateValueReference","updateMemoReference","IterationArtifacts","iterator","iterate","isEmpty","ReferenceIterator","artifacts","Phase","IteratorSynchronizer","target","phase","Append","nextAppend","Prune","nextPrune","Done","nextDone","seek","startPrune","nextRetain","has","nextMove","nextInsert","update","retain","found","get","wasSeen","move","advanceToKey","insert","shouldRemove","delete","reset","done","PrimitiveReference","UNDEFINED_REFERENCE","NULL_REFERENCE","TRUE_REFERENCE","FALSE_REFERENCE","ValueReference","StringReference","_key","lengthReference","ConditionalReference","toBool","ConcatReference","parts","castToString","join","String","add","op1","_helper","helper","constants","getFunction","args","_function","symbol","expr","referenceForSymbol","scope","bindSymbol","_name","getString","locals","getPartialMap","ref","getSelf","symbols","op2","bindCallerScope","pushRootScope","_block","block","getBlock","hasBlock","hasBlockParams","symbolTable","parameters","reverse","Arguments","positional","PositionalArguments","named","NamedArguments","setup","synthetic","names","fromTop","namedCount","positionalCount","pos","at","capture","_references","references","position","CapturedPositionalArguments","valueOf","idx","parseInt","_names","_realNames","sliceName","indexOf","CapturedNamedArguments","_map","pushChildScope","popScope","pushDynamicScope","popDynamicScope","number","other","getOther","primitive","flag","offset","fetchValue","dup","load","fetch","getArray","bindDynamicScope","pushFrame","popFrame","enter","exit","compileDynamic","env","compiled","compileStatic","handle","_invoker","invoker","invoke","goto","cache","peek","updateWith","Assert","return","relative","returnTo","ConstTest","_env","SimpleTest","EnvironmentTest","toConditionalReference","_func","operand","revalidate","throw","expected","JSON","stringify","e","JumpIfNotModifiedOpcode","alwaysRevalidate","inspect","DidModifyOpcode","didModify","LabelOpcode","label","text","elements","appendText","appendComment","openElement","tagName","operations","elementRef","nextSiblingRef","element","nextSibling","isConstReference","pushRemoteElement","popRemoteElement","ClassList","toClassName","ClassListReference","ret","SimpleElementOperations","opcodes","classList","addClass","getAppendOperations","setAttribute","namespace","isTrusting","attributeManager","attributeFor","attribute","DynamicAttribute","addAttribute","nsAttribute","toReference","flush","ComponentElementOperations","attributeNames","attributes","shouldAddAttribute","StaticAttribute","action","expectOperations","expectConstructing","flushElement","closeElement","_value","op3","_namespace","setStaticAttributeNS","setStaticAttribute","_manager","manager","constructing","updateOperations","dynamicScope","modifier","scheduleInstallModifier","destructor","getDestructor","newDestroyable","UpdateModifierOpcode","scheduleUpdateModifier","updateAttribute","PatchElementOpcode","formattedElement","formatElement","toLowerCase","trusting","setDynamicAttributeNS","setDynamicAttribute","operation","patch","toJSON","_definition","definition","component","ARGS","_state","preparedArgs","prepareArgs","atNames","atName","flags","state","hasDefaultBlock","UpdateComponentOpcode","beginCacheGroup","pushSimpleBlock","didCreateElement","layoutFor","bounds","popBlock","didRenderLayout","didCreate","DidUpdateLayoutOpcode","commitCacheGroup","componentTag","getTag","_vm","didUpdateLayout","didUpdate","Cursor","ConcreteBounds","parentNode","last","SingleNodeBounds","single","parent","parentElement","firstNode","lastNode","removeChild","First","Last","Fragment","ElementStack","elementStack","nextSiblingStack","blockStack","dom","getDOM","defaultOperations","forInitialRender","resume","tracker","pushBlockTracker","method","topElement","SimpleBlockTracker","UpdatableBlockTracker","isRemote","newBounds","BlockListTracker","finalize","_operations","createElement","pushElement","RemoteBlockTracker","popElement","d","string","createTextNode","newNode","comment","createComment","addStaticAttribute","addStaticAttributeNS","addDynamicAttribute","addDynamicAttributeNS","destroyables","nesting","destroy","didDestroy","boundList","_element","_node","_bounds","_d","_stack","COMPONENT_DEFINITION_BRAND","isComponentDefinition","ComponentDefinition","ComponentClass","isSafeString","toHTML","isNode","nodeType","isString","Upsert","cautiousInsert","cursor","TextUpsert","SafeStringUpsert","NodeUpsert","trustingInsert","HTMLUpsert","textNode","_dom","nodeValue","insertHTMLBefore","lastStringValue","stringValue","insertNodeBefore","normalizeTextValue","normalizeTrustedValue","normalizeValue","AppendDynamicOpcode","normalized","normalize","upsert","IsComponentDefinitionReference","UpdateOpcode","OptimizedCautiousAppendOpcode","_reference","OptimizedCautiousUpdateOpcode","OptimizedTrustingAppendOpcode","OptimizedTrustingUpdateOpcode","debugCallback","context","info","ScopeInspector","evalInfo","slot","getSymbol","path","split","evalScope","getEvalScope","reduce","r","part","_symbols","_evalInfo","inspector","template","asPartial","IterablePresenceReference","listRef","iterableFor","relativeStart","enterList","exitList","breaks","tryOpcode","enterItem","Opcodes","is","variant","isArray","Expressions","isUnknown","Unknown","isGet","Get","isConcat","Concat","isHelper","Helper","isHasBlock","HasBlock","isHasBlockParams","HasBlockParams","isUndefined","Undefined","isClientSide","ClientSideExpression","isMaybeLocal","MaybeLocal","isPrimitiveValue","Statements","isText","Text","isAppend","isComment","Comment","isModifier","Modifier","isBlock","Block","isComponent","Component","isOpenElement","OpenElement","isFlushElement","FlushElement","isCloseElement","CloseElement","isStaticAttr","StaticAttr","isDynamicAttr","DynamicAttr","isYield","Yield","isPartial","Partial","isDynamicArg","DynamicArg","isStaticArg","StaticArg","isTrustingAttr","TrustingAttr","isDebugger","Debugger","ClientSideStatement","isAttribute","isArgument","isParameter","getParameterName","s","Ops","CompiledStaticTemplate","CompiledDynamicTemplate","compileLayout","compilable","builder","ComponentLayoutBuilder","compile","layout","WrappedBuilder","componentName","UnwrappedBuilder","attrs","ComponentTagBuilder","ComponentAttrsBuilder","meta","templateMeta","dynamicTag","getDynamic","staticTag","getStatic","b","startLabels","s1","jumpUnless","pushComponentOperations","openDynamicElement","openElementWithOperations","s0","buffer","invokeStatic","asBlock","stopLabels","hasEval","concat","ATTRS_BLOCK","asLayout","isDynamic","isStatic","staticTagName","dynamicTagName","ClientSide","FunctionExpression","ComponentBuilder","params","hash","_default","inverse","pushComponentManager","invokeComponent","definitionArgs","getDefinition","a","compileArgs","pushDynamicComponentManager","OpcodeBuilderDSL","RawInlineBlock","statements","CompilableTemplate","Labels","labels","targets","index","Target","program","heap","setbyaddr","BasicOpcodeBuilder","labelsStack","malloc","size","nextPos","finishMalloc","hasDefault","hasInverse","array","Opcode","dynamicContent","content","_comment","reserve","sp","_primitive","callerCount","calleeCount","min","fp","setVariable","testFunc","function","_string","isCompilableExpression","OpcodeBuilder","pushImmediate","pushArgs","expression","trustingAppend","cautiousAppend","pushBlock","beginComponentTransaction","createComponent","registerComponentDestructor","getComponentSelf","getComponentLayout","invokeDynamic","InvokeDynamicLayout","scan","commitComponentTransaction","WireFormat","Compilers","funcs","sexp","STATEMENTS","CLIENT_SIDE","_sexp","hasModifier","lookupModifier","staticAttr","dynamicAttr","dynamicAttrNS","openPrimitiveElement","OpenComponentElement","DidCreateElement","DidRenderLayout","macros","inlines","returned","E","guardedAppend","_template","_inverse","templateBlock","inverseBlock","blocks","bindSelf","bindBlock","lookup","$eval","callerNames","numPositionalArgs","inverseSymbol","defaultSymbol","defaultBlock","bindEvalScope","GlimmerDebug","hasComponentDefinition","child","attrsBlock","getComponentDefinition","stmts","PartialInvoker","outerSymbols","_partial","partial","partialSymbols","outerScope","partialScope","getCallerScope","bind","bindPartialMap","nameRef","hasPartial","lookupPartial","getPartialTemplate","compileDynamicBlock","InvokeDynamicYield","pushCallerScope","table","fromBase","to","compileList","debugger","EXPRESSIONS","CLIENT_SIDE_EXPRS","hasHelper","resolveMaybeLocal","getVariable","getProperty","lookupHelper","Blocks","missing","handled","BLOCKS","Inlines","INLINES","populateBuiltins","_hash","jump","jumpIf","putIterator","values","_params","expressions","compileStatement","statement","compileStatements","compiledStatic","compiledDynamic","staticBlock","Scanner","newStatements","toplevel","inTopLevel","addFallback","decorateTopLevelElement","attrsSymbol","Constants","strings","arrays","functions","others","badProtocols","badTags","badTagsForDataURI","badAttributes","badAttributesForDataURI","checkURI","checkDataURI","requiresSanitization","sanitizeAttributeValue","toUpperCase","str","protocol","protocolForURL","normalizeProperty","slotName","lower","preferAttr","ATTR_OVERRIDES","form","propName","innerHTMLWrapper","depth","after","domChanges","document","DOMChangesClass","shouldApplyFix","div","DOMChangesWithInnerHTMLFix","html","parentTag","wrapper","fixInnerHTML","treeConstruction","DOMTreeConstructionClass","DOMTreeConstructionWithInnerHTMLFix","referenceNode","wrappedHtml","innerHTML","childNodes","moveNodesBefore","SVG_NAMESPACE","svgNamespace","DOMChangesWithSVGInnerHTMLFix","namespaceURI","fixSVG","TreeConstructionClass","TreeConstructionWithSVGInnerHTMLFix","firstChild","svg","createElementNS","DOMChangesWithTextNodeMergingFix","uselessComment","didSetUselessComment","nextPrevious","previousSibling","lastChild","TreeConstructionWithTextNodeMergingFix","mergingTextDiv","insertAdjacentHTML","SVG_INTEGRATION_POINTS","foreignObject","desc","title","BLACKLIST_TABLE","forEach","doc","source","DOMOperations","setupUselessElement","uselessElement","isElementInSVGNamespace","isHTMLIntegrationPoint","_parent","data","DOM","TreeConstruction","setAttributeNS","appliedTreeContruction","treeConstructionNodeMergingFix","treeConstructionTableElementFix","treeConstructionSvgElementFix","DOMTreeConstruction","DOMChanges","removeAttribute","removeAttributeNS","isDocumentFragment","_useless","_nextSibling","useless","HTMLElement","Node","DOCUMENT_FRAGMENT_NODE","domChangesNodeMergingFix","domChangesTableElementFix","domChangesSvgElementFix","defaultManagers","attr","_isTrusting","isSVG","defaultAttributeManagers","defaultPropertyManagers","SafePropertyManager","isUserInputValue","INPUT_VALUE_PROPERTY_MANAGER","isOptionSelected","OPTION_SELECTED_MANAGER","PropertyManager","SafeAttributeManager","AttributeManager","normalizedValue","normalizeAttributeValue","isAttrRemovalValue","InputValuePropertyManager","input","currentValue","OptionSelectedManager","option","selected","Scope","callerScope","slots","partialMap","root","self","refs","init","sized","set","RangeError","Transaction","scheduledInstallManagers","scheduledInstallModifiers","scheduledUpdateModifierManagers","scheduledUpdateModifiers","createdComponents","createdManagers","updatedComponents","updatedManagers","destructors","install","getbyaddr","TableSlotState","Heap","address","finish","Pointer","compactedSize","Purged","Freed","Allocated","Program","_opcode","Environment","appendOperations","_macros","_transaction","transaction","commit","UpdatingVM","frameStack","handler","try","frame","nextStatement","op","ops","UpdatingVMFrame","handleException","BlockOpcode","children","details","toArray","TryOpcode","VM","updating","execute","EvaluationStack","restore","updatingOpcodeStack","json","ListRevalidationDelegate","marker","didInsert","didDelete","vmForInsertion","_item","_memo","entry","didInitializeChildren","ListBlockOpcode","lastIterated","listDidChange","insertAfter","synchronizer","sync","exceptionHandler","RenderResult","empty","top","items","dynamicScopeStack","scopeStack","cacheGroups","listBlockStack","pc","ra","t0","t1","getaddr","initial","END","guard","pushUpdatableBlock","gethandle","didEnter","listBlock","pushBlockList","childScope","bindCaller","TemplateIterator","clientId","templateFactory","templateId","parsedBlock","envMeta","newMeta","parse","ScannableTemplate","rawBlock","entryPoint","scanner","appendTo","asEntryPoint","scanEntryPoint","compilationMeta","scanLayout","scanBlock","NodeType","EMPTY_CACHE","PathReference","property","chains","lastParentValue","parentValue","_parentValue","ReferenceType","Meta","for","referenceTypeFor","PropertyReference","prop","_getChains","RootReference","NOOP_DESTROY","ConstPath","_property","ConstRoot","_parts","_prop","ConstMeta","CLASS_META","hasOwnProperty","RootReferenceFactory","DefaultPathReferenceFactory","referenceTypes","propertyMetadata","_meta","isExtensible","MetaToUse","constructor","classMeta","InstanceMetaConstructor","exists","metadataForProperty","rootCache","_outer","isSpecifierObjectAbsolute","createObject","createMap","matcher","delegate","willAddRoute","addChild","Matcher","routes","match","generateMatch","contextEntered","startingPath","fullPath","addRoute","routeArray","substr","route","eachRoute","baseRoute","binding","paths","nested","addRouteCallback","normalizePath","normalizeSegment","SEGMENT_RESERVED_CHARS","segment","decodeURIComponent","replace","encodeURIComponent","PATH_SEGMENT_ENCODINGS","encodePathSegment","escapeRegex","getParam","eachChar","currentState","ch","charCodeAt","put","_","regex","generate","RouteRecognizer","ENCODE_AND_DECODE_PATH_SEGMENTS","EmptyArray","segments","types","shouldDecodes","isEqualCharSpec","spec","char","negate","State","states","repeat","nextStates","pattern","_regex","handlers","regex$1","RegExp","this$1","child$1","isMatch","sortSolutions","sort","astatics","adynamics","astars","ref$1","bstatics","bdynamics","bstars","recognizeChar","RecognizeResults","queryParams","splice","findHandler","originalPath","captures","currentCapture","decodeQueryParamPart","rootState","options","allSegments","as","handlersFor","hasRoute","generate$1","output","charAt","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","results","isSlashDropped","hashStart","queryStart","decodeURI","pathLen","solutions","i$1","VERSION","Normalizer","config","metaName","rawConfig","querySelector","getAttribute","err","__decorate","__ui_components_endpoint_route_component__","__ui_components_endpoint_route_template__","__ui_components_eq_helper__","__ui_components_if_helper__","__ui_components_index_route_component__","__ui_components_index_route_template__","__ui_components_jsonapi_swagger_ui_component__","__ui_components_jsonapi_swagger_ui_template__","__ui_components_nav_header_component__","__ui_components_nav_header_template__","__ui_components_props_helper__","__ui_components_type_check_component__","__ui_components_type_check_template__"],"mappings":"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"}